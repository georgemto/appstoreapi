/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InAppPurchaseLocalizationCreateRequest from '../model/InAppPurchaseLocalizationCreateRequest';
import InAppPurchaseLocalizationResponse from '../model/InAppPurchaseLocalizationResponse';
import InAppPurchaseLocalizationUpdateRequest from '../model/InAppPurchaseLocalizationUpdateRequest';

/**
* InAppPurchaseLocalizations service.
* @module api/InAppPurchaseLocalizationsApi
* @version 4.1
*/
export default class InAppPurchaseLocalizationsApi {

    /**
    * Constructs a new InAppPurchaseLocalizationsApi. 
    * @alias module:api/InAppPurchaseLocalizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the inAppPurchaseLocalizationsCreateInstance operation.
     * @callback module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/InAppPurchaseLocalizationCreateRequest} inAppPurchaseLocalizationCreateRequest InAppPurchaseLocalization representation
     * @param {module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseLocalizationResponse}
     */
    inAppPurchaseLocalizationsCreateInstance(inAppPurchaseLocalizationCreateRequest, callback) {
      let postBody = inAppPurchaseLocalizationCreateRequest;
      // verify the required parameter 'inAppPurchaseLocalizationCreateRequest' is set
      if (inAppPurchaseLocalizationCreateRequest === undefined || inAppPurchaseLocalizationCreateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchaseLocalizationCreateRequest' when calling inAppPurchaseLocalizationsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseLocalizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseLocalizationsDeleteInstance operation.
     * @callback module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    inAppPurchaseLocalizationsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseLocalizationsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseLocalizations/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseLocalizationsGetInstance operation.
     * @callback module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseLocalizations] the fields to include for returned resources of type inAppPurchaseLocalizations
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseLocalizationResponse}
     */
    inAppPurchaseLocalizationsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseLocalizationsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseLocalizations'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseLocalizations/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseLocalizationsUpdateInstance operation.
     * @callback module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/InAppPurchaseLocalizationUpdateRequest} inAppPurchaseLocalizationUpdateRequest InAppPurchaseLocalization representation
     * @param {module:api/InAppPurchaseLocalizationsApi~inAppPurchaseLocalizationsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseLocalizationResponse}
     */
    inAppPurchaseLocalizationsUpdateInstance(id, inAppPurchaseLocalizationUpdateRequest, callback) {
      let postBody = inAppPurchaseLocalizationUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseLocalizationsUpdateInstance");
      }
      // verify the required parameter 'inAppPurchaseLocalizationUpdateRequest' is set
      if (inAppPurchaseLocalizationUpdateRequest === undefined || inAppPurchaseLocalizationUpdateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchaseLocalizationUpdateRequest' when calling inAppPurchaseLocalizationsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseLocalizations/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
