/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnalyticsReportRequestCreateRequest from '../model/AnalyticsReportRequestCreateRequest';
import AnalyticsReportRequestReportsLinkagesResponse from '../model/AnalyticsReportRequestReportsLinkagesResponse';
import AnalyticsReportRequestResponse from '../model/AnalyticsReportRequestResponse';
import AnalyticsReportsResponse from '../model/AnalyticsReportsResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AnalyticsReportRequests service.
* @module api/AnalyticsReportRequestsApi
* @version 4.1
*/
export default class AnalyticsReportRequestsApi {

    /**
    * Constructs a new AnalyticsReportRequestsApi. 
    * @alias module:api/AnalyticsReportRequestsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsReportRequestsCreateInstance operation.
     * @callback module:api/AnalyticsReportRequestsApi~analyticsReportRequestsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportRequestResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AnalyticsReportRequestCreateRequest} analyticsReportRequestCreateRequest AnalyticsReportRequest representation
     * @param {module:api/AnalyticsReportRequestsApi~analyticsReportRequestsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportRequestResponse}
     */
    analyticsReportRequestsCreateInstance(analyticsReportRequestCreateRequest, callback) {
      let postBody = analyticsReportRequestCreateRequest;
      // verify the required parameter 'analyticsReportRequestCreateRequest' is set
      if (analyticsReportRequestCreateRequest === undefined || analyticsReportRequestCreateRequest === null) {
        throw new Error("Missing the required parameter 'analyticsReportRequestCreateRequest' when calling analyticsReportRequestsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportRequestResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReportRequests', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportRequestsDeleteInstance operation.
     * @callback module:api/AnalyticsReportRequestsApi~analyticsReportRequestsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AnalyticsReportRequestsApi~analyticsReportRequestsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    analyticsReportRequestsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportRequestsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/analyticsReportRequests/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportRequestsGetInstance operation.
     * @callback module:api/AnalyticsReportRequestsApi~analyticsReportRequestsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportRequestResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAnalyticsReportRequests] the fields to include for returned resources of type analyticsReportRequests
     * @param {Array.<module:model/String>} [fieldsAnalyticsReports] the fields to include for returned resources of type analyticsReports
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitReports] maximum number of related reports returned (when they are included)
     * @param {module:api/AnalyticsReportRequestsApi~analyticsReportRequestsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportRequestResponse}
     */
    analyticsReportRequestsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportRequestsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[analyticsReportRequests]': this.apiClient.buildCollectionParam(opts['fieldsAnalyticsReportRequests'], 'csv'),
        'fields[analyticsReports]': this.apiClient.buildCollectionParam(opts['fieldsAnalyticsReports'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[reports]': opts['limitReports']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportRequestResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReportRequests/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportRequestsReportsGetToManyRelated operation.
     * @callback module:api/AnalyticsReportRequestsApi~analyticsReportRequestsReportsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterName] filter by attribute 'name'
     * @param {Array.<module:model/String>} [filterCategory] filter by attribute 'category'
     * @param {Array.<module:model/String>} [fieldsAnalyticsReports] the fields to include for returned resources of type analyticsReports
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AnalyticsReportRequestsApi~analyticsReportRequestsReportsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportsResponse}
     */
    analyticsReportRequestsReportsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportRequestsReportsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[name]': this.apiClient.buildCollectionParam(opts['filterName'], 'csv'),
        'filter[category]': this.apiClient.buildCollectionParam(opts['filterCategory'], 'csv'),
        'fields[analyticsReports]': this.apiClient.buildCollectionParam(opts['fieldsAnalyticsReports'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportsResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReportRequests/{id}/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportRequestsReportsGetToManyRelationship operation.
     * @callback module:api/AnalyticsReportRequestsApi~analyticsReportRequestsReportsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportRequestReportsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AnalyticsReportRequestsApi~analyticsReportRequestsReportsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportRequestReportsLinkagesResponse}
     */
    analyticsReportRequestsReportsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportRequestsReportsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportRequestReportsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReportRequests/{id}/relationships/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
