/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnalyticsReportInstancesLinkagesResponse from '../model/AnalyticsReportInstancesLinkagesResponse';
import AnalyticsReportInstancesResponse from '../model/AnalyticsReportInstancesResponse';
import AnalyticsReportResponse from '../model/AnalyticsReportResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AnalyticsReports service.
* @module api/AnalyticsReportsApi
* @version 4.1
*/
export default class AnalyticsReportsApi {

    /**
    * Constructs a new AnalyticsReportsApi. 
    * @alias module:api/AnalyticsReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsReportsGetInstance operation.
     * @callback module:api/AnalyticsReportsApi~analyticsReportsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAnalyticsReports] the fields to include for returned resources of type analyticsReports
     * @param {module:api/AnalyticsReportsApi~analyticsReportsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportResponse}
     */
    analyticsReportsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[analyticsReports]': this.apiClient.buildCollectionParam(opts['fieldsAnalyticsReports'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReports/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportsInstancesGetToManyRelated operation.
     * @callback module:api/AnalyticsReportsApi~analyticsReportsInstancesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportInstancesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterGranularity] filter by attribute 'granularity'
     * @param {Array.<String>} [filterProcessingDate] filter by attribute 'processingDate'
     * @param {Array.<module:model/String>} [fieldsAnalyticsReportInstances] the fields to include for returned resources of type analyticsReportInstances
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AnalyticsReportsApi~analyticsReportsInstancesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportInstancesResponse}
     */
    analyticsReportsInstancesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportsInstancesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[granularity]': this.apiClient.buildCollectionParam(opts['filterGranularity'], 'csv'),
        'filter[processingDate]': this.apiClient.buildCollectionParam(opts['filterProcessingDate'], 'csv'),
        'fields[analyticsReportInstances]': this.apiClient.buildCollectionParam(opts['fieldsAnalyticsReportInstances'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportInstancesResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReports/{id}/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsReportsInstancesGetToManyRelationship operation.
     * @callback module:api/AnalyticsReportsApi~analyticsReportsInstancesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnalyticsReportInstancesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AnalyticsReportsApi~analyticsReportsInstancesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnalyticsReportInstancesLinkagesResponse}
     */
    analyticsReportsInstancesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling analyticsReportsInstancesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnalyticsReportInstancesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/analyticsReports/{id}/relationships/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
