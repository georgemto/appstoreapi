/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomerReviewResponseV1CreateRequest from '../model/CustomerReviewResponseV1CreateRequest';
import CustomerReviewResponseV1Response from '../model/CustomerReviewResponseV1Response';
import ErrorResponse from '../model/ErrorResponse';

/**
* CustomerReviewResponses service.
* @module api/CustomerReviewResponsesApi
* @version 4.1
*/
export default class CustomerReviewResponsesApi {

    /**
    * Constructs a new CustomerReviewResponsesApi. 
    * @alias module:api/CustomerReviewResponsesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customerReviewResponsesCreateInstance operation.
     * @callback module:api/CustomerReviewResponsesApi~customerReviewResponsesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerReviewResponseV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/CustomerReviewResponseV1CreateRequest} customerReviewResponseV1CreateRequest CustomerReviewResponse representation
     * @param {module:api/CustomerReviewResponsesApi~customerReviewResponsesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerReviewResponseV1Response}
     */
    customerReviewResponsesCreateInstance(customerReviewResponseV1CreateRequest, callback) {
      let postBody = customerReviewResponseV1CreateRequest;
      // verify the required parameter 'customerReviewResponseV1CreateRequest' is set
      if (customerReviewResponseV1CreateRequest === undefined || customerReviewResponseV1CreateRequest === null) {
        throw new Error("Missing the required parameter 'customerReviewResponseV1CreateRequest' when calling customerReviewResponsesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomerReviewResponseV1Response;
      return this.apiClient.callApi(
        '/v1/customerReviewResponses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerReviewResponsesDeleteInstance operation.
     * @callback module:api/CustomerReviewResponsesApi~customerReviewResponsesDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/CustomerReviewResponsesApi~customerReviewResponsesDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    customerReviewResponsesDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerReviewResponsesDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/customerReviewResponses/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerReviewResponsesGetInstance operation.
     * @callback module:api/CustomerReviewResponsesApi~customerReviewResponsesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomerReviewResponseV1Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsCustomerReviewResponses] the fields to include for returned resources of type customerReviewResponses
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/CustomerReviewResponsesApi~customerReviewResponsesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomerReviewResponseV1Response}
     */
    customerReviewResponsesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerReviewResponsesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[customerReviewResponses]': this.apiClient.buildCollectionParam(opts['fieldsCustomerReviewResponses'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomerReviewResponseV1Response;
      return this.apiClient.callApi(
        '/v1/customerReviewResponses/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
