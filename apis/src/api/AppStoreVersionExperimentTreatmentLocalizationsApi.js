/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppPreviewSetsResponse from '../model/AppPreviewSetsResponse';
import AppScreenshotSetsResponse from '../model/AppScreenshotSetsResponse';
import AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse from '../model/AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse';
import AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse from '../model/AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse';
import AppStoreVersionExperimentTreatmentLocalizationCreateRequest from '../model/AppStoreVersionExperimentTreatmentLocalizationCreateRequest';
import AppStoreVersionExperimentTreatmentLocalizationResponse from '../model/AppStoreVersionExperimentTreatmentLocalizationResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppStoreVersionExperimentTreatmentLocalizations service.
* @module api/AppStoreVersionExperimentTreatmentLocalizationsApi
* @version 4.1
*/
export default class AppStoreVersionExperimentTreatmentLocalizationsApi {

    /**
    * Constructs a new AppStoreVersionExperimentTreatmentLocalizationsApi. 
    * @alias module:api/AppStoreVersionExperimentTreatmentLocalizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterPreviewType] filter by attribute 'previewType'
     * @param {Array.<String>} [filterAppStoreVersionLocalization] filter by id(s) of related 'appStoreVersionLocalization'
     * @param {Array.<String>} [filterAppCustomProductPageLocalization] filter by id(s) of related 'appCustomProductPageLocalization'
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsAppCustomProductPageLocalizations] the fields to include for returned resources of type appCustomProductPageLocalizations
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionExperimentTreatmentLocalizations] the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations
     * @param {Array.<module:model/String>} [fieldsAppPreviews] the fields to include for returned resources of type appPreviews
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppPreviews] maximum number of related appPreviews returned (when they are included)
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewSetsResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[previewType]': this.apiClient.buildCollectionParam(opts['filterPreviewType'], 'csv'),
        'filter[appStoreVersionLocalization]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionLocalization'], 'csv'),
        'filter[appCustomProductPageLocalization]': this.apiClient.buildCollectionParam(opts['filterAppCustomProductPageLocalization'], 'csv'),
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[appCustomProductPageLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppCustomProductPageLocalizations'], 'csv'),
        'fields[appStoreVersionExperimentTreatmentLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionExperimentTreatmentLocalizations'], 'csv'),
        'fields[appPreviews]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviews'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appPreviews]': opts['limitAppPreviews']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreviewSetsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelationship operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/relationships/appPreviewSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppScreenshotSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterScreenshotDisplayType] filter by attribute 'screenshotDisplayType'
     * @param {Array.<String>} [filterAppStoreVersionLocalization] filter by id(s) of related 'appStoreVersionLocalization'
     * @param {Array.<String>} [filterAppCustomProductPageLocalization] filter by id(s) of related 'appCustomProductPageLocalization'
     * @param {Array.<module:model/String>} [fieldsAppScreenshotSets] the fields to include for returned resources of type appScreenshotSets
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsAppCustomProductPageLocalizations] the fields to include for returned resources of type appCustomProductPageLocalizations
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionExperimentTreatmentLocalizations] the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations
     * @param {Array.<module:model/String>} [fieldsAppScreenshots] the fields to include for returned resources of type appScreenshots
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppScreenshots] maximum number of related appScreenshots returned (when they are included)
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppScreenshotSetsResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[screenshotDisplayType]': this.apiClient.buildCollectionParam(opts['filterScreenshotDisplayType'], 'csv'),
        'filter[appStoreVersionLocalization]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionLocalization'], 'csv'),
        'filter[appCustomProductPageLocalization]': this.apiClient.buildCollectionParam(opts['filterAppCustomProductPageLocalization'], 'csv'),
        'fields[appScreenshotSets]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshotSets'], 'csv'),
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[appCustomProductPageLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppCustomProductPageLocalizations'], 'csv'),
        'fields[appStoreVersionExperimentTreatmentLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionExperimentTreatmentLocalizations'], 'csv'),
        'fields[appScreenshots]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshots'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appScreenshots]': opts['limitAppScreenshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppScreenshotSetsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelationship operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/relationships/appScreenshotSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsCreateInstance operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequest} appStoreVersionExperimentTreatmentLocalizationCreateRequest AppStoreVersionExperimentTreatmentLocalization representation
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionExperimentTreatmentLocalizationResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsCreateInstance(appStoreVersionExperimentTreatmentLocalizationCreateRequest, callback) {
      let postBody = appStoreVersionExperimentTreatmentLocalizationCreateRequest;
      // verify the required parameter 'appStoreVersionExperimentTreatmentLocalizationCreateRequest' is set
      if (appStoreVersionExperimentTreatmentLocalizationCreateRequest === undefined || appStoreVersionExperimentTreatmentLocalizationCreateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreVersionExperimentTreatmentLocalizationCreateRequest' when calling appStoreVersionExperimentTreatmentLocalizationsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionExperimentTreatmentLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsDeleteInstance operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appStoreVersionExperimentTreatmentLocalizationsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionExperimentTreatmentLocalizationsGetInstance operation.
     * @callback module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionExperimentTreatmentLocalizations] the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations
     * @param {Array.<module:model/String>} [fieldsAppScreenshotSets] the fields to include for returned resources of type appScreenshotSets
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppPreviewSets] maximum number of related appPreviewSets returned (when they are included)
     * @param {Number} [limitAppScreenshotSets] maximum number of related appScreenshotSets returned (when they are included)
     * @param {module:api/AppStoreVersionExperimentTreatmentLocalizationsApi~appStoreVersionExperimentTreatmentLocalizationsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionExperimentTreatmentLocalizationResponse}
     */
    appStoreVersionExperimentTreatmentLocalizationsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionExperimentTreatmentLocalizationsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appStoreVersionExperimentTreatmentLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionExperimentTreatmentLocalizations'], 'csv'),
        'fields[appScreenshotSets]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshotSets'], 'csv'),
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appPreviewSets]': opts['limitAppPreviewSets'],
        'limit[appScreenshotSets]': opts['limitAppScreenshotSets']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionExperimentTreatmentLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
