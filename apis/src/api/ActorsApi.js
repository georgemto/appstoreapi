/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActorResponse from '../model/ActorResponse';
import ActorsResponse from '../model/ActorsResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* Actors service.
* @module api/ActorsApi
* @version 4.1
*/
export default class ActorsApi {

    /**
    * Constructs a new ActorsApi. 
    * @alias module:api/ActorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the actorsGetCollection operation.
     * @callback module:api/ActorsApi~actorsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Array.<String>} filterId filter by id(s)
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsActors] the fields to include for returned resources of type actors
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/ActorsApi~actorsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActorsResponse}
     */
    actorsGetCollection(filterId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'filterId' is set
      if (filterId === undefined || filterId === null) {
        throw new Error("Missing the required parameter 'filterId' when calling actorsGetCollection");
      }

      let pathParams = {
      };
      let queryParams = {
        'filter[id]': this.apiClient.buildCollectionParam(filterId, 'csv'),
        'fields[actors]': this.apiClient.buildCollectionParam(opts['fieldsActors'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActorsResponse;
      return this.apiClient.callApi(
        '/v1/actors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the actorsGetInstance operation.
     * @callback module:api/ActorsApi~actorsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsActors] the fields to include for returned resources of type actors
     * @param {module:api/ActorsApi~actorsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActorResponse}
     */
    actorsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling actorsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[actors]': this.apiClient.buildCollectionParam(opts['fieldsActors'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActorResponse;
      return this.apiClient.callApi(
        '/v1/actors/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
