/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReviewSubmissionItemCreateRequest from '../model/ReviewSubmissionItemCreateRequest';
import ReviewSubmissionItemResponse from '../model/ReviewSubmissionItemResponse';
import ReviewSubmissionItemUpdateRequest from '../model/ReviewSubmissionItemUpdateRequest';

/**
* ReviewSubmissionItems service.
* @module api/ReviewSubmissionItemsApi
* @version 4.1
*/
export default class ReviewSubmissionItemsApi {

    /**
    * Constructs a new ReviewSubmissionItemsApi. 
    * @alias module:api/ReviewSubmissionItemsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reviewSubmissionItemsCreateInstance operation.
     * @callback module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReviewSubmissionItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ReviewSubmissionItemCreateRequest} reviewSubmissionItemCreateRequest ReviewSubmissionItem representation
     * @param {module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReviewSubmissionItemResponse}
     */
    reviewSubmissionItemsCreateInstance(reviewSubmissionItemCreateRequest, callback) {
      let postBody = reviewSubmissionItemCreateRequest;
      // verify the required parameter 'reviewSubmissionItemCreateRequest' is set
      if (reviewSubmissionItemCreateRequest === undefined || reviewSubmissionItemCreateRequest === null) {
        throw new Error("Missing the required parameter 'reviewSubmissionItemCreateRequest' when calling reviewSubmissionItemsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReviewSubmissionItemResponse;
      return this.apiClient.callApi(
        '/v1/reviewSubmissionItems', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reviewSubmissionItemsDeleteInstance operation.
     * @callback module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    reviewSubmissionItemsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling reviewSubmissionItemsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/reviewSubmissionItems/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reviewSubmissionItemsUpdateInstance operation.
     * @callback module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReviewSubmissionItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/ReviewSubmissionItemUpdateRequest} reviewSubmissionItemUpdateRequest ReviewSubmissionItem representation
     * @param {module:api/ReviewSubmissionItemsApi~reviewSubmissionItemsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReviewSubmissionItemResponse}
     */
    reviewSubmissionItemsUpdateInstance(id, reviewSubmissionItemUpdateRequest, callback) {
      let postBody = reviewSubmissionItemUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling reviewSubmissionItemsUpdateInstance");
      }
      // verify the required parameter 'reviewSubmissionItemUpdateRequest' is set
      if (reviewSubmissionItemUpdateRequest === undefined || reviewSubmissionItemUpdateRequest === null) {
        throw new Error("Missing the required parameter 'reviewSubmissionItemUpdateRequest' when calling reviewSubmissionItemsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReviewSubmissionItemResponse;
      return this.apiClient.callApi(
        '/v1/reviewSubmissionItems/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
