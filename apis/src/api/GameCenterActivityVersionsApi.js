/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterActivityImageResponse from '../model/GameCenterActivityImageResponse';
import GameCenterActivityLocalizationsResponse from '../model/GameCenterActivityLocalizationsResponse';
import GameCenterActivityVersionCreateRequest from '../model/GameCenterActivityVersionCreateRequest';
import GameCenterActivityVersionDefaultImageLinkageResponse from '../model/GameCenterActivityVersionDefaultImageLinkageResponse';
import GameCenterActivityVersionLocalizationsLinkagesResponse from '../model/GameCenterActivityVersionLocalizationsLinkagesResponse';
import GameCenterActivityVersionResponse from '../model/GameCenterActivityVersionResponse';
import GameCenterActivityVersionUpdateRequest from '../model/GameCenterActivityVersionUpdateRequest';

/**
* GameCenterActivityVersions service.
* @module api/GameCenterActivityVersionsApi
* @version 4.1
*/
export default class GameCenterActivityVersionsApi {

    /**
    * Constructs a new GameCenterActivityVersionsApi. 
    * @alias module:api/GameCenterActivityVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterActivityVersionsCreateInstance operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterActivityVersionCreateRequest} gameCenterActivityVersionCreateRequest GameCenterActivityVersion representation
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionResponse}
     */
    gameCenterActivityVersionsCreateInstance(gameCenterActivityVersionCreateRequest, callback) {
      let postBody = gameCenterActivityVersionCreateRequest;
      // verify the required parameter 'gameCenterActivityVersionCreateRequest' is set
      if (gameCenterActivityVersionCreateRequest === undefined || gameCenterActivityVersionCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityVersionCreateRequest' when calling gameCenterActivityVersionsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsDefaultImageGetToOneRelated operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsDefaultImageGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsDefaultImageGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityImageResponse}
     */
    gameCenterActivityVersionsDefaultImageGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsDefaultImageGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}/defaultImage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsDefaultImageGetToOneRelationship operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsDefaultImageGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionDefaultImageLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsDefaultImageGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionDefaultImageLinkageResponse}
     */
    gameCenterActivityVersionsDefaultImageGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsDefaultImageGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionDefaultImageLinkageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}/relationships/defaultImage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsGetInstance operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityVersions] the fields to include for returned resources of type gameCenterActivityVersions
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityLocalizations] the fields to include for returned resources of type gameCenterActivityLocalizations
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitLocalizations] maximum number of related localizations returned (when they are included)
     * @param {Number} [limitReleases] maximum number of related releases returned (when they are included)
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionResponse}
     */
    gameCenterActivityVersionsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityVersions'], 'csv'),
        'fields[gameCenterActivityLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityLocalizations'], 'csv'),
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[localizations]': opts['limitLocalizations'],
        'limit[releases]': opts['limitReleases']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsLocalizationsGetToManyRelated operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsLocalizationsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityLocalizationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityLocalizations] the fields to include for returned resources of type gameCenterActivityLocalizations
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityVersions] the fields to include for returned resources of type gameCenterActivityVersions
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsLocalizationsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityLocalizationsResponse}
     */
    gameCenterActivityVersionsLocalizationsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsLocalizationsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityLocalizations'], 'csv'),
        'fields[gameCenterActivityVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityVersions'], 'csv'),
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityLocalizationsResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}/localizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsLocalizationsGetToManyRelationship operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsLocalizationsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionLocalizationsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsLocalizationsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionLocalizationsLinkagesResponse}
     */
    gameCenterActivityVersionsLocalizationsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsLocalizationsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionLocalizationsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}/relationships/localizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionsUpdateInstance operation.
     * @callback module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/GameCenterActivityVersionUpdateRequest} gameCenterActivityVersionUpdateRequest GameCenterActivityVersion representation
     * @param {module:api/GameCenterActivityVersionsApi~gameCenterActivityVersionsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionResponse}
     */
    gameCenterActivityVersionsUpdateInstance(id, gameCenterActivityVersionUpdateRequest, callback) {
      let postBody = gameCenterActivityVersionUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionsUpdateInstance");
      }
      // verify the required parameter 'gameCenterActivityVersionUpdateRequest' is set
      if (gameCenterActivityVersionUpdateRequest === undefined || gameCenterActivityVersionUpdateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityVersionUpdateRequest' when calling gameCenterActivityVersionsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersions/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
