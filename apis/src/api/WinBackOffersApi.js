/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import WinBackOfferCreateRequest from '../model/WinBackOfferCreateRequest';
import WinBackOfferPricesLinkagesResponse from '../model/WinBackOfferPricesLinkagesResponse';
import WinBackOfferPricesResponse from '../model/WinBackOfferPricesResponse';
import WinBackOfferResponse from '../model/WinBackOfferResponse';
import WinBackOfferUpdateRequest from '../model/WinBackOfferUpdateRequest';

/**
* WinBackOffers service.
* @module api/WinBackOffersApi
* @version 4.1
*/
export default class WinBackOffersApi {

    /**
    * Constructs a new WinBackOffersApi. 
    * @alias module:api/WinBackOffersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the winBackOffersCreateInstance operation.
     * @callback module:api/WinBackOffersApi~winBackOffersCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WinBackOfferResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/WinBackOfferCreateRequest} winBackOfferCreateRequest WinBackOffer representation
     * @param {module:api/WinBackOffersApi~winBackOffersCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WinBackOfferResponse}
     */
    winBackOffersCreateInstance(winBackOfferCreateRequest, callback) {
      let postBody = winBackOfferCreateRequest;
      // verify the required parameter 'winBackOfferCreateRequest' is set
      if (winBackOfferCreateRequest === undefined || winBackOfferCreateRequest === null) {
        throw new Error("Missing the required parameter 'winBackOfferCreateRequest' when calling winBackOffersCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WinBackOfferResponse;
      return this.apiClient.callApi(
        '/v1/winBackOffers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the winBackOffersDeleteInstance operation.
     * @callback module:api/WinBackOffersApi~winBackOffersDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/WinBackOffersApi~winBackOffersDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    winBackOffersDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling winBackOffersDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/winBackOffers/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the winBackOffersGetInstance operation.
     * @callback module:api/WinBackOffersApi~winBackOffersGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WinBackOfferResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsWinBackOffers] the fields to include for returned resources of type winBackOffers
     * @param {Array.<module:model/String>} [fieldsWinBackOfferPrices] the fields to include for returned resources of type winBackOfferPrices
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitPrices] maximum number of related prices returned (when they are included)
     * @param {module:api/WinBackOffersApi~winBackOffersGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WinBackOfferResponse}
     */
    winBackOffersGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling winBackOffersGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[winBackOffers]': this.apiClient.buildCollectionParam(opts['fieldsWinBackOffers'], 'csv'),
        'fields[winBackOfferPrices]': this.apiClient.buildCollectionParam(opts['fieldsWinBackOfferPrices'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[prices]': opts['limitPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WinBackOfferResponse;
      return this.apiClient.callApi(
        '/v1/winBackOffers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the winBackOffersPricesGetToManyRelated operation.
     * @callback module:api/WinBackOffersApi~winBackOffersPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WinBackOfferPricesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsWinBackOfferPrices] the fields to include for returned resources of type winBackOfferPrices
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsSubscriptionPricePoints] the fields to include for returned resources of type subscriptionPricePoints
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/WinBackOffersApi~winBackOffersPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WinBackOfferPricesResponse}
     */
    winBackOffersPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling winBackOffersPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[winBackOfferPrices]': this.apiClient.buildCollectionParam(opts['fieldsWinBackOfferPrices'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[subscriptionPricePoints]': this.apiClient.buildCollectionParam(opts['fieldsSubscriptionPricePoints'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WinBackOfferPricesResponse;
      return this.apiClient.callApi(
        '/v1/winBackOffers/{id}/prices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the winBackOffersPricesGetToManyRelationship operation.
     * @callback module:api/WinBackOffersApi~winBackOffersPricesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WinBackOfferPricesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/WinBackOffersApi~winBackOffersPricesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WinBackOfferPricesLinkagesResponse}
     */
    winBackOffersPricesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling winBackOffersPricesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WinBackOfferPricesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/winBackOffers/{id}/relationships/prices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the winBackOffersUpdateInstance operation.
     * @callback module:api/WinBackOffersApi~winBackOffersUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WinBackOfferResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/WinBackOfferUpdateRequest} winBackOfferUpdateRequest WinBackOffer representation
     * @param {module:api/WinBackOffersApi~winBackOffersUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WinBackOfferResponse}
     */
    winBackOffersUpdateInstance(id, winBackOfferUpdateRequest, callback) {
      let postBody = winBackOfferUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling winBackOffersUpdateInstance");
      }
      // verify the required parameter 'winBackOfferUpdateRequest' is set
      if (winBackOfferUpdateRequest === undefined || winBackOfferUpdateRequest === null) {
        throw new Error("Missing the required parameter 'winBackOfferUpdateRequest' when calling winBackOffersUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WinBackOfferResponse;
      return this.apiClient.callApi(
        '/v1/winBackOffers/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
