/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import MarketplaceWebhookCreateRequest from '../model/MarketplaceWebhookCreateRequest';
import MarketplaceWebhookResponse from '../model/MarketplaceWebhookResponse';
import MarketplaceWebhookUpdateRequest from '../model/MarketplaceWebhookUpdateRequest';
import MarketplaceWebhooksResponse from '../model/MarketplaceWebhooksResponse';

/**
* MarketplaceWebhooks service.
* @module api/MarketplaceWebhooksApi
* @version 4.1
*/
export default class MarketplaceWebhooksApi {

    /**
    * Constructs a new MarketplaceWebhooksApi. 
    * @alias module:api/MarketplaceWebhooksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the marketplaceWebhooksCreateInstance operation.
     * @callback module:api/MarketplaceWebhooksApi~marketplaceWebhooksCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplaceWebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/MarketplaceWebhookCreateRequest} marketplaceWebhookCreateRequest MarketplaceWebhook representation
     * @param {module:api/MarketplaceWebhooksApi~marketplaceWebhooksCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplaceWebhookResponse}
     */
    marketplaceWebhooksCreateInstance(marketplaceWebhookCreateRequest, callback) {
      let postBody = marketplaceWebhookCreateRequest;
      // verify the required parameter 'marketplaceWebhookCreateRequest' is set
      if (marketplaceWebhookCreateRequest === undefined || marketplaceWebhookCreateRequest === null) {
        throw new Error("Missing the required parameter 'marketplaceWebhookCreateRequest' when calling marketplaceWebhooksCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MarketplaceWebhookResponse;
      return this.apiClient.callApi(
        '/v1/marketplaceWebhooks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplaceWebhooksDeleteInstance operation.
     * @callback module:api/MarketplaceWebhooksApi~marketplaceWebhooksDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/MarketplaceWebhooksApi~marketplaceWebhooksDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    marketplaceWebhooksDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling marketplaceWebhooksDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/marketplaceWebhooks/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplaceWebhooksGetCollection operation.
     * @callback module:api/MarketplaceWebhooksApi~marketplaceWebhooksGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplaceWebhooksResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsMarketplaceWebhooks] the fields to include for returned resources of type marketplaceWebhooks
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/MarketplaceWebhooksApi~marketplaceWebhooksGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplaceWebhooksResponse}
     */
    marketplaceWebhooksGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'fields[marketplaceWebhooks]': this.apiClient.buildCollectionParam(opts['fieldsMarketplaceWebhooks'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MarketplaceWebhooksResponse;
      return this.apiClient.callApi(
        '/v1/marketplaceWebhooks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the marketplaceWebhooksUpdateInstance operation.
     * @callback module:api/MarketplaceWebhooksApi~marketplaceWebhooksUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MarketplaceWebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/MarketplaceWebhookUpdateRequest} marketplaceWebhookUpdateRequest MarketplaceWebhook representation
     * @param {module:api/MarketplaceWebhooksApi~marketplaceWebhooksUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MarketplaceWebhookResponse}
     */
    marketplaceWebhooksUpdateInstance(id, marketplaceWebhookUpdateRequest, callback) {
      let postBody = marketplaceWebhookUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling marketplaceWebhooksUpdateInstance");
      }
      // verify the required parameter 'marketplaceWebhookUpdateRequest' is set
      if (marketplaceWebhookUpdateRequest === undefined || marketplaceWebhookUpdateRequest === null) {
        throw new Error("Missing the required parameter 'marketplaceWebhookUpdateRequest' when calling marketplaceWebhooksUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MarketplaceWebhookResponse;
      return this.apiClient.callApi(
        '/v1/marketplaceWebhooks/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
