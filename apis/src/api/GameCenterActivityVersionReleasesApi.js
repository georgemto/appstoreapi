/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterActivityVersionReleaseCreateRequest from '../model/GameCenterActivityVersionReleaseCreateRequest';
import GameCenterActivityVersionReleaseResponse from '../model/GameCenterActivityVersionReleaseResponse';

/**
* GameCenterActivityVersionReleases service.
* @module api/GameCenterActivityVersionReleasesApi
* @version 4.1
*/
export default class GameCenterActivityVersionReleasesApi {

    /**
    * Constructs a new GameCenterActivityVersionReleasesApi. 
    * @alias module:api/GameCenterActivityVersionReleasesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterActivityVersionReleasesCreateInstance operation.
     * @callback module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionReleaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterActivityVersionReleaseCreateRequest} gameCenterActivityVersionReleaseCreateRequest GameCenterActivityVersionRelease representation
     * @param {module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionReleaseResponse}
     */
    gameCenterActivityVersionReleasesCreateInstance(gameCenterActivityVersionReleaseCreateRequest, callback) {
      let postBody = gameCenterActivityVersionReleaseCreateRequest;
      // verify the required parameter 'gameCenterActivityVersionReleaseCreateRequest' is set
      if (gameCenterActivityVersionReleaseCreateRequest === undefined || gameCenterActivityVersionReleaseCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityVersionReleaseCreateRequest' when calling gameCenterActivityVersionReleasesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionReleaseResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersionReleases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionReleasesDeleteInstance operation.
     * @callback module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gameCenterActivityVersionReleasesDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionReleasesDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersionReleases/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityVersionReleasesGetInstance operation.
     * @callback module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityVersionReleaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityVersionReleases] the fields to include for returned resources of type gameCenterActivityVersionReleases
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/GameCenterActivityVersionReleasesApi~gameCenterActivityVersionReleasesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityVersionReleaseResponse}
     */
    gameCenterActivityVersionReleasesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityVersionReleasesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityVersionReleases]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityVersionReleases'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityVersionReleaseResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityVersionReleases/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
