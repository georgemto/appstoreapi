/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppKeywordsResponse from '../model/AppKeywordsResponse';
import AppPreviewSetsResponse from '../model/AppPreviewSetsResponse';
import AppScreenshotSetsResponse from '../model/AppScreenshotSetsResponse';
import AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse from '../model/AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse';
import AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse from '../model/AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse';
import AppStoreVersionLocalizationCreateRequest from '../model/AppStoreVersionLocalizationCreateRequest';
import AppStoreVersionLocalizationResponse from '../model/AppStoreVersionLocalizationResponse';
import AppStoreVersionLocalizationSearchKeywordsLinkagesRequest from '../model/AppStoreVersionLocalizationSearchKeywordsLinkagesRequest';
import AppStoreVersionLocalizationSearchKeywordsLinkagesResponse from '../model/AppStoreVersionLocalizationSearchKeywordsLinkagesResponse';
import AppStoreVersionLocalizationUpdateRequest from '../model/AppStoreVersionLocalizationUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppStoreVersionLocalizations service.
* @module api/AppStoreVersionLocalizationsApi
* @version 4.1
*/
export default class AppStoreVersionLocalizationsApi {

    /**
    * Constructs a new AppStoreVersionLocalizationsApi. 
    * @alias module:api/AppStoreVersionLocalizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPreviewSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterPreviewType] filter by attribute 'previewType'
     * @param {Array.<String>} [filterAppCustomProductPageLocalization] filter by id(s) of related 'appCustomProductPageLocalization'
     * @param {Array.<String>} [filterAppStoreVersionExperimentTreatmentLocalization] filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsAppCustomProductPageLocalizations] the fields to include for returned resources of type appCustomProductPageLocalizations
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionExperimentTreatmentLocalizations] the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations
     * @param {Array.<module:model/String>} [fieldsAppPreviews] the fields to include for returned resources of type appPreviews
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppPreviews] maximum number of related appPreviews returned (when they are included)
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPreviewSetsResponse}
     */
    appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[previewType]': this.apiClient.buildCollectionParam(opts['filterPreviewType'], 'csv'),
        'filter[appCustomProductPageLocalization]': this.apiClient.buildCollectionParam(opts['filterAppCustomProductPageLocalization'], 'csv'),
        'filter[appStoreVersionExperimentTreatmentLocalization]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionExperimentTreatmentLocalization'], 'csv'),
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[appCustomProductPageLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppCustomProductPageLocalizations'], 'csv'),
        'fields[appStoreVersionExperimentTreatmentLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionExperimentTreatmentLocalizations'], 'csv'),
        'fields[appPreviews]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviews'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appPreviews]': opts['limitAppPreviews']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPreviewSetsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/appPreviewSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsAppPreviewSetsGetToManyRelationship operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppPreviewSetsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppPreviewSetsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse}
     */
    appStoreVersionLocalizationsAppPreviewSetsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsAppPreviewSetsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/relationships/appPreviewSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppScreenshotSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterScreenshotDisplayType] filter by attribute 'screenshotDisplayType'
     * @param {Array.<String>} [filterAppCustomProductPageLocalization] filter by id(s) of related 'appCustomProductPageLocalization'
     * @param {Array.<String>} [filterAppStoreVersionExperimentTreatmentLocalization] filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'
     * @param {Array.<module:model/String>} [fieldsAppScreenshotSets] the fields to include for returned resources of type appScreenshotSets
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsAppCustomProductPageLocalizations] the fields to include for returned resources of type appCustomProductPageLocalizations
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionExperimentTreatmentLocalizations] the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations
     * @param {Array.<module:model/String>} [fieldsAppScreenshots] the fields to include for returned resources of type appScreenshots
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppScreenshots] maximum number of related appScreenshots returned (when they are included)
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppScreenshotSetsResponse}
     */
    appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[screenshotDisplayType]': this.apiClient.buildCollectionParam(opts['filterScreenshotDisplayType'], 'csv'),
        'filter[appCustomProductPageLocalization]': this.apiClient.buildCollectionParam(opts['filterAppCustomProductPageLocalization'], 'csv'),
        'filter[appStoreVersionExperimentTreatmentLocalization]': this.apiClient.buildCollectionParam(opts['filterAppStoreVersionExperimentTreatmentLocalization'], 'csv'),
        'fields[appScreenshotSets]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshotSets'], 'csv'),
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[appCustomProductPageLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppCustomProductPageLocalizations'], 'csv'),
        'fields[appStoreVersionExperimentTreatmentLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionExperimentTreatmentLocalizations'], 'csv'),
        'fields[appScreenshots]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshots'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appScreenshots]': opts['limitAppScreenshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppScreenshotSetsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/appScreenshotSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelationship operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse}
     */
    appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/relationships/appScreenshotSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsCreateInstance operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppStoreVersionLocalizationCreateRequest} appStoreVersionLocalizationCreateRequest AppStoreVersionLocalization representation
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationResponse}
     */
    appStoreVersionLocalizationsCreateInstance(appStoreVersionLocalizationCreateRequest, callback) {
      let postBody = appStoreVersionLocalizationCreateRequest;
      // verify the required parameter 'appStoreVersionLocalizationCreateRequest' is set
      if (appStoreVersionLocalizationCreateRequest === undefined || appStoreVersionLocalizationCreateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreVersionLocalizationCreateRequest' when calling appStoreVersionLocalizationsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsDeleteInstance operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appStoreVersionLocalizationsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsGetInstance operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppStoreVersionLocalizations] the fields to include for returned resources of type appStoreVersionLocalizations
     * @param {Array.<module:model/String>} [fieldsAppScreenshotSets] the fields to include for returned resources of type appScreenshotSets
     * @param {Array.<module:model/String>} [fieldsAppPreviewSets] the fields to include for returned resources of type appPreviewSets
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAppPreviewSets] maximum number of related appPreviewSets returned (when they are included)
     * @param {Number} [limitAppScreenshotSets] maximum number of related appScreenshotSets returned (when they are included)
     * @param {Number} [limitSearchKeywords] maximum number of related searchKeywords returned (when they are included)
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationResponse}
     */
    appStoreVersionLocalizationsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appStoreVersionLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsAppStoreVersionLocalizations'], 'csv'),
        'fields[appScreenshotSets]': this.apiClient.buildCollectionParam(opts['fieldsAppScreenshotSets'], 'csv'),
        'fields[appPreviewSets]': this.apiClient.buildCollectionParam(opts['fieldsAppPreviewSets'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[appPreviewSets]': opts['limitAppPreviewSets'],
        'limit[appScreenshotSets]': opts['limitAppScreenshotSets'],
        'limit[searchKeywords]': opts['limitSearchKeywords']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationship operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppStoreVersionLocalizationSearchKeywordsLinkagesRequest} appStoreVersionLocalizationSearchKeywordsLinkagesRequest List of related linkages
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationship(id, appStoreVersionLocalizationSearchKeywordsLinkagesRequest, callback) {
      let postBody = appStoreVersionLocalizationSearchKeywordsLinkagesRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationship");
      }
      // verify the required parameter 'appStoreVersionLocalizationSearchKeywordsLinkagesRequest' is set
      if (appStoreVersionLocalizationSearchKeywordsLinkagesRequest === undefined || appStoreVersionLocalizationSearchKeywordsLinkagesRequest === null) {
        throw new Error("Missing the required parameter 'appStoreVersionLocalizationSearchKeywordsLinkagesRequest' when calling appStoreVersionLocalizationsSearchKeywordsCreateToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/relationships/searchKeywords', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationship operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppStoreVersionLocalizationSearchKeywordsLinkagesRequest} appStoreVersionLocalizationSearchKeywordsLinkagesRequest List of related linkages
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationship(id, appStoreVersionLocalizationSearchKeywordsLinkagesRequest, callback) {
      let postBody = appStoreVersionLocalizationSearchKeywordsLinkagesRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationship");
      }
      // verify the required parameter 'appStoreVersionLocalizationSearchKeywordsLinkagesRequest' is set
      if (appStoreVersionLocalizationSearchKeywordsLinkagesRequest === undefined || appStoreVersionLocalizationSearchKeywordsLinkagesRequest === null) {
        throw new Error("Missing the required parameter 'appStoreVersionLocalizationSearchKeywordsLinkagesRequest' when calling appStoreVersionLocalizationsSearchKeywordsDeleteToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/relationships/searchKeywords', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsSearchKeywordsGetToManyRelated operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppKeywordsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterPlatform] filter by platform
     * @param {Array.<String>} [filterLocale] filter by locale
     * @param {Array.<String>} [fieldsAppKeywords] the fields to include for returned resources of type appKeywords
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppKeywordsResponse}
     */
    appStoreVersionLocalizationsSearchKeywordsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsSearchKeywordsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[platform]': this.apiClient.buildCollectionParam(opts['filterPlatform'], 'csv'),
        'filter[locale]': this.apiClient.buildCollectionParam(opts['filterLocale'], 'csv'),
        'fields[appKeywords]': this.apiClient.buildCollectionParam(opts['fieldsAppKeywords'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppKeywordsResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/searchKeywords', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsSearchKeywordsGetToManyRelationship operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationSearchKeywordsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsSearchKeywordsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationSearchKeywordsLinkagesResponse}
     */
    appStoreVersionLocalizationsSearchKeywordsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsSearchKeywordsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationSearchKeywordsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}/relationships/searchKeywords', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appStoreVersionLocalizationsUpdateInstance operation.
     * @callback module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppStoreVersionLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppStoreVersionLocalizationUpdateRequest} appStoreVersionLocalizationUpdateRequest AppStoreVersionLocalization representation
     * @param {module:api/AppStoreVersionLocalizationsApi~appStoreVersionLocalizationsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppStoreVersionLocalizationResponse}
     */
    appStoreVersionLocalizationsUpdateInstance(id, appStoreVersionLocalizationUpdateRequest, callback) {
      let postBody = appStoreVersionLocalizationUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appStoreVersionLocalizationsUpdateInstance");
      }
      // verify the required parameter 'appStoreVersionLocalizationUpdateRequest' is set
      if (appStoreVersionLocalizationUpdateRequest === undefined || appStoreVersionLocalizationUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appStoreVersionLocalizationUpdateRequest' when calling appStoreVersionLocalizationsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppStoreVersionLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/appStoreVersionLocalizations/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
