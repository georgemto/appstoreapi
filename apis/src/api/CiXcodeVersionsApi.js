/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CiMacOsVersionsResponse from '../model/CiMacOsVersionsResponse';
import CiXcodeVersionMacOsVersionsLinkagesResponse from '../model/CiXcodeVersionMacOsVersionsLinkagesResponse';
import CiXcodeVersionResponse from '../model/CiXcodeVersionResponse';
import CiXcodeVersionsResponse from '../model/CiXcodeVersionsResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* CiXcodeVersions service.
* @module api/CiXcodeVersionsApi
* @version 4.1
*/
export default class CiXcodeVersionsApi {

    /**
    * Constructs a new CiXcodeVersionsApi. 
    * @alias module:api/CiXcodeVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ciXcodeVersionsGetCollection operation.
     * @callback module:api/CiXcodeVersionsApi~ciXcodeVersionsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CiXcodeVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsCiXcodeVersions] the fields to include for returned resources of type ciXcodeVersions
     * @param {Array.<module:model/String>} [fieldsCiMacOsVersions] the fields to include for returned resources of type ciMacOsVersions
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitMacOsVersions] maximum number of related macOsVersions returned (when they are included)
     * @param {module:api/CiXcodeVersionsApi~ciXcodeVersionsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CiXcodeVersionsResponse}
     */
    ciXcodeVersionsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'fields[ciXcodeVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiXcodeVersions'], 'csv'),
        'fields[ciMacOsVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiMacOsVersions'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[macOsVersions]': opts['limitMacOsVersions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CiXcodeVersionsResponse;
      return this.apiClient.callApi(
        '/v1/ciXcodeVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ciXcodeVersionsGetInstance operation.
     * @callback module:api/CiXcodeVersionsApi~ciXcodeVersionsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CiXcodeVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsCiXcodeVersions] the fields to include for returned resources of type ciXcodeVersions
     * @param {Array.<module:model/String>} [fieldsCiMacOsVersions] the fields to include for returned resources of type ciMacOsVersions
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitMacOsVersions] maximum number of related macOsVersions returned (when they are included)
     * @param {module:api/CiXcodeVersionsApi~ciXcodeVersionsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CiXcodeVersionResponse}
     */
    ciXcodeVersionsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling ciXcodeVersionsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[ciXcodeVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiXcodeVersions'], 'csv'),
        'fields[ciMacOsVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiMacOsVersions'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[macOsVersions]': opts['limitMacOsVersions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CiXcodeVersionResponse;
      return this.apiClient.callApi(
        '/v1/ciXcodeVersions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ciXcodeVersionsMacOsVersionsGetToManyRelated operation.
     * @callback module:api/CiXcodeVersionsApi~ciXcodeVersionsMacOsVersionsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CiMacOsVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsCiMacOsVersions] the fields to include for returned resources of type ciMacOsVersions
     * @param {Array.<module:model/String>} [fieldsCiXcodeVersions] the fields to include for returned resources of type ciXcodeVersions
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitXcodeVersions] maximum number of related xcodeVersions returned (when they are included)
     * @param {module:api/CiXcodeVersionsApi~ciXcodeVersionsMacOsVersionsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CiMacOsVersionsResponse}
     */
    ciXcodeVersionsMacOsVersionsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling ciXcodeVersionsMacOsVersionsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[ciMacOsVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiMacOsVersions'], 'csv'),
        'fields[ciXcodeVersions]': this.apiClient.buildCollectionParam(opts['fieldsCiXcodeVersions'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[xcodeVersions]': opts['limitXcodeVersions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CiMacOsVersionsResponse;
      return this.apiClient.callApi(
        '/v1/ciXcodeVersions/{id}/macOsVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ciXcodeVersionsMacOsVersionsGetToManyRelationship operation.
     * @callback module:api/CiXcodeVersionsApi~ciXcodeVersionsMacOsVersionsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CiXcodeVersionMacOsVersionsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/CiXcodeVersionsApi~ciXcodeVersionsMacOsVersionsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CiXcodeVersionMacOsVersionsLinkagesResponse}
     */
    ciXcodeVersionsMacOsVersionsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling ciXcodeVersionsMacOsVersionsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CiXcodeVersionMacOsVersionsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/ciXcodeVersions/{id}/relationships/macOsVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
