/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterActivityImageResponse from '../model/GameCenterActivityImageResponse';
import GameCenterActivityLocalizationCreateRequest from '../model/GameCenterActivityLocalizationCreateRequest';
import GameCenterActivityLocalizationImageLinkageResponse from '../model/GameCenterActivityLocalizationImageLinkageResponse';
import GameCenterActivityLocalizationResponse from '../model/GameCenterActivityLocalizationResponse';
import GameCenterActivityLocalizationUpdateRequest from '../model/GameCenterActivityLocalizationUpdateRequest';

/**
* GameCenterActivityLocalizations service.
* @module api/GameCenterActivityLocalizationsApi
* @version 4.1
*/
export default class GameCenterActivityLocalizationsApi {

    /**
    * Constructs a new GameCenterActivityLocalizationsApi. 
    * @alias module:api/GameCenterActivityLocalizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsCreateInstance operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterActivityLocalizationCreateRequest} gameCenterActivityLocalizationCreateRequest GameCenterActivityLocalization representation
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityLocalizationResponse}
     */
    gameCenterActivityLocalizationsCreateInstance(gameCenterActivityLocalizationCreateRequest, callback) {
      let postBody = gameCenterActivityLocalizationCreateRequest;
      // verify the required parameter 'gameCenterActivityLocalizationCreateRequest' is set
      if (gameCenterActivityLocalizationCreateRequest === undefined || gameCenterActivityLocalizationCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityLocalizationCreateRequest' when calling gameCenterActivityLocalizationsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsDeleteInstance operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gameCenterActivityLocalizationsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityLocalizationsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsGetInstance operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityLocalizations] the fields to include for returned resources of type gameCenterActivityLocalizations
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityLocalizationResponse}
     */
    gameCenterActivityLocalizationsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityLocalizationsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityLocalizations'], 'csv'),
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsImageGetToOneRelated operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsImageGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsImageGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityImageResponse}
     */
    gameCenterActivityLocalizationsImageGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityLocalizationsImageGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations/{id}/image', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsImageGetToOneRelationship operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsImageGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityLocalizationImageLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsImageGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityLocalizationImageLinkageResponse}
     */
    gameCenterActivityLocalizationsImageGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityLocalizationsImageGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityLocalizationImageLinkageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations/{id}/relationships/image', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityLocalizationsUpdateInstance operation.
     * @callback module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityLocalizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/GameCenterActivityLocalizationUpdateRequest} gameCenterActivityLocalizationUpdateRequest GameCenterActivityLocalization representation
     * @param {module:api/GameCenterActivityLocalizationsApi~gameCenterActivityLocalizationsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityLocalizationResponse}
     */
    gameCenterActivityLocalizationsUpdateInstance(id, gameCenterActivityLocalizationUpdateRequest, callback) {
      let postBody = gameCenterActivityLocalizationUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityLocalizationsUpdateInstance");
      }
      // verify the required parameter 'gameCenterActivityLocalizationUpdateRequest' is set
      if (gameCenterActivityLocalizationUpdateRequest === undefined || gameCenterActivityLocalizationUpdateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityLocalizationUpdateRequest' when calling gameCenterActivityLocalizationsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityLocalizationResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityLocalizations/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
