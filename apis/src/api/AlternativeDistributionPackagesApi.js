/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AlternativeDistributionPackageCreateRequest from '../model/AlternativeDistributionPackageCreateRequest';
import AlternativeDistributionPackageResponse from '../model/AlternativeDistributionPackageResponse';
import AlternativeDistributionPackageVersionsLinkagesResponse from '../model/AlternativeDistributionPackageVersionsLinkagesResponse';
import AlternativeDistributionPackageVersionsResponse from '../model/AlternativeDistributionPackageVersionsResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* AlternativeDistributionPackages service.
* @module api/AlternativeDistributionPackagesApi
* @version 4.1
*/
export default class AlternativeDistributionPackagesApi {

    /**
    * Constructs a new AlternativeDistributionPackagesApi. 
    * @alias module:api/AlternativeDistributionPackagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the alternativeDistributionPackagesCreateInstance operation.
     * @callback module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlternativeDistributionPackageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AlternativeDistributionPackageCreateRequest} alternativeDistributionPackageCreateRequest AlternativeDistributionPackage representation
     * @param {module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlternativeDistributionPackageResponse}
     */
    alternativeDistributionPackagesCreateInstance(alternativeDistributionPackageCreateRequest, callback) {
      let postBody = alternativeDistributionPackageCreateRequest;
      // verify the required parameter 'alternativeDistributionPackageCreateRequest' is set
      if (alternativeDistributionPackageCreateRequest === undefined || alternativeDistributionPackageCreateRequest === null) {
        throw new Error("Missing the required parameter 'alternativeDistributionPackageCreateRequest' when calling alternativeDistributionPackagesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AlternativeDistributionPackageResponse;
      return this.apiClient.callApi(
        '/v1/alternativeDistributionPackages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alternativeDistributionPackagesGetInstance operation.
     * @callback module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlternativeDistributionPackageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackages] the fields to include for returned resources of type alternativeDistributionPackages
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackageVersions] the fields to include for returned resources of type alternativeDistributionPackageVersions
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitVersions] maximum number of related versions returned (when they are included)
     * @param {module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlternativeDistributionPackageResponse}
     */
    alternativeDistributionPackagesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling alternativeDistributionPackagesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[alternativeDistributionPackages]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackages'], 'csv'),
        'fields[alternativeDistributionPackageVersions]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackageVersions'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[versions]': opts['limitVersions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlternativeDistributionPackageResponse;
      return this.apiClient.callApi(
        '/v1/alternativeDistributionPackages/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alternativeDistributionPackagesVersionsGetToManyRelated operation.
     * @callback module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesVersionsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlternativeDistributionPackageVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [filterState] filter by attribute 'state'
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackageVersions] the fields to include for returned resources of type alternativeDistributionPackageVersions
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackageVariants] the fields to include for returned resources of type alternativeDistributionPackageVariants
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackageDeltas] the fields to include for returned resources of type alternativeDistributionPackageDeltas
     * @param {Array.<module:model/String>} [fieldsAlternativeDistributionPackages] the fields to include for returned resources of type alternativeDistributionPackages
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitVariants] maximum number of related variants returned (when they are included)
     * @param {Number} [limitDeltas] maximum number of related deltas returned (when they are included)
     * @param {module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesVersionsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlternativeDistributionPackageVersionsResponse}
     */
    alternativeDistributionPackagesVersionsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling alternativeDistributionPackagesVersionsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[state]': this.apiClient.buildCollectionParam(opts['filterState'], 'csv'),
        'fields[alternativeDistributionPackageVersions]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackageVersions'], 'csv'),
        'fields[alternativeDistributionPackageVariants]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackageVariants'], 'csv'),
        'fields[alternativeDistributionPackageDeltas]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackageDeltas'], 'csv'),
        'fields[alternativeDistributionPackages]': this.apiClient.buildCollectionParam(opts['fieldsAlternativeDistributionPackages'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[variants]': opts['limitVariants'],
        'limit[deltas]': opts['limitDeltas']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlternativeDistributionPackageVersionsResponse;
      return this.apiClient.callApi(
        '/v1/alternativeDistributionPackages/{id}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the alternativeDistributionPackagesVersionsGetToManyRelationship operation.
     * @callback module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesVersionsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AlternativeDistributionPackageVersionsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AlternativeDistributionPackagesApi~alternativeDistributionPackagesVersionsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AlternativeDistributionPackageVersionsLinkagesResponse}
     */
    alternativeDistributionPackagesVersionsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling alternativeDistributionPackagesVersionsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AlternativeDistributionPackageVersionsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/alternativeDistributionPackages/{id}/relationships/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
