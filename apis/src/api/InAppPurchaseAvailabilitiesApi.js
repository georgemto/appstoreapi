/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse from '../model/InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse';
import InAppPurchaseAvailabilityCreateRequest from '../model/InAppPurchaseAvailabilityCreateRequest';
import InAppPurchaseAvailabilityResponse from '../model/InAppPurchaseAvailabilityResponse';
import TerritoriesResponse from '../model/TerritoriesResponse';

/**
* InAppPurchaseAvailabilities service.
* @module api/InAppPurchaseAvailabilitiesApi
* @version 4.1
*/
export default class InAppPurchaseAvailabilitiesApi {

    /**
    * Constructs a new InAppPurchaseAvailabilitiesApi. 
    * @alias module:api/InAppPurchaseAvailabilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated operation.
     * @callback module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerritoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerritoriesResponse}
     */
    inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerritoriesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseAvailabilities/{id}/availableTerritories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelationship operation.
     * @callback module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse}
     */
    inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseAvailabilities/{id}/relationships/availableTerritories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseAvailabilitiesCreateInstance operation.
     * @callback module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/InAppPurchaseAvailabilityCreateRequest} inAppPurchaseAvailabilityCreateRequest InAppPurchaseAvailability representation
     * @param {module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseAvailabilityResponse}
     */
    inAppPurchaseAvailabilitiesCreateInstance(inAppPurchaseAvailabilityCreateRequest, callback) {
      let postBody = inAppPurchaseAvailabilityCreateRequest;
      // verify the required parameter 'inAppPurchaseAvailabilityCreateRequest' is set
      if (inAppPurchaseAvailabilityCreateRequest === undefined || inAppPurchaseAvailabilityCreateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchaseAvailabilityCreateRequest' when calling inAppPurchaseAvailabilitiesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseAvailabilityResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseAvailabilities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchaseAvailabilitiesGetInstance operation.
     * @callback module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseAvailabilities] the fields to include for returned resources of type inAppPurchaseAvailabilities
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAvailableTerritories] maximum number of related availableTerritories returned (when they are included)
     * @param {module:api/InAppPurchaseAvailabilitiesApi~inAppPurchaseAvailabilitiesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseAvailabilityResponse}
     */
    inAppPurchaseAvailabilitiesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchaseAvailabilitiesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseAvailabilities]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseAvailabilities'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[availableTerritories]': opts['limitAvailableTerritories']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseAvailabilityResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchaseAvailabilities/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
