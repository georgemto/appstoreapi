/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppClipDomainStatusResponse from '../model/AppClipDomainStatusResponse';
import BetaAppClipInvocationsResponse from '../model/BetaAppClipInvocationsResponse';
import BuildBundleAppClipDomainCacheStatusLinkageResponse from '../model/BuildBundleAppClipDomainCacheStatusLinkageResponse';
import BuildBundleAppClipDomainDebugStatusLinkageResponse from '../model/BuildBundleAppClipDomainDebugStatusLinkageResponse';
import BuildBundleBetaAppClipInvocationsLinkagesResponse from '../model/BuildBundleBetaAppClipInvocationsLinkagesResponse';
import BuildBundleBuildBundleFileSizesLinkagesResponse from '../model/BuildBundleBuildBundleFileSizesLinkagesResponse';
import BuildBundleFileSizesResponse from '../model/BuildBundleFileSizesResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* BuildBundles service.
* @module api/BuildBundlesApi
* @version 4.1
*/
export default class BuildBundlesApi {

    /**
    * Constructs a new BuildBundlesApi. 
    * @alias module:api/BuildBundlesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the buildBundlesAppClipDomainCacheStatusGetToOneRelated operation.
     * @callback module:api/BuildBundlesApi~buildBundlesAppClipDomainCacheStatusGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipDomainStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppClipDomainStatuses] the fields to include for returned resources of type appClipDomainStatuses
     * @param {module:api/BuildBundlesApi~buildBundlesAppClipDomainCacheStatusGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipDomainStatusResponse}
     */
    buildBundlesAppClipDomainCacheStatusGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesAppClipDomainCacheStatusGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appClipDomainStatuses]': this.apiClient.buildCollectionParam(opts['fieldsAppClipDomainStatuses'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppClipDomainStatusResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/appClipDomainCacheStatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesAppClipDomainCacheStatusGetToOneRelationship operation.
     * @callback module:api/BuildBundlesApi~buildBundlesAppClipDomainCacheStatusGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildBundleAppClipDomainCacheStatusLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/BuildBundlesApi~buildBundlesAppClipDomainCacheStatusGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildBundleAppClipDomainCacheStatusLinkageResponse}
     */
    buildBundlesAppClipDomainCacheStatusGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesAppClipDomainCacheStatusGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildBundleAppClipDomainCacheStatusLinkageResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/relationships/appClipDomainCacheStatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesAppClipDomainDebugStatusGetToOneRelated operation.
     * @callback module:api/BuildBundlesApi~buildBundlesAppClipDomainDebugStatusGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipDomainStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppClipDomainStatuses] the fields to include for returned resources of type appClipDomainStatuses
     * @param {module:api/BuildBundlesApi~buildBundlesAppClipDomainDebugStatusGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipDomainStatusResponse}
     */
    buildBundlesAppClipDomainDebugStatusGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesAppClipDomainDebugStatusGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appClipDomainStatuses]': this.apiClient.buildCollectionParam(opts['fieldsAppClipDomainStatuses'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppClipDomainStatusResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/appClipDomainDebugStatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesAppClipDomainDebugStatusGetToOneRelationship operation.
     * @callback module:api/BuildBundlesApi~buildBundlesAppClipDomainDebugStatusGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildBundleAppClipDomainDebugStatusLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/BuildBundlesApi~buildBundlesAppClipDomainDebugStatusGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildBundleAppClipDomainDebugStatusLinkageResponse}
     */
    buildBundlesAppClipDomainDebugStatusGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesAppClipDomainDebugStatusGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildBundleAppClipDomainDebugStatusLinkageResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/relationships/appClipDomainDebugStatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesBetaAppClipInvocationsGetToManyRelated operation.
     * @callback module:api/BuildBundlesApi~buildBundlesBetaAppClipInvocationsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BetaAppClipInvocationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBetaAppClipInvocations] the fields to include for returned resources of type betaAppClipInvocations
     * @param {Array.<module:model/String>} [fieldsBetaAppClipInvocationLocalizations] the fields to include for returned resources of type betaAppClipInvocationLocalizations
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitBetaAppClipInvocationLocalizations] maximum number of related betaAppClipInvocationLocalizations returned (when they are included)
     * @param {module:api/BuildBundlesApi~buildBundlesBetaAppClipInvocationsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BetaAppClipInvocationsResponse}
     */
    buildBundlesBetaAppClipInvocationsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesBetaAppClipInvocationsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[betaAppClipInvocations]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppClipInvocations'], 'csv'),
        'fields[betaAppClipInvocationLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsBetaAppClipInvocationLocalizations'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[betaAppClipInvocationLocalizations]': opts['limitBetaAppClipInvocationLocalizations']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BetaAppClipInvocationsResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/betaAppClipInvocations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesBetaAppClipInvocationsGetToManyRelationship operation.
     * @callback module:api/BuildBundlesApi~buildBundlesBetaAppClipInvocationsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildBundleBetaAppClipInvocationsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/BuildBundlesApi~buildBundlesBetaAppClipInvocationsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildBundleBetaAppClipInvocationsLinkagesResponse}
     */
    buildBundlesBetaAppClipInvocationsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesBetaAppClipInvocationsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildBundleBetaAppClipInvocationsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/relationships/betaAppClipInvocations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesBuildBundleFileSizesGetToManyRelated operation.
     * @callback module:api/BuildBundlesApi~buildBundlesBuildBundleFileSizesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildBundleFileSizesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBuildBundleFileSizes] the fields to include for returned resources of type buildBundleFileSizes
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/BuildBundlesApi~buildBundlesBuildBundleFileSizesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildBundleFileSizesResponse}
     */
    buildBundlesBuildBundleFileSizesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesBuildBundleFileSizesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[buildBundleFileSizes]': this.apiClient.buildCollectionParam(opts['fieldsBuildBundleFileSizes'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildBundleFileSizesResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/buildBundleFileSizes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the buildBundlesBuildBundleFileSizesGetToManyRelationship operation.
     * @callback module:api/BuildBundlesApi~buildBundlesBuildBundleFileSizesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildBundleBuildBundleFileSizesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/BuildBundlesApi~buildBundlesBuildBundleFileSizesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildBundleBuildBundleFileSizesLinkagesResponse}
     */
    buildBundlesBuildBundleFileSizesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling buildBundlesBuildBundleFileSizesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildBundleBuildBundleFileSizesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/buildBundles/{id}/relationships/buildBundleFileSizes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
