/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InAppPurchaseAppStoreReviewScreenshotResponse from '../model/InAppPurchaseAppStoreReviewScreenshotResponse';
import InAppPurchaseAvailabilityResponse from '../model/InAppPurchaseAvailabilityResponse';
import InAppPurchaseContentResponse from '../model/InAppPurchaseContentResponse';
import InAppPurchaseImagesResponse from '../model/InAppPurchaseImagesResponse';
import InAppPurchaseLocalizationsResponse from '../model/InAppPurchaseLocalizationsResponse';
import InAppPurchasePricePointsResponse from '../model/InAppPurchasePricePointsResponse';
import InAppPurchasePriceScheduleResponse from '../model/InAppPurchasePriceScheduleResponse';
import InAppPurchaseResponse from '../model/InAppPurchaseResponse';
import InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse from '../model/InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse';
import InAppPurchaseV2ContentLinkageResponse from '../model/InAppPurchaseV2ContentLinkageResponse';
import InAppPurchaseV2CreateRequest from '../model/InAppPurchaseV2CreateRequest';
import InAppPurchaseV2IapPriceScheduleLinkageResponse from '../model/InAppPurchaseV2IapPriceScheduleLinkageResponse';
import InAppPurchaseV2ImagesLinkagesResponse from '../model/InAppPurchaseV2ImagesLinkagesResponse';
import InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse from '../model/InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse';
import InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse from '../model/InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse';
import InAppPurchaseV2PricePointsLinkagesResponse from '../model/InAppPurchaseV2PricePointsLinkagesResponse';
import InAppPurchaseV2PromotedPurchaseLinkageResponse from '../model/InAppPurchaseV2PromotedPurchaseLinkageResponse';
import InAppPurchaseV2Response from '../model/InAppPurchaseV2Response';
import InAppPurchaseV2UpdateRequest from '../model/InAppPurchaseV2UpdateRequest';
import PromotedPurchaseResponse from '../model/PromotedPurchaseResponse';

/**
* InAppPurchases service.
* @module api/InAppPurchasesApi
* @version 4.1
*/
export default class InAppPurchasesApi {

    /**
    * Constructs a new InAppPurchasesApi. 
    * @alias module:api/InAppPurchasesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the inAppPurchasesGetInstance operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitApps] maximum number of related apps returned (when they are included)
     * @param {module:api/InAppPurchasesApi~inAppPurchasesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseResponse}
     */
    inAppPurchasesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[apps]': opts['limitApps']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchases/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseAppStoreReviewScreenshotResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseAppStoreReviewScreenshots] the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseAppStoreReviewScreenshotResponse}
     */
    inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseAppStoreReviewScreenshots]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseAppStoreReviewScreenshots'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseAppStoreReviewScreenshotResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/appStoreReviewScreenshot', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse}
     */
    inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/appStoreReviewScreenshot', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2ContentGetToOneRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2ContentGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseContentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseContents] the fields to include for returned resources of type inAppPurchaseContents
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2ContentGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseContentResponse}
     */
    inAppPurchasesV2ContentGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2ContentGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseContents]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseContents'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseContentResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/content', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2ContentGetToOneRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2ContentGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2ContentLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2ContentGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2ContentLinkageResponse}
     */
    inAppPurchasesV2ContentGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2ContentGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2ContentLinkageResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/content', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2CreateInstance operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2CreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/InAppPurchaseV2CreateRequest} inAppPurchaseV2CreateRequest InAppPurchase representation
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2CreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2Response}
     */
    inAppPurchasesV2CreateInstance(inAppPurchaseV2CreateRequest, callback) {
      let postBody = inAppPurchaseV2CreateRequest;
      // verify the required parameter 'inAppPurchaseV2CreateRequest' is set
      if (inAppPurchaseV2CreateRequest === undefined || inAppPurchaseV2CreateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchaseV2CreateRequest' when calling inAppPurchasesV2CreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2Response;
      return this.apiClient.callApi(
        '/v2/inAppPurchases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2DeleteInstance operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2DeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2DeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    inAppPurchasesV2DeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2DeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2GetInstance operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2GetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseLocalizations] the fields to include for returned resources of type inAppPurchaseLocalizations
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePricePoints] the fields to include for returned resources of type inAppPurchasePricePoints
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseContents] the fields to include for returned resources of type inAppPurchaseContents
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseAppStoreReviewScreenshots] the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots
     * @param {Array.<module:model/String>} [fieldsPromotedPurchases] the fields to include for returned resources of type promotedPurchases
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePriceSchedules] the fields to include for returned resources of type inAppPurchasePriceSchedules
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseAvailabilities] the fields to include for returned resources of type inAppPurchaseAvailabilities
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseImages] the fields to include for returned resources of type inAppPurchaseImages
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitImages] maximum number of related images returned (when they are included)
     * @param {Number} [limitInAppPurchaseLocalizations] maximum number of related inAppPurchaseLocalizations returned (when they are included)
     * @param {Number} [limitPricePoints] maximum number of related pricePoints returned (when they are included)
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2GetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2Response}
     */
    inAppPurchasesV2GetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2GetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'fields[inAppPurchaseLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseLocalizations'], 'csv'),
        'fields[inAppPurchasePricePoints]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePricePoints'], 'csv'),
        'fields[inAppPurchaseContents]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseContents'], 'csv'),
        'fields[inAppPurchaseAppStoreReviewScreenshots]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseAppStoreReviewScreenshots'], 'csv'),
        'fields[promotedPurchases]': this.apiClient.buildCollectionParam(opts['fieldsPromotedPurchases'], 'csv'),
        'fields[inAppPurchasePriceSchedules]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePriceSchedules'], 'csv'),
        'fields[inAppPurchaseAvailabilities]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseAvailabilities'], 'csv'),
        'fields[inAppPurchaseImages]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseImages'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[images]': opts['limitImages'],
        'limit[inAppPurchaseLocalizations]': opts['limitInAppPurchaseLocalizations'],
        'limit[pricePoints]': opts['limitPricePoints']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2Response;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2IapPriceScheduleGetToOneRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2IapPriceScheduleGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePriceSchedules] the fields to include for returned resources of type inAppPurchasePriceSchedules
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePrices] the fields to include for returned resources of type inAppPurchasePrices
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitManualPrices] maximum number of related manualPrices returned (when they are included)
     * @param {Number} [limitAutomaticPrices] maximum number of related automaticPrices returned (when they are included)
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2IapPriceScheduleGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleResponse}
     */
    inAppPurchasesV2IapPriceScheduleGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2IapPriceScheduleGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchasePriceSchedules]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePriceSchedules'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[inAppPurchasePrices]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePrices'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[manualPrices]': opts['limitManualPrices'],
        'limit[automaticPrices]': opts['limitAutomaticPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/iapPriceSchedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2IapPriceScheduleGetToOneRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2IapPriceScheduleGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2IapPriceScheduleLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2IapPriceScheduleGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2IapPriceScheduleLinkageResponse}
     */
    inAppPurchasesV2IapPriceScheduleGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2IapPriceScheduleGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2IapPriceScheduleLinkageResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/iapPriceSchedule', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2ImagesGetToManyRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2ImagesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseImagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseImages] the fields to include for returned resources of type inAppPurchaseImages
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2ImagesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseImagesResponse}
     */
    inAppPurchasesV2ImagesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2ImagesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseImages]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseImages'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseImagesResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/images', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2ImagesGetToManyRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2ImagesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2ImagesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2ImagesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2ImagesLinkagesResponse}
     */
    inAppPurchasesV2ImagesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2ImagesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2ImagesLinkagesResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/images', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseAvailabilities] the fields to include for returned resources of type inAppPurchaseAvailabilities
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAvailableTerritories] maximum number of related availableTerritories returned (when they are included)
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseAvailabilityResponse}
     */
    inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseAvailabilities]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseAvailabilities'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[availableTerritories]': opts['limitAvailableTerritories']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseAvailabilityResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/inAppPurchaseAvailability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse}
     */
    inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/inAppPurchaseAvailability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseLocalizationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchaseLocalizations] the fields to include for returned resources of type inAppPurchaseLocalizations
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseLocalizationsResponse}
     */
    inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchaseLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchaseLocalizations'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseLocalizationsResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/inAppPurchaseLocalizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse}
     */
    inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/inAppPurchaseLocalizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2PricePointsGetToManyRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2PricePointsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePricePointsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePricePoints] the fields to include for returned resources of type inAppPurchasePricePoints
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2PricePointsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePricePointsResponse}
     */
    inAppPurchasesV2PricePointsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2PricePointsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[inAppPurchasePricePoints]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePricePoints'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/csv'];
      let returnType = InAppPurchasePricePointsResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/pricePoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2PricePointsGetToManyRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2PricePointsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2PricePointsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2PricePointsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2PricePointsLinkagesResponse}
     */
    inAppPurchasesV2PricePointsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2PricePointsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2PricePointsLinkagesResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/pricePoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2PromotedPurchaseGetToOneRelated operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2PromotedPurchaseGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotedPurchaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsPromotedPurchases] the fields to include for returned resources of type promotedPurchases
     * @param {Array.<module:model/String>} [fieldsInAppPurchases] the fields to include for returned resources of type inAppPurchases
     * @param {Array.<module:model/String>} [fieldsSubscriptions] the fields to include for returned resources of type subscriptions
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2PromotedPurchaseGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotedPurchaseResponse}
     */
    inAppPurchasesV2PromotedPurchaseGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2PromotedPurchaseGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[promotedPurchases]': this.apiClient.buildCollectionParam(opts['fieldsPromotedPurchases'], 'csv'),
        'fields[inAppPurchases]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchases'], 'csv'),
        'fields[subscriptions]': this.apiClient.buildCollectionParam(opts['fieldsSubscriptions'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotedPurchaseResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/promotedPurchase', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2PromotedPurchaseGetToOneRelationship operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2PromotedPurchaseGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2PromotedPurchaseLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2PromotedPurchaseGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2PromotedPurchaseLinkageResponse}
     */
    inAppPurchasesV2PromotedPurchaseGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2PromotedPurchaseGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2PromotedPurchaseLinkageResponse;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}/relationships/promotedPurchase', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasesV2UpdateInstance operation.
     * @callback module:api/InAppPurchasesApi~inAppPurchasesV2UpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchaseV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/InAppPurchaseV2UpdateRequest} inAppPurchaseV2UpdateRequest InAppPurchase representation
     * @param {module:api/InAppPurchasesApi~inAppPurchasesV2UpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchaseV2Response}
     */
    inAppPurchasesV2UpdateInstance(id, inAppPurchaseV2UpdateRequest, callback) {
      let postBody = inAppPurchaseV2UpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasesV2UpdateInstance");
      }
      // verify the required parameter 'inAppPurchaseV2UpdateRequest' is set
      if (inAppPurchaseV2UpdateRequest === undefined || inAppPurchaseV2UpdateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchaseV2UpdateRequest' when calling inAppPurchasesV2UpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchaseV2Response;
      return this.apiClient.callApi(
        '/v2/inAppPurchases/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
