/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterActivityImageCreateRequest from '../model/GameCenterActivityImageCreateRequest';
import GameCenterActivityImageResponse from '../model/GameCenterActivityImageResponse';
import GameCenterActivityImageUpdateRequest from '../model/GameCenterActivityImageUpdateRequest';

/**
* GameCenterActivityImages service.
* @module api/GameCenterActivityImagesApi
* @version 4.1
*/
export default class GameCenterActivityImagesApi {

    /**
    * Constructs a new GameCenterActivityImagesApi. 
    * @alias module:api/GameCenterActivityImagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterActivityImagesCreateInstance operation.
     * @callback module:api/GameCenterActivityImagesApi~gameCenterActivityImagesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterActivityImageCreateRequest} gameCenterActivityImageCreateRequest GameCenterActivityImage representation
     * @param {module:api/GameCenterActivityImagesApi~gameCenterActivityImagesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityImageResponse}
     */
    gameCenterActivityImagesCreateInstance(gameCenterActivityImageCreateRequest, callback) {
      let postBody = gameCenterActivityImageCreateRequest;
      // verify the required parameter 'gameCenterActivityImageCreateRequest' is set
      if (gameCenterActivityImageCreateRequest === undefined || gameCenterActivityImageCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityImageCreateRequest' when calling gameCenterActivityImagesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityImages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityImagesDeleteInstance operation.
     * @callback module:api/GameCenterActivityImagesApi~gameCenterActivityImagesDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterActivityImagesApi~gameCenterActivityImagesDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gameCenterActivityImagesDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityImagesDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityImages/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityImagesGetInstance operation.
     * @callback module:api/GameCenterActivityImagesApi~gameCenterActivityImagesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterActivityImages] the fields to include for returned resources of type gameCenterActivityImages
     * @param {module:api/GameCenterActivityImagesApi~gameCenterActivityImagesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityImageResponse}
     */
    gameCenterActivityImagesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityImagesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterActivityImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterActivityImages'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityImages/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterActivityImagesUpdateInstance operation.
     * @callback module:api/GameCenterActivityImagesApi~gameCenterActivityImagesUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterActivityImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/GameCenterActivityImageUpdateRequest} gameCenterActivityImageUpdateRequest GameCenterActivityImage representation
     * @param {module:api/GameCenterActivityImagesApi~gameCenterActivityImagesUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterActivityImageResponse}
     */
    gameCenterActivityImagesUpdateInstance(id, gameCenterActivityImageUpdateRequest, callback) {
      let postBody = gameCenterActivityImageUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterActivityImagesUpdateInstance");
      }
      // verify the required parameter 'gameCenterActivityImageUpdateRequest' is set
      if (gameCenterActivityImageUpdateRequest === undefined || gameCenterActivityImageUpdateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterActivityImageUpdateRequest' when calling gameCenterActivityImagesUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterActivityImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterActivityImages/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
