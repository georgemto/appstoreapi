/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterMatchmakingQueuesResponse from '../model/GameCenterMatchmakingQueuesResponse';
import GameCenterMatchmakingRuleSetCreateRequest from '../model/GameCenterMatchmakingRuleSetCreateRequest';
import GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse from '../model/GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse';
import GameCenterMatchmakingRuleSetResponse from '../model/GameCenterMatchmakingRuleSetResponse';
import GameCenterMatchmakingRuleSetRulesLinkagesResponse from '../model/GameCenterMatchmakingRuleSetRulesLinkagesResponse';
import GameCenterMatchmakingRuleSetTeamsLinkagesResponse from '../model/GameCenterMatchmakingRuleSetTeamsLinkagesResponse';
import GameCenterMatchmakingRuleSetUpdateRequest from '../model/GameCenterMatchmakingRuleSetUpdateRequest';
import GameCenterMatchmakingRuleSetsResponse from '../model/GameCenterMatchmakingRuleSetsResponse';
import GameCenterMatchmakingRulesResponse from '../model/GameCenterMatchmakingRulesResponse';
import GameCenterMatchmakingTeamsResponse from '../model/GameCenterMatchmakingTeamsResponse';

/**
* GameCenterMatchmakingRuleSets service.
* @module api/GameCenterMatchmakingRuleSetsApi
* @version 4.1
*/
export default class GameCenterMatchmakingRuleSetsApi {

    /**
    * Constructs a new GameCenterMatchmakingRuleSetsApi. 
    * @alias module:api/GameCenterMatchmakingRuleSetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsCreateInstance operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterMatchmakingRuleSetCreateRequest} gameCenterMatchmakingRuleSetCreateRequest GameCenterMatchmakingRuleSet representation
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetResponse}
     */
    gameCenterMatchmakingRuleSetsCreateInstance(gameCenterMatchmakingRuleSetCreateRequest, callback) {
      let postBody = gameCenterMatchmakingRuleSetCreateRequest;
      // verify the required parameter 'gameCenterMatchmakingRuleSetCreateRequest' is set
      if (gameCenterMatchmakingRuleSetCreateRequest === undefined || gameCenterMatchmakingRuleSetCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterMatchmakingRuleSetCreateRequest' when calling gameCenterMatchmakingRuleSetsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsDeleteInstance operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsDeleteInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsDeleteInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    gameCenterMatchmakingRuleSetsDeleteInstance(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsDeleteInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsGetCollection operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRuleSets] the fields to include for returned resources of type gameCenterMatchmakingRuleSets
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingTeams] the fields to include for returned resources of type gameCenterMatchmakingTeams
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRules] the fields to include for returned resources of type gameCenterMatchmakingRules
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingQueues] the fields to include for returned resources of type gameCenterMatchmakingQueues
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitMatchmakingQueues] maximum number of related matchmakingQueues returned (when they are included)
     * @param {Number} [limitRules] maximum number of related rules returned (when they are included)
     * @param {Number} [limitTeams] maximum number of related teams returned (when they are included)
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetsResponse}
     */
    gameCenterMatchmakingRuleSetsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'fields[gameCenterMatchmakingRuleSets]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRuleSets'], 'csv'),
        'fields[gameCenterMatchmakingTeams]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingTeams'], 'csv'),
        'fields[gameCenterMatchmakingRules]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRules'], 'csv'),
        'fields[gameCenterMatchmakingQueues]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingQueues'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[matchmakingQueues]': opts['limitMatchmakingQueues'],
        'limit[rules]': opts['limitRules'],
        'limit[teams]': opts['limitTeams']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetsResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsGetInstance operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRuleSets] the fields to include for returned resources of type gameCenterMatchmakingRuleSets
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingTeams] the fields to include for returned resources of type gameCenterMatchmakingTeams
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRules] the fields to include for returned resources of type gameCenterMatchmakingRules
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingQueues] the fields to include for returned resources of type gameCenterMatchmakingQueues
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitMatchmakingQueues] maximum number of related matchmakingQueues returned (when they are included)
     * @param {Number} [limitRules] maximum number of related rules returned (when they are included)
     * @param {Number} [limitTeams] maximum number of related teams returned (when they are included)
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetResponse}
     */
    gameCenterMatchmakingRuleSetsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterMatchmakingRuleSets]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRuleSets'], 'csv'),
        'fields[gameCenterMatchmakingTeams]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingTeams'], 'csv'),
        'fields[gameCenterMatchmakingRules]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRules'], 'csv'),
        'fields[gameCenterMatchmakingQueues]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingQueues'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[matchmakingQueues]': opts['limitMatchmakingQueues'],
        'limit[rules]': opts['limitRules'],
        'limit[teams]': opts['limitTeams']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingQueuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingQueues] the fields to include for returned resources of type gameCenterMatchmakingQueues
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRuleSets] the fields to include for returned resources of type gameCenterMatchmakingRuleSets
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingQueuesResponse}
     */
    gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterMatchmakingQueues]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingQueues'], 'csv'),
        'fields[gameCenterMatchmakingRuleSets]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRuleSets'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingQueuesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/matchmakingQueues', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelationship operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse}
     */
    gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/relationships/matchmakingQueues', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsRulesGetToManyRelated operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsRulesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRulesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingRules] the fields to include for returned resources of type gameCenterMatchmakingRules
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsRulesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRulesResponse}
     */
    gameCenterMatchmakingRuleSetsRulesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsRulesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterMatchmakingRules]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingRules'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRulesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsRulesGetToManyRelationship operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsRulesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetRulesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsRulesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetRulesLinkagesResponse}
     */
    gameCenterMatchmakingRuleSetsRulesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsRulesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetRulesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/relationships/rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsTeamsGetToManyRelated operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsTeamsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingTeamsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterMatchmakingTeams] the fields to include for returned resources of type gameCenterMatchmakingTeams
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsTeamsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingTeamsResponse}
     */
    gameCenterMatchmakingRuleSetsTeamsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsTeamsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterMatchmakingTeams]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterMatchmakingTeams'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingTeamsResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/teams', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsTeamsGetToManyRelationship operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsTeamsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetTeamsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsTeamsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetTeamsLinkagesResponse}
     */
    gameCenterMatchmakingRuleSetsTeamsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsTeamsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetTeamsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}/relationships/teams', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterMatchmakingRuleSetsUpdateInstance operation.
     * @callback module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterMatchmakingRuleSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/GameCenterMatchmakingRuleSetUpdateRequest} gameCenterMatchmakingRuleSetUpdateRequest GameCenterMatchmakingRuleSet representation
     * @param {module:api/GameCenterMatchmakingRuleSetsApi~gameCenterMatchmakingRuleSetsUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterMatchmakingRuleSetResponse}
     */
    gameCenterMatchmakingRuleSetsUpdateInstance(id, gameCenterMatchmakingRuleSetUpdateRequest, callback) {
      let postBody = gameCenterMatchmakingRuleSetUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterMatchmakingRuleSetsUpdateInstance");
      }
      // verify the required parameter 'gameCenterMatchmakingRuleSetUpdateRequest' is set
      if (gameCenterMatchmakingRuleSetUpdateRequest === undefined || gameCenterMatchmakingRuleSetUpdateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterMatchmakingRuleSetUpdateRequest' when calling gameCenterMatchmakingRuleSetsUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterMatchmakingRuleSetResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterMatchmakingRuleSets/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
