/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppPriceScheduleAutomaticPricesLinkagesResponse from '../model/AppPriceScheduleAutomaticPricesLinkagesResponse';
import AppPriceScheduleBaseTerritoryLinkageResponse from '../model/AppPriceScheduleBaseTerritoryLinkageResponse';
import AppPriceScheduleCreateRequest from '../model/AppPriceScheduleCreateRequest';
import AppPriceScheduleManualPricesLinkagesResponse from '../model/AppPriceScheduleManualPricesLinkagesResponse';
import AppPriceScheduleResponse from '../model/AppPriceScheduleResponse';
import AppPricesV2Response from '../model/AppPricesV2Response';
import ErrorResponse from '../model/ErrorResponse';
import TerritoryResponse from '../model/TerritoryResponse';

/**
* AppPriceSchedules service.
* @module api/AppPriceSchedulesApi
* @version 4.1
*/
export default class AppPriceSchedulesApi {

    /**
    * Constructs a new AppPriceSchedulesApi. 
    * @alias module:api/AppPriceSchedulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appPriceSchedulesAutomaticPricesGetToManyRelated operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesAutomaticPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPricesV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterStartDate] filter by attribute 'startDate'
     * @param {Array.<String>} [filterEndDate] filter by attribute 'endDate'
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [fieldsAppPricePoints] the fields to include for returned resources of type appPricePoints
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesAutomaticPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPricesV2Response}
     */
    appPriceSchedulesAutomaticPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesAutomaticPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[startDate]': this.apiClient.buildCollectionParam(opts['filterStartDate'], 'csv'),
        'filter[endDate]': this.apiClient.buildCollectionParam(opts['filterEndDate'], 'csv'),
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'fields[appPricePoints]': this.apiClient.buildCollectionParam(opts['fieldsAppPricePoints'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPricesV2Response;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/automaticPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesAutomaticPricesGetToManyRelationship operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesAutomaticPricesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPriceScheduleAutomaticPricesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesAutomaticPricesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPriceScheduleAutomaticPricesLinkagesResponse}
     */
    appPriceSchedulesAutomaticPricesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesAutomaticPricesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPriceScheduleAutomaticPricesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/relationships/automaticPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesBaseTerritoryGetToOneRelated operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesBaseTerritoryGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerritoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesBaseTerritoryGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerritoryResponse}
     */
    appPriceSchedulesBaseTerritoryGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesBaseTerritoryGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerritoryResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/baseTerritory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesBaseTerritoryGetToOneRelationship operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesBaseTerritoryGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPriceScheduleBaseTerritoryLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesBaseTerritoryGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPriceScheduleBaseTerritoryLinkageResponse}
     */
    appPriceSchedulesBaseTerritoryGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesBaseTerritoryGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPriceScheduleBaseTerritoryLinkageResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/relationships/baseTerritory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesCreateInstance operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPriceScheduleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppPriceScheduleCreateRequest} appPriceScheduleCreateRequest AppPriceSchedule representation
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPriceScheduleResponse}
     */
    appPriceSchedulesCreateInstance(appPriceScheduleCreateRequest, callback) {
      let postBody = appPriceScheduleCreateRequest;
      // verify the required parameter 'appPriceScheduleCreateRequest' is set
      if (appPriceScheduleCreateRequest === undefined || appPriceScheduleCreateRequest === null) {
        throw new Error("Missing the required parameter 'appPriceScheduleCreateRequest' when calling appPriceSchedulesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppPriceScheduleResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesGetInstance operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPriceScheduleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppPriceSchedules] the fields to include for returned resources of type appPriceSchedules
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAutomaticPrices] maximum number of related automaticPrices returned (when they are included)
     * @param {Number} [limitManualPrices] maximum number of related manualPrices returned (when they are included)
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPriceScheduleResponse}
     */
    appPriceSchedulesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appPriceSchedules]': this.apiClient.buildCollectionParam(opts['fieldsAppPriceSchedules'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[automaticPrices]': opts['limitAutomaticPrices'],
        'limit[manualPrices]': opts['limitManualPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPriceScheduleResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesManualPricesGetToManyRelated operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesManualPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPricesV2Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterStartDate] filter by attribute 'startDate'
     * @param {Array.<String>} [filterEndDate] filter by attribute 'endDate'
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsAppPrices] the fields to include for returned resources of type appPrices
     * @param {Array.<module:model/String>} [fieldsAppPricePoints] the fields to include for returned resources of type appPricePoints
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesManualPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPricesV2Response}
     */
    appPriceSchedulesManualPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesManualPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[startDate]': this.apiClient.buildCollectionParam(opts['filterStartDate'], 'csv'),
        'filter[endDate]': this.apiClient.buildCollectionParam(opts['filterEndDate'], 'csv'),
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[appPrices]': this.apiClient.buildCollectionParam(opts['fieldsAppPrices'], 'csv'),
        'fields[appPricePoints]': this.apiClient.buildCollectionParam(opts['fieldsAppPricePoints'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPricesV2Response;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/manualPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appPriceSchedulesManualPricesGetToManyRelationship operation.
     * @callback module:api/AppPriceSchedulesApi~appPriceSchedulesManualPricesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppPriceScheduleManualPricesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/AppPriceSchedulesApi~appPriceSchedulesManualPricesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppPriceScheduleManualPricesLinkagesResponse}
     */
    appPriceSchedulesManualPricesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appPriceSchedulesManualPricesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppPriceScheduleManualPricesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/appPriceSchedules/{id}/relationships/manualPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
