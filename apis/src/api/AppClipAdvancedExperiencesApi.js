/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppClipAdvancedExperienceCreateRequest from '../model/AppClipAdvancedExperienceCreateRequest';
import AppClipAdvancedExperienceResponse from '../model/AppClipAdvancedExperienceResponse';
import AppClipAdvancedExperienceUpdateRequest from '../model/AppClipAdvancedExperienceUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppClipAdvancedExperiences service.
* @module api/AppClipAdvancedExperiencesApi
* @version 4.1
*/
export default class AppClipAdvancedExperiencesApi {

    /**
    * Constructs a new AppClipAdvancedExperiencesApi. 
    * @alias module:api/AppClipAdvancedExperiencesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appClipAdvancedExperiencesCreateInstance operation.
     * @callback module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppClipAdvancedExperienceCreateRequest} appClipAdvancedExperienceCreateRequest AppClipAdvancedExperience representation
     * @param {module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceResponse}
     */
    appClipAdvancedExperiencesCreateInstance(appClipAdvancedExperienceCreateRequest, callback) {
      let postBody = appClipAdvancedExperienceCreateRequest;
      // verify the required parameter 'appClipAdvancedExperienceCreateRequest' is set
      if (appClipAdvancedExperienceCreateRequest === undefined || appClipAdvancedExperienceCreateRequest === null) {
        throw new Error("Missing the required parameter 'appClipAdvancedExperienceCreateRequest' when calling appClipAdvancedExperiencesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperiences', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appClipAdvancedExperiencesGetInstance operation.
     * @callback module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppClipAdvancedExperiences] the fields to include for returned resources of type appClipAdvancedExperiences
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitLocalizations] maximum number of related localizations returned (when they are included)
     * @param {module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceResponse}
     */
    appClipAdvancedExperiencesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appClipAdvancedExperiencesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appClipAdvancedExperiences]': this.apiClient.buildCollectionParam(opts['fieldsAppClipAdvancedExperiences'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[localizations]': opts['limitLocalizations']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperiences/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appClipAdvancedExperiencesUpdateInstance operation.
     * @callback module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppClipAdvancedExperienceUpdateRequest} appClipAdvancedExperienceUpdateRequest AppClipAdvancedExperience representation
     * @param {module:api/AppClipAdvancedExperiencesApi~appClipAdvancedExperiencesUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceResponse}
     */
    appClipAdvancedExperiencesUpdateInstance(id, appClipAdvancedExperienceUpdateRequest, callback) {
      let postBody = appClipAdvancedExperienceUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appClipAdvancedExperiencesUpdateInstance");
      }
      // verify the required parameter 'appClipAdvancedExperienceUpdateRequest' is set
      if (appClipAdvancedExperienceUpdateRequest === undefined || appClipAdvancedExperienceUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appClipAdvancedExperienceUpdateRequest' when calling appClipAdvancedExperiencesUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperiences/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
