/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import GameCenterChallengeImageResponse from '../model/GameCenterChallengeImageResponse';
import GameCenterChallengeLocalizationsResponse from '../model/GameCenterChallengeLocalizationsResponse';
import GameCenterChallengeVersionCreateRequest from '../model/GameCenterChallengeVersionCreateRequest';
import GameCenterChallengeVersionDefaultImageLinkageResponse from '../model/GameCenterChallengeVersionDefaultImageLinkageResponse';
import GameCenterChallengeVersionLocalizationsLinkagesResponse from '../model/GameCenterChallengeVersionLocalizationsLinkagesResponse';
import GameCenterChallengeVersionResponse from '../model/GameCenterChallengeVersionResponse';

/**
* GameCenterChallengeVersions service.
* @module api/GameCenterChallengeVersionsApi
* @version 4.1
*/
export default class GameCenterChallengeVersionsApi {

    /**
    * Constructs a new GameCenterChallengeVersionsApi. 
    * @alias module:api/GameCenterChallengeVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsCreateInstance operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/GameCenterChallengeVersionCreateRequest} gameCenterChallengeVersionCreateRequest GameCenterChallengeVersion representation
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeVersionResponse}
     */
    gameCenterChallengeVersionsCreateInstance(gameCenterChallengeVersionCreateRequest, callback) {
      let postBody = gameCenterChallengeVersionCreateRequest;
      // verify the required parameter 'gameCenterChallengeVersionCreateRequest' is set
      if (gameCenterChallengeVersionCreateRequest === undefined || gameCenterChallengeVersionCreateRequest === null) {
        throw new Error("Missing the required parameter 'gameCenterChallengeVersionCreateRequest' when calling gameCenterChallengeVersionsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeVersionResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsDefaultImageGetToOneRelated operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsDefaultImageGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeImages] the fields to include for returned resources of type gameCenterChallengeImages
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsDefaultImageGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeImageResponse}
     */
    gameCenterChallengeVersionsDefaultImageGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterChallengeVersionsDefaultImageGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterChallengeImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeImages'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeImageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions/{id}/defaultImage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsDefaultImageGetToOneRelationship operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsDefaultImageGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeVersionDefaultImageLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsDefaultImageGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeVersionDefaultImageLinkageResponse}
     */
    gameCenterChallengeVersionsDefaultImageGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterChallengeVersionsDefaultImageGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeVersionDefaultImageLinkageResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions/{id}/relationships/defaultImage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsGetInstance operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeVersions] the fields to include for returned resources of type gameCenterChallengeVersions
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeLocalizations] the fields to include for returned resources of type gameCenterChallengeLocalizations
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeImages] the fields to include for returned resources of type gameCenterChallengeImages
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitLocalizations] maximum number of related localizations returned (when they are included)
     * @param {Number} [limitReleases] maximum number of related releases returned (when they are included)
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeVersionResponse}
     */
    gameCenterChallengeVersionsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterChallengeVersionsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterChallengeVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeVersions'], 'csv'),
        'fields[gameCenterChallengeLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeLocalizations'], 'csv'),
        'fields[gameCenterChallengeImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeImages'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[localizations]': opts['limitLocalizations'],
        'limit[releases]': opts['limitReleases']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeVersionResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsLocalizationsGetToManyRelated operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsLocalizationsGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeLocalizationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeLocalizations] the fields to include for returned resources of type gameCenterChallengeLocalizations
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeVersions] the fields to include for returned resources of type gameCenterChallengeVersions
     * @param {Array.<module:model/String>} [fieldsGameCenterChallengeImages] the fields to include for returned resources of type gameCenterChallengeImages
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsLocalizationsGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeLocalizationsResponse}
     */
    gameCenterChallengeVersionsLocalizationsGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterChallengeVersionsLocalizationsGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[gameCenterChallengeLocalizations]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeLocalizations'], 'csv'),
        'fields[gameCenterChallengeVersions]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeVersions'], 'csv'),
        'fields[gameCenterChallengeImages]': this.apiClient.buildCollectionParam(opts['fieldsGameCenterChallengeImages'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeLocalizationsResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions/{id}/localizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gameCenterChallengeVersionsLocalizationsGetToManyRelationship operation.
     * @callback module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsLocalizationsGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameCenterChallengeVersionLocalizationsLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/GameCenterChallengeVersionsApi~gameCenterChallengeVersionsLocalizationsGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameCenterChallengeVersionLocalizationsLinkagesResponse}
     */
    gameCenterChallengeVersionsLocalizationsGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling gameCenterChallengeVersionsLocalizationsGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GameCenterChallengeVersionLocalizationsLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/gameCenterChallengeVersions/{id}/relationships/localizations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
