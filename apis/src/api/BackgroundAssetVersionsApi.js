/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BackgroundAssetUploadFilesResponse from '../model/BackgroundAssetUploadFilesResponse';
import BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse from '../model/BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse';
import BackgroundAssetVersionCreateRequest from '../model/BackgroundAssetVersionCreateRequest';
import BackgroundAssetVersionResponse from '../model/BackgroundAssetVersionResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* BackgroundAssetVersions service.
* @module api/BackgroundAssetVersionsApi
* @version 4.1
*/
export default class BackgroundAssetVersionsApi {

    /**
    * Constructs a new BackgroundAssetVersionsApi. 
    * @alias module:api/BackgroundAssetVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelated operation.
     * @callback module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackgroundAssetUploadFilesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBackgroundAssetUploadFiles] the fields to include for returned resources of type backgroundAssetUploadFiles
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackgroundAssetUploadFilesResponse}
     */
    backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[backgroundAssetUploadFiles]': this.apiClient.buildCollectionParam(opts['fieldsBackgroundAssetUploadFiles'], 'csv'),
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackgroundAssetUploadFilesResponse;
      return this.apiClient.callApi(
        '/v1/backgroundAssetVersions/{id}/backgroundAssetUploadFiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelationship operation.
     * @callback module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse}
     */
    backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling backgroundAssetVersionsBackgroundAssetUploadFilesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/backgroundAssetVersions/{id}/relationships/backgroundAssetUploadFiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backgroundAssetVersionsCreateInstance operation.
     * @callback module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackgroundAssetVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/BackgroundAssetVersionCreateRequest} backgroundAssetVersionCreateRequest BackgroundAssetVersion representation
     * @param {module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackgroundAssetVersionResponse}
     */
    backgroundAssetVersionsCreateInstance(backgroundAssetVersionCreateRequest, callback) {
      let postBody = backgroundAssetVersionCreateRequest;
      // verify the required parameter 'backgroundAssetVersionCreateRequest' is set
      if (backgroundAssetVersionCreateRequest === undefined || backgroundAssetVersionCreateRequest === null) {
        throw new Error("Missing the required parameter 'backgroundAssetVersionCreateRequest' when calling backgroundAssetVersionsCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BackgroundAssetVersionResponse;
      return this.apiClient.callApi(
        '/v1/backgroundAssetVersions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the backgroundAssetVersionsGetInstance operation.
     * @callback module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BackgroundAssetVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsBackgroundAssetVersions] the fields to include for returned resources of type backgroundAssetVersions
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/BackgroundAssetVersionsApi~backgroundAssetVersionsGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BackgroundAssetVersionResponse}
     */
    backgroundAssetVersionsGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling backgroundAssetVersionsGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[backgroundAssetVersions]': this.apiClient.buildCollectionParam(opts['fieldsBackgroundAssetVersions'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BackgroundAssetVersionResponse;
      return this.apiClient.callApi(
        '/v1/backgroundAssetVersions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
