/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AppClipAdvancedExperienceImageCreateRequest from '../model/AppClipAdvancedExperienceImageCreateRequest';
import AppClipAdvancedExperienceImageResponse from '../model/AppClipAdvancedExperienceImageResponse';
import AppClipAdvancedExperienceImageUpdateRequest from '../model/AppClipAdvancedExperienceImageUpdateRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* AppClipAdvancedExperienceImages service.
* @module api/AppClipAdvancedExperienceImagesApi
* @version 4.1
*/
export default class AppClipAdvancedExperienceImagesApi {

    /**
    * Constructs a new AppClipAdvancedExperienceImagesApi. 
    * @alias module:api/AppClipAdvancedExperienceImagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appClipAdvancedExperienceImagesCreateInstance operation.
     * @callback module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AppClipAdvancedExperienceImageCreateRequest} appClipAdvancedExperienceImageCreateRequest AppClipAdvancedExperienceImage representation
     * @param {module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceImageResponse}
     */
    appClipAdvancedExperienceImagesCreateInstance(appClipAdvancedExperienceImageCreateRequest, callback) {
      let postBody = appClipAdvancedExperienceImageCreateRequest;
      // verify the required parameter 'appClipAdvancedExperienceImageCreateRequest' is set
      if (appClipAdvancedExperienceImageCreateRequest === undefined || appClipAdvancedExperienceImageCreateRequest === null) {
        throw new Error("Missing the required parameter 'appClipAdvancedExperienceImageCreateRequest' when calling appClipAdvancedExperienceImagesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceImageResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperienceImages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appClipAdvancedExperienceImagesGetInstance operation.
     * @callback module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsAppClipAdvancedExperienceImages] the fields to include for returned resources of type appClipAdvancedExperienceImages
     * @param {module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceImageResponse}
     */
    appClipAdvancedExperienceImagesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appClipAdvancedExperienceImagesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[appClipAdvancedExperienceImages]': this.apiClient.buildCollectionParam(opts['fieldsAppClipAdvancedExperienceImages'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceImageResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperienceImages/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the appClipAdvancedExperienceImagesUpdateInstance operation.
     * @callback module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesUpdateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppClipAdvancedExperienceImageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:model/AppClipAdvancedExperienceImageUpdateRequest} appClipAdvancedExperienceImageUpdateRequest AppClipAdvancedExperienceImage representation
     * @param {module:api/AppClipAdvancedExperienceImagesApi~appClipAdvancedExperienceImagesUpdateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppClipAdvancedExperienceImageResponse}
     */
    appClipAdvancedExperienceImagesUpdateInstance(id, appClipAdvancedExperienceImageUpdateRequest, callback) {
      let postBody = appClipAdvancedExperienceImageUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling appClipAdvancedExperienceImagesUpdateInstance");
      }
      // verify the required parameter 'appClipAdvancedExperienceImageUpdateRequest' is set
      if (appClipAdvancedExperienceImageUpdateRequest === undefined || appClipAdvancedExperienceImageUpdateRequest === null) {
        throw new Error("Missing the required parameter 'appClipAdvancedExperienceImageUpdateRequest' when calling appClipAdvancedExperienceImagesUpdateInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AppClipAdvancedExperienceImageResponse;
      return this.apiClient.callApi(
        '/v1/appClipAdvancedExperienceImages/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
