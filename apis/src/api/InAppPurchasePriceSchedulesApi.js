/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse from '../model/InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse';
import InAppPurchasePriceScheduleBaseTerritoryLinkageResponse from '../model/InAppPurchasePriceScheduleBaseTerritoryLinkageResponse';
import InAppPurchasePriceScheduleCreateRequest from '../model/InAppPurchasePriceScheduleCreateRequest';
import InAppPurchasePriceScheduleManualPricesLinkagesResponse from '../model/InAppPurchasePriceScheduleManualPricesLinkagesResponse';
import InAppPurchasePriceScheduleResponse from '../model/InAppPurchasePriceScheduleResponse';
import InAppPurchasePricesResponse from '../model/InAppPurchasePricesResponse';
import TerritoryResponse from '../model/TerritoryResponse';

/**
* InAppPurchasePriceSchedules service.
* @module api/InAppPurchasePriceSchedulesApi
* @version 4.1
*/
export default class InAppPurchasePriceSchedulesApi {

    /**
    * Constructs a new InAppPurchasePriceSchedulesApi. 
    * @alias module:api/InAppPurchasePriceSchedulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelated operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePricesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePrices] the fields to include for returned resources of type inAppPurchasePrices
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePricePoints] the fields to include for returned resources of type inAppPurchasePricePoints
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePricesResponse}
     */
    inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[inAppPurchasePrices]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePrices'], 'csv'),
        'fields[inAppPurchasePricePoints]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePricePoints'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePricesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/automaticPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelationship operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse}
     */
    inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/relationships/automaticPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelated operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerritoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerritoryResponse}
     */
    inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerritoryResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/baseTerritory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelationship operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleBaseTerritoryLinkageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleBaseTerritoryLinkageResponse}
     */
    inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelationship(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleBaseTerritoryLinkageResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/relationships/baseTerritory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesCreateInstance operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesCreateInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/InAppPurchasePriceScheduleCreateRequest} inAppPurchasePriceScheduleCreateRequest InAppPurchasePriceSchedule representation
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesCreateInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleResponse}
     */
    inAppPurchasePriceSchedulesCreateInstance(inAppPurchasePriceScheduleCreateRequest, callback) {
      let postBody = inAppPurchasePriceScheduleCreateRequest;
      // verify the required parameter 'inAppPurchasePriceScheduleCreateRequest' is set
      if (inAppPurchasePriceScheduleCreateRequest === undefined || inAppPurchasePriceScheduleCreateRequest === null) {
        throw new Error("Missing the required parameter 'inAppPurchasePriceScheduleCreateRequest' when calling inAppPurchasePriceSchedulesCreateInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesGetInstance operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesGetInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePriceSchedules] the fields to include for returned resources of type inAppPurchasePriceSchedules
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePrices] the fields to include for returned resources of type inAppPurchasePrices
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {Number} [limitAutomaticPrices] maximum number of related automaticPrices returned (when they are included)
     * @param {Number} [limitManualPrices] maximum number of related manualPrices returned (when they are included)
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesGetInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleResponse}
     */
    inAppPurchasePriceSchedulesGetInstance(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesGetInstance");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields[inAppPurchasePriceSchedules]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePriceSchedules'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'fields[inAppPurchasePrices]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePrices'], 'csv'),
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'limit[automaticPrices]': opts['limitAutomaticPrices'],
        'limit[manualPrices]': opts['limitManualPrices']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesManualPricesGetToManyRelated operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesManualPricesGetToManyRelatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePricesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [filterTerritory] filter by id(s) of related 'territory'
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePrices] the fields to include for returned resources of type inAppPurchasePrices
     * @param {Array.<module:model/String>} [fieldsInAppPurchasePricePoints] the fields to include for returned resources of type inAppPurchasePricePoints
     * @param {Array.<module:model/String>} [fieldsTerritories] the fields to include for returned resources of type territories
     * @param {Number} [limit] maximum resources per page
     * @param {Array.<module:model/String>} [include] comma-separated list of relationships to include
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesManualPricesGetToManyRelatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePricesResponse}
     */
    inAppPurchasePriceSchedulesManualPricesGetToManyRelated(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesManualPricesGetToManyRelated");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'filter[territory]': this.apiClient.buildCollectionParam(opts['filterTerritory'], 'csv'),
        'fields[inAppPurchasePrices]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePrices'], 'csv'),
        'fields[inAppPurchasePricePoints]': this.apiClient.buildCollectionParam(opts['fieldsInAppPurchasePricePoints'], 'csv'),
        'fields[territories]': this.apiClient.buildCollectionParam(opts['fieldsTerritories'], 'csv'),
        'limit': opts['limit'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePricesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/manualPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inAppPurchasePriceSchedulesManualPricesGetToManyRelationship operation.
     * @callback module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesManualPricesGetToManyRelationshipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InAppPurchasePriceScheduleManualPricesLinkagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id the id of the requested resource
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] maximum resources per page
     * @param {module:api/InAppPurchasePriceSchedulesApi~inAppPurchasePriceSchedulesManualPricesGetToManyRelationshipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InAppPurchasePriceScheduleManualPricesLinkagesResponse}
     */
    inAppPurchasePriceSchedulesManualPricesGetToManyRelationship(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling inAppPurchasePriceSchedulesManualPricesGetToManyRelationship");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['itc-bearer-token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InAppPurchasePriceScheduleManualPricesLinkagesResponse;
      return this.apiClient.callApi(
        '/v1/inAppPurchasePriceSchedules/{id}/relationships/manualPrices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
