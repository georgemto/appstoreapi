/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildUploadState from './BuildUploadState';
import StateDetail from './StateDetail';

/**
 * The BuildUploadAttributesState model module.
 * @module model/BuildUploadAttributesState
 * @version 4.1
 */
class BuildUploadAttributesState {
    /**
     * Constructs a new <code>BuildUploadAttributesState</code>.
     * @alias module:model/BuildUploadAttributesState
     */
    constructor() { 
        
        BuildUploadAttributesState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildUploadAttributesState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildUploadAttributesState} obj Optional instance to populate.
     * @return {module:model/BuildUploadAttributesState} The populated <code>BuildUploadAttributesState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildUploadAttributesState();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [StateDetail]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [StateDetail]);
            }
            if (data.hasOwnProperty('infos')) {
                obj['infos'] = ApiClient.convertToType(data['infos'], [StateDetail]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = BuildUploadState.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildUploadAttributesState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildUploadAttributesState</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                StateDetail.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                StateDetail.validateJSON(item);
            };
        }
        if (data['infos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['infos'])) {
                throw new Error("Expected the field `infos` to be an array in the JSON data but got " + data['infos']);
            }
            // validate the optional field `infos` (array)
            for (const item of data['infos']) {
                StateDetail.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/StateDetail>} errors
 */
BuildUploadAttributesState.prototype['errors'] = undefined;

/**
 * @member {Array.<module:model/StateDetail>} warnings
 */
BuildUploadAttributesState.prototype['warnings'] = undefined;

/**
 * @member {Array.<module:model/StateDetail>} infos
 */
BuildUploadAttributesState.prototype['infos'] = undefined;

/**
 * @member {module:model/BuildUploadState} state
 */
BuildUploadAttributesState.prototype['state'] = undefined;






export default BuildUploadAttributesState;

