/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CiBuildRunAttributesSourceCommit from './CiBuildRunAttributesSourceCommit';
import CiCompletionStatus from './CiCompletionStatus';
import CiExecutionProgress from './CiExecutionProgress';
import CiIssueCounts from './CiIssueCounts';

/**
 * The CiBuildRunAttributes model module.
 * @module model/CiBuildRunAttributes
 * @version 4.1
 */
class CiBuildRunAttributes {
    /**
     * Constructs a new <code>CiBuildRunAttributes</code>.
     * @alias module:model/CiBuildRunAttributes
     */
    constructor() { 
        
        CiBuildRunAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiBuildRunAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiBuildRunAttributes} obj Optional instance to populate.
     * @return {module:model/CiBuildRunAttributes} The populated <code>CiBuildRunAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiBuildRunAttributes();

            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('startedDate')) {
                obj['startedDate'] = ApiClient.convertToType(data['startedDate'], 'Date');
            }
            if (data.hasOwnProperty('finishedDate')) {
                obj['finishedDate'] = ApiClient.convertToType(data['finishedDate'], 'Date');
            }
            if (data.hasOwnProperty('sourceCommit')) {
                obj['sourceCommit'] = CiBuildRunAttributesSourceCommit.constructFromObject(data['sourceCommit']);
            }
            if (data.hasOwnProperty('destinationCommit')) {
                obj['destinationCommit'] = CiBuildRunAttributesSourceCommit.constructFromObject(data['destinationCommit']);
            }
            if (data.hasOwnProperty('isPullRequestBuild')) {
                obj['isPullRequestBuild'] = ApiClient.convertToType(data['isPullRequestBuild'], 'Boolean');
            }
            if (data.hasOwnProperty('issueCounts')) {
                obj['issueCounts'] = CiIssueCounts.constructFromObject(data['issueCounts']);
            }
            if (data.hasOwnProperty('executionProgress')) {
                obj['executionProgress'] = CiExecutionProgress.constructFromObject(data['executionProgress']);
            }
            if (data.hasOwnProperty('completionStatus')) {
                obj['completionStatus'] = CiCompletionStatus.constructFromObject(data['completionStatus']);
            }
            if (data.hasOwnProperty('startReason')) {
                obj['startReason'] = ApiClient.convertToType(data['startReason'], 'String');
            }
            if (data.hasOwnProperty('cancelReason')) {
                obj['cancelReason'] = ApiClient.convertToType(data['cancelReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiBuildRunAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiBuildRunAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `sourceCommit`
        if (data['sourceCommit']) { // data not null
          CiBuildRunAttributesSourceCommit.validateJSON(data['sourceCommit']);
        }
        // validate the optional field `destinationCommit`
        if (data['destinationCommit']) { // data not null
          CiBuildRunAttributesSourceCommit.validateJSON(data['destinationCommit']);
        }
        // validate the optional field `issueCounts`
        if (data['issueCounts']) { // data not null
          CiIssueCounts.validateJSON(data['issueCounts']);
        }
        // ensure the json data is a string
        if (data['startReason'] && !(typeof data['startReason'] === 'string' || data['startReason'] instanceof String)) {
            throw new Error("Expected the field `startReason` to be a primitive type in the JSON string but got " + data['startReason']);
        }
        // ensure the json data is a string
        if (data['cancelReason'] && !(typeof data['cancelReason'] === 'string' || data['cancelReason'] instanceof String)) {
            throw new Error("Expected the field `cancelReason` to be a primitive type in the JSON string but got " + data['cancelReason']);
        }

        return true;
    }


}



/**
 * @member {Number} number
 */
CiBuildRunAttributes.prototype['number'] = undefined;

/**
 * @member {Date} createdDate
 */
CiBuildRunAttributes.prototype['createdDate'] = undefined;

/**
 * @member {Date} startedDate
 */
CiBuildRunAttributes.prototype['startedDate'] = undefined;

/**
 * @member {Date} finishedDate
 */
CiBuildRunAttributes.prototype['finishedDate'] = undefined;

/**
 * @member {module:model/CiBuildRunAttributesSourceCommit} sourceCommit
 */
CiBuildRunAttributes.prototype['sourceCommit'] = undefined;

/**
 * @member {module:model/CiBuildRunAttributesSourceCommit} destinationCommit
 */
CiBuildRunAttributes.prototype['destinationCommit'] = undefined;

/**
 * @member {Boolean} isPullRequestBuild
 */
CiBuildRunAttributes.prototype['isPullRequestBuild'] = undefined;

/**
 * @member {module:model/CiIssueCounts} issueCounts
 */
CiBuildRunAttributes.prototype['issueCounts'] = undefined;

/**
 * @member {module:model/CiExecutionProgress} executionProgress
 */
CiBuildRunAttributes.prototype['executionProgress'] = undefined;

/**
 * @member {module:model/CiCompletionStatus} completionStatus
 */
CiBuildRunAttributes.prototype['completionStatus'] = undefined;

/**
 * @member {module:model/CiBuildRunAttributes.StartReasonEnum} startReason
 */
CiBuildRunAttributes.prototype['startReason'] = undefined;

/**
 * @member {module:model/CiBuildRunAttributes.CancelReasonEnum} cancelReason
 */
CiBuildRunAttributes.prototype['cancelReason'] = undefined;





/**
 * Allowed values for the <code>startReason</code> property.
 * @enum {String}
 * @readonly
 */
CiBuildRunAttributes['StartReasonEnum'] = {

    /**
     * value: "GIT_REF_CHANGE"
     * @const
     */
    "GIT_REF_CHANGE": "GIT_REF_CHANGE",

    /**
     * value: "MANUAL"
     * @const
     */
    "MANUAL": "MANUAL",

    /**
     * value: "MANUAL_REBUILD"
     * @const
     */
    "MANUAL_REBUILD": "MANUAL_REBUILD",

    /**
     * value: "PULL_REQUEST_OPEN"
     * @const
     */
    "PULL_REQUEST_OPEN": "PULL_REQUEST_OPEN",

    /**
     * value: "PULL_REQUEST_UPDATE"
     * @const
     */
    "PULL_REQUEST_UPDATE": "PULL_REQUEST_UPDATE",

    /**
     * value: "SCHEDULE"
     * @const
     */
    "SCHEDULE": "SCHEDULE"
};


/**
 * Allowed values for the <code>cancelReason</code> property.
 * @enum {String}
 * @readonly
 */
CiBuildRunAttributes['CancelReasonEnum'] = {

    /**
     * value: "AUTOMATICALLY_BY_NEWER_BUILD"
     * @const
     */
    "AUTOMATICALLY_BY_NEWER_BUILD": "AUTOMATICALLY_BY_NEWER_BUILD",

    /**
     * value: "MANUALLY_BY_USER"
     * @const
     */
    "MANUALLY_BY_USER": "MANUALLY_BY_USER"
};



export default CiBuildRunAttributes;

