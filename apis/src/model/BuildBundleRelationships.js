/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildBundleRelationshipsAppClipDomainCacheStatus from './BuildBundleRelationshipsAppClipDomainCacheStatus';
import BuildBundleRelationshipsBetaAppClipInvocations from './BuildBundleRelationshipsBetaAppClipInvocations';
import BuildBundleRelationshipsBuildBundleFileSizes from './BuildBundleRelationshipsBuildBundleFileSizes';

/**
 * The BuildBundleRelationships model module.
 * @module model/BuildBundleRelationships
 * @version 4.1
 */
class BuildBundleRelationships {
    /**
     * Constructs a new <code>BuildBundleRelationships</code>.
     * @alias module:model/BuildBundleRelationships
     */
    constructor() { 
        
        BuildBundleRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildBundleRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildBundleRelationships} obj Optional instance to populate.
     * @return {module:model/BuildBundleRelationships} The populated <code>BuildBundleRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildBundleRelationships();

            if (data.hasOwnProperty('appClipDomainCacheStatus')) {
                obj['appClipDomainCacheStatus'] = BuildBundleRelationshipsAppClipDomainCacheStatus.constructFromObject(data['appClipDomainCacheStatus']);
            }
            if (data.hasOwnProperty('appClipDomainDebugStatus')) {
                obj['appClipDomainDebugStatus'] = BuildBundleRelationshipsAppClipDomainCacheStatus.constructFromObject(data['appClipDomainDebugStatus']);
            }
            if (data.hasOwnProperty('betaAppClipInvocations')) {
                obj['betaAppClipInvocations'] = BuildBundleRelationshipsBetaAppClipInvocations.constructFromObject(data['betaAppClipInvocations']);
            }
            if (data.hasOwnProperty('buildBundleFileSizes')) {
                obj['buildBundleFileSizes'] = BuildBundleRelationshipsBuildBundleFileSizes.constructFromObject(data['buildBundleFileSizes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildBundleRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildBundleRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appClipDomainCacheStatus`
        if (data['appClipDomainCacheStatus']) { // data not null
          BuildBundleRelationshipsAppClipDomainCacheStatus.validateJSON(data['appClipDomainCacheStatus']);
        }
        // validate the optional field `appClipDomainDebugStatus`
        if (data['appClipDomainDebugStatus']) { // data not null
          BuildBundleRelationshipsAppClipDomainCacheStatus.validateJSON(data['appClipDomainDebugStatus']);
        }
        // validate the optional field `betaAppClipInvocations`
        if (data['betaAppClipInvocations']) { // data not null
          BuildBundleRelationshipsBetaAppClipInvocations.validateJSON(data['betaAppClipInvocations']);
        }
        // validate the optional field `buildBundleFileSizes`
        if (data['buildBundleFileSizes']) { // data not null
          BuildBundleRelationshipsBuildBundleFileSizes.validateJSON(data['buildBundleFileSizes']);
        }

        return true;
    }


}



/**
 * @member {module:model/BuildBundleRelationshipsAppClipDomainCacheStatus} appClipDomainCacheStatus
 */
BuildBundleRelationships.prototype['appClipDomainCacheStatus'] = undefined;

/**
 * @member {module:model/BuildBundleRelationshipsAppClipDomainCacheStatus} appClipDomainDebugStatus
 */
BuildBundleRelationships.prototype['appClipDomainDebugStatus'] = undefined;

/**
 * @member {module:model/BuildBundleRelationshipsBetaAppClipInvocations} betaAppClipInvocations
 */
BuildBundleRelationships.prototype['betaAppClipInvocations'] = undefined;

/**
 * @member {module:model/BuildBundleRelationshipsBuildBundleFileSizes} buildBundleFileSizes
 */
BuildBundleRelationships.prototype['buildBundleFileSizes'] = undefined;






export default BuildBundleRelationships;

