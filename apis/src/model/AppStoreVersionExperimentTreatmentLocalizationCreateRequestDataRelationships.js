/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment from './AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment';

/**
 * The AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships model module.
 * @module model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships
 * @version 4.1
 */
class AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships {
    /**
     * Constructs a new <code>AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships</code>.
     * @alias module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships
     * @param appStoreVersionExperimentTreatment {module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment} 
     */
    constructor(appStoreVersionExperimentTreatment) { 
        
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships.initialize(this, appStoreVersionExperimentTreatment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appStoreVersionExperimentTreatment) { 
        obj['appStoreVersionExperimentTreatment'] = appStoreVersionExperimentTreatment;
    }

    /**
     * Constructs a <code>AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships} obj Optional instance to populate.
     * @return {module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships} The populated <code>AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships();

            if (data.hasOwnProperty('appStoreVersionExperimentTreatment')) {
                obj['appStoreVersionExperimentTreatment'] = AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment.constructFromObject(data['appStoreVersionExperimentTreatment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `appStoreVersionExperimentTreatment`
        if (data['appStoreVersionExperimentTreatment']) { // data not null
          AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment.validateJSON(data['appStoreVersionExperimentTreatment']);
        }

        return true;
    }


}

AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships.RequiredProperties = ["appStoreVersionExperimentTreatment"];

/**
 * @member {module:model/AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment} appStoreVersionExperimentTreatment
 */
AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships.prototype['appStoreVersionExperimentTreatment'] = undefined;






export default AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships;

