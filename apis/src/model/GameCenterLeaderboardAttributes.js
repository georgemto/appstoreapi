/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GameCenterLeaderboardFormatter from './GameCenterLeaderboardFormatter';

/**
 * The GameCenterLeaderboardAttributes model module.
 * @module model/GameCenterLeaderboardAttributes
 * @version 4.1
 */
class GameCenterLeaderboardAttributes {
    /**
     * Constructs a new <code>GameCenterLeaderboardAttributes</code>.
     * @alias module:model/GameCenterLeaderboardAttributes
     */
    constructor() { 
        
        GameCenterLeaderboardAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GameCenterLeaderboardAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameCenterLeaderboardAttributes} obj Optional instance to populate.
     * @return {module:model/GameCenterLeaderboardAttributes} The populated <code>GameCenterLeaderboardAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameCenterLeaderboardAttributes();

            if (data.hasOwnProperty('defaultFormatter')) {
                obj['defaultFormatter'] = GameCenterLeaderboardFormatter.constructFromObject(data['defaultFormatter']);
            }
            if (data.hasOwnProperty('referenceName')) {
                obj['referenceName'] = ApiClient.convertToType(data['referenceName'], 'String');
            }
            if (data.hasOwnProperty('vendorIdentifier')) {
                obj['vendorIdentifier'] = ApiClient.convertToType(data['vendorIdentifier'], 'String');
            }
            if (data.hasOwnProperty('submissionType')) {
                obj['submissionType'] = ApiClient.convertToType(data['submissionType'], 'String');
            }
            if (data.hasOwnProperty('scoreSortType')) {
                obj['scoreSortType'] = ApiClient.convertToType(data['scoreSortType'], 'String');
            }
            if (data.hasOwnProperty('scoreRangeStart')) {
                obj['scoreRangeStart'] = ApiClient.convertToType(data['scoreRangeStart'], 'Number');
            }
            if (data.hasOwnProperty('scoreRangeEnd')) {
                obj['scoreRangeEnd'] = ApiClient.convertToType(data['scoreRangeEnd'], 'Number');
            }
            if (data.hasOwnProperty('recurrenceStartDate')) {
                obj['recurrenceStartDate'] = ApiClient.convertToType(data['recurrenceStartDate'], 'Date');
            }
            if (data.hasOwnProperty('recurrenceDuration')) {
                obj['recurrenceDuration'] = ApiClient.convertToType(data['recurrenceDuration'], 'String');
            }
            if (data.hasOwnProperty('recurrenceRule')) {
                obj['recurrenceRule'] = ApiClient.convertToType(data['recurrenceRule'], 'String');
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('activityProperties')) {
                obj['activityProperties'] = ApiClient.convertToType(data['activityProperties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GameCenterLeaderboardAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GameCenterLeaderboardAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['referenceName'] && !(typeof data['referenceName'] === 'string' || data['referenceName'] instanceof String)) {
            throw new Error("Expected the field `referenceName` to be a primitive type in the JSON string but got " + data['referenceName']);
        }
        // ensure the json data is a string
        if (data['vendorIdentifier'] && !(typeof data['vendorIdentifier'] === 'string' || data['vendorIdentifier'] instanceof String)) {
            throw new Error("Expected the field `vendorIdentifier` to be a primitive type in the JSON string but got " + data['vendorIdentifier']);
        }
        // ensure the json data is a string
        if (data['submissionType'] && !(typeof data['submissionType'] === 'string' || data['submissionType'] instanceof String)) {
            throw new Error("Expected the field `submissionType` to be a primitive type in the JSON string but got " + data['submissionType']);
        }
        // ensure the json data is a string
        if (data['scoreSortType'] && !(typeof data['scoreSortType'] === 'string' || data['scoreSortType'] instanceof String)) {
            throw new Error("Expected the field `scoreSortType` to be a primitive type in the JSON string but got " + data['scoreSortType']);
        }
        // ensure the json data is a string
        if (data['recurrenceDuration'] && !(typeof data['recurrenceDuration'] === 'string' || data['recurrenceDuration'] instanceof String)) {
            throw new Error("Expected the field `recurrenceDuration` to be a primitive type in the JSON string but got " + data['recurrenceDuration']);
        }
        // ensure the json data is a string
        if (data['recurrenceRule'] && !(typeof data['recurrenceRule'] === 'string' || data['recurrenceRule'] instanceof String)) {
            throw new Error("Expected the field `recurrenceRule` to be a primitive type in the JSON string but got " + data['recurrenceRule']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }

        return true;
    }


}



/**
 * @member {module:model/GameCenterLeaderboardFormatter} defaultFormatter
 */
GameCenterLeaderboardAttributes.prototype['defaultFormatter'] = undefined;

/**
 * @member {String} referenceName
 */
GameCenterLeaderboardAttributes.prototype['referenceName'] = undefined;

/**
 * @member {String} vendorIdentifier
 */
GameCenterLeaderboardAttributes.prototype['vendorIdentifier'] = undefined;

/**
 * @member {module:model/GameCenterLeaderboardAttributes.SubmissionTypeEnum} submissionType
 */
GameCenterLeaderboardAttributes.prototype['submissionType'] = undefined;

/**
 * @member {module:model/GameCenterLeaderboardAttributes.ScoreSortTypeEnum} scoreSortType
 */
GameCenterLeaderboardAttributes.prototype['scoreSortType'] = undefined;

/**
 * @member {Number} scoreRangeStart
 */
GameCenterLeaderboardAttributes.prototype['scoreRangeStart'] = undefined;

/**
 * @member {Number} scoreRangeEnd
 */
GameCenterLeaderboardAttributes.prototype['scoreRangeEnd'] = undefined;

/**
 * @member {Date} recurrenceStartDate
 */
GameCenterLeaderboardAttributes.prototype['recurrenceStartDate'] = undefined;

/**
 * @member {String} recurrenceDuration
 */
GameCenterLeaderboardAttributes.prototype['recurrenceDuration'] = undefined;

/**
 * @member {String} recurrenceRule
 */
GameCenterLeaderboardAttributes.prototype['recurrenceRule'] = undefined;

/**
 * @member {Boolean} archived
 */
GameCenterLeaderboardAttributes.prototype['archived'] = undefined;

/**
 * @member {Object.<String, String>} activityProperties
 */
GameCenterLeaderboardAttributes.prototype['activityProperties'] = undefined;

/**
 * @member {module:model/GameCenterLeaderboardAttributes.VisibilityEnum} visibility
 */
GameCenterLeaderboardAttributes.prototype['visibility'] = undefined;





/**
 * Allowed values for the <code>submissionType</code> property.
 * @enum {String}
 * @readonly
 */
GameCenterLeaderboardAttributes['SubmissionTypeEnum'] = {

    /**
     * value: "BEST_SCORE"
     * @const
     */
    "BEST_SCORE": "BEST_SCORE",

    /**
     * value: "MOST_RECENT_SCORE"
     * @const
     */
    "MOST_RECENT_SCORE": "MOST_RECENT_SCORE"
};


/**
 * Allowed values for the <code>scoreSortType</code> property.
 * @enum {String}
 * @readonly
 */
GameCenterLeaderboardAttributes['ScoreSortTypeEnum'] = {

    /**
     * value: "ASC"
     * @const
     */
    "ASC": "ASC",

    /**
     * value: "DESC"
     * @const
     */
    "DESC": "DESC"
};


/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
GameCenterLeaderboardAttributes['VisibilityEnum'] = {

    /**
     * value: "SHOW_FOR_ALL"
     * @const
     */
    "SHOW_FOR_ALL": "SHOW_FOR_ALL",

    /**
     * value: "HIDE_FOR_ALL"
     * @const
     */
    "HIDE_FOR_ALL": "HIDE_FOR_ALL"
};



export default GameCenterLeaderboardAttributes;

