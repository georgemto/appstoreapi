/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildAudienceType from './BuildAudienceType';
import CiActionTestConfiguration from './CiActionTestConfiguration';
import CiActionType from './CiActionType';

/**
 * The CiAction model module.
 * @module model/CiAction
 * @version 4.1
 */
class CiAction {
    /**
     * Constructs a new <code>CiAction</code>.
     * @alias module:model/CiAction
     */
    constructor() { 
        
        CiAction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiAction} obj Optional instance to populate.
     * @return {module:model/CiAction} The populated <code>CiAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiAction();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('actionType')) {
                obj['actionType'] = CiActionType.constructFromObject(data['actionType']);
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('buildDistributionAudience')) {
                obj['buildDistributionAudience'] = BuildAudienceType.constructFromObject(data['buildDistributionAudience']);
            }
            if (data.hasOwnProperty('testConfiguration')) {
                obj['testConfiguration'] = CiActionTestConfiguration.constructFromObject(data['testConfiguration']);
            }
            if (data.hasOwnProperty('scheme')) {
                obj['scheme'] = ApiClient.convertToType(data['scheme'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('isRequiredToPass')) {
                obj['isRequiredToPass'] = ApiClient.convertToType(data['isRequiredToPass'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiAction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // validate the optional field `testConfiguration`
        if (data['testConfiguration']) { // data not null
          CiActionTestConfiguration.validateJSON(data['testConfiguration']);
        }
        // ensure the json data is a string
        if (data['scheme'] && !(typeof data['scheme'] === 'string' || data['scheme'] instanceof String)) {
            throw new Error("Expected the field `scheme` to be a primitive type in the JSON string but got " + data['scheme']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
CiAction.prototype['name'] = undefined;

/**
 * @member {module:model/CiActionType} actionType
 */
CiAction.prototype['actionType'] = undefined;

/**
 * @member {module:model/CiAction.DestinationEnum} destination
 */
CiAction.prototype['destination'] = undefined;

/**
 * @member {module:model/BuildAudienceType} buildDistributionAudience
 */
CiAction.prototype['buildDistributionAudience'] = undefined;

/**
 * @member {module:model/CiActionTestConfiguration} testConfiguration
 */
CiAction.prototype['testConfiguration'] = undefined;

/**
 * @member {String} scheme
 */
CiAction.prototype['scheme'] = undefined;

/**
 * @member {module:model/CiAction.PlatformEnum} platform
 */
CiAction.prototype['platform'] = undefined;

/**
 * @member {Boolean} isRequiredToPass
 */
CiAction.prototype['isRequiredToPass'] = undefined;





/**
 * Allowed values for the <code>destination</code> property.
 * @enum {String}
 * @readonly
 */
CiAction['DestinationEnum'] = {

    /**
     * value: "ANY_IOS_DEVICE"
     * @const
     */
    "ANY_IOS_DEVICE": "ANY_IOS_DEVICE",

    /**
     * value: "ANY_IOS_SIMULATOR"
     * @const
     */
    "ANY_IOS_SIMULATOR": "ANY_IOS_SIMULATOR",

    /**
     * value: "ANY_TVOS_DEVICE"
     * @const
     */
    "ANY_TVOS_DEVICE": "ANY_TVOS_DEVICE",

    /**
     * value: "ANY_TVOS_SIMULATOR"
     * @const
     */
    "ANY_TVOS_SIMULATOR": "ANY_TVOS_SIMULATOR",

    /**
     * value: "ANY_WATCHOS_DEVICE"
     * @const
     */
    "ANY_WATCHOS_DEVICE": "ANY_WATCHOS_DEVICE",

    /**
     * value: "ANY_WATCHOS_SIMULATOR"
     * @const
     */
    "ANY_WATCHOS_SIMULATOR": "ANY_WATCHOS_SIMULATOR",

    /**
     * value: "ANY_MAC"
     * @const
     */
    "ANY_MAC": "ANY_MAC",

    /**
     * value: "ANY_MAC_CATALYST"
     * @const
     */
    "ANY_MAC_CATALYST": "ANY_MAC_CATALYST",

    /**
     * value: "ANY_VISIONOS_DEVICE"
     * @const
     */
    "ANY_VISIONOS_DEVICE": "ANY_VISIONOS_DEVICE",

    /**
     * value: "ANY_VISIONOS_SIMULATOR"
     * @const
     */
    "ANY_VISIONOS_SIMULATOR": "ANY_VISIONOS_SIMULATOR"
};


/**
 * Allowed values for the <code>platform</code> property.
 * @enum {String}
 * @readonly
 */
CiAction['PlatformEnum'] = {

    /**
     * value: "MACOS"
     * @const
     */
    "MACOS": "MACOS",

    /**
     * value: "IOS"
     * @const
     */
    "IOS": "IOS",

    /**
     * value: "TVOS"
     * @const
     */
    "TVOS": "TVOS",

    /**
     * value: "WATCHOS"
     * @const
     */
    "WATCHOS": "WATCHOS",

    /**
     * value: "VISIONOS"
     * @const
     */
    "VISIONOS": "VISIONOS"
};



export default CiAction;

