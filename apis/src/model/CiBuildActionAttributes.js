/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CiActionType from './CiActionType';
import CiCompletionStatus from './CiCompletionStatus';
import CiExecutionProgress from './CiExecutionProgress';
import CiIssueCounts from './CiIssueCounts';

/**
 * The CiBuildActionAttributes model module.
 * @module model/CiBuildActionAttributes
 * @version 4.1
 */
class CiBuildActionAttributes {
    /**
     * Constructs a new <code>CiBuildActionAttributes</code>.
     * @alias module:model/CiBuildActionAttributes
     */
    constructor() { 
        
        CiBuildActionAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiBuildActionAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiBuildActionAttributes} obj Optional instance to populate.
     * @return {module:model/CiBuildActionAttributes} The populated <code>CiBuildActionAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiBuildActionAttributes();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('actionType')) {
                obj['actionType'] = CiActionType.constructFromObject(data['actionType']);
            }
            if (data.hasOwnProperty('startedDate')) {
                obj['startedDate'] = ApiClient.convertToType(data['startedDate'], 'Date');
            }
            if (data.hasOwnProperty('finishedDate')) {
                obj['finishedDate'] = ApiClient.convertToType(data['finishedDate'], 'Date');
            }
            if (data.hasOwnProperty('issueCounts')) {
                obj['issueCounts'] = CiIssueCounts.constructFromObject(data['issueCounts']);
            }
            if (data.hasOwnProperty('executionProgress')) {
                obj['executionProgress'] = CiExecutionProgress.constructFromObject(data['executionProgress']);
            }
            if (data.hasOwnProperty('completionStatus')) {
                obj['completionStatus'] = CiCompletionStatus.constructFromObject(data['completionStatus']);
            }
            if (data.hasOwnProperty('isRequiredToPass')) {
                obj['isRequiredToPass'] = ApiClient.convertToType(data['isRequiredToPass'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiBuildActionAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiBuildActionAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `issueCounts`
        if (data['issueCounts']) { // data not null
          CiIssueCounts.validateJSON(data['issueCounts']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
CiBuildActionAttributes.prototype['name'] = undefined;

/**
 * @member {module:model/CiActionType} actionType
 */
CiBuildActionAttributes.prototype['actionType'] = undefined;

/**
 * @member {Date} startedDate
 */
CiBuildActionAttributes.prototype['startedDate'] = undefined;

/**
 * @member {Date} finishedDate
 */
CiBuildActionAttributes.prototype['finishedDate'] = undefined;

/**
 * @member {module:model/CiIssueCounts} issueCounts
 */
CiBuildActionAttributes.prototype['issueCounts'] = undefined;

/**
 * @member {module:model/CiExecutionProgress} executionProgress
 */
CiBuildActionAttributes.prototype['executionProgress'] = undefined;

/**
 * @member {module:model/CiCompletionStatus} completionStatus
 */
CiBuildActionAttributes.prototype['completionStatus'] = undefined;

/**
 * @member {Boolean} isRequiredToPass
 */
CiBuildActionAttributes.prototype['isRequiredToPass'] = undefined;






export default CiBuildActionAttributes;

