/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PromotedPurchase from './PromotedPurchase';
import ResourceLinks from './ResourceLinks';
import SubscriptionAppStoreReviewScreenshot from './SubscriptionAppStoreReviewScreenshot';
import SubscriptionAvailability from './SubscriptionAvailability';
import SubscriptionGroup from './SubscriptionGroup';
import SubscriptionImage from './SubscriptionImage';
import SubscriptionIntroductoryOffer from './SubscriptionIntroductoryOffer';
import SubscriptionLocalization from './SubscriptionLocalization';
import SubscriptionOfferCode from './SubscriptionOfferCode';
import SubscriptionPrice from './SubscriptionPrice';
import SubscriptionPromotionalOffer from './SubscriptionPromotionalOffer';
import WinBackOffer from './WinBackOffer';
import WinBackOfferAttributes from './WinBackOfferAttributes';
import WinBackOfferRelationships from './WinBackOfferRelationships';

/**
 * The SubscriptionsResponseIncludedInner model module.
 * @module model/SubscriptionsResponseIncludedInner
 * @version 4.1
 */
class SubscriptionsResponseIncludedInner {
    /**
     * Constructs a new <code>SubscriptionsResponseIncludedInner</code>.
     * @alias module:model/SubscriptionsResponseIncludedInner
     * @param {(module:model/PromotedPurchase|module:model/SubscriptionAppStoreReviewScreenshot|module:model/SubscriptionAvailability|module:model/SubscriptionGroup|module:model/SubscriptionImage|module:model/SubscriptionIntroductoryOffer|module:model/SubscriptionLocalization|module:model/SubscriptionOfferCode|module:model/SubscriptionPrice|module:model/SubscriptionPromotionalOffer|module:model/WinBackOffer)} instance The actual instance to initialize SubscriptionsResponseIncludedInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "PromotedPurchase") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PromotedPurchase.validateJSON(instance); // throw an exception if no match
                // create PromotedPurchase from JS object
                this.actualInstance = PromotedPurchase.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PromotedPurchase
            errorMessages.push("Failed to construct PromotedPurchase: " + err)
        }

        try {
            if (typeof instance === "SubscriptionAppStoreReviewScreenshot") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionAppStoreReviewScreenshot.validateJSON(instance); // throw an exception if no match
                // create SubscriptionAppStoreReviewScreenshot from JS object
                this.actualInstance = SubscriptionAppStoreReviewScreenshot.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionAppStoreReviewScreenshot
            errorMessages.push("Failed to construct SubscriptionAppStoreReviewScreenshot: " + err)
        }

        try {
            if (typeof instance === "SubscriptionAvailability") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionAvailability.validateJSON(instance); // throw an exception if no match
                // create SubscriptionAvailability from JS object
                this.actualInstance = SubscriptionAvailability.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionAvailability
            errorMessages.push("Failed to construct SubscriptionAvailability: " + err)
        }

        try {
            if (typeof instance === "SubscriptionGroup") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionGroup.validateJSON(instance); // throw an exception if no match
                // create SubscriptionGroup from JS object
                this.actualInstance = SubscriptionGroup.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionGroup
            errorMessages.push("Failed to construct SubscriptionGroup: " + err)
        }

        try {
            if (typeof instance === "SubscriptionImage") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionImage.validateJSON(instance); // throw an exception if no match
                // create SubscriptionImage from JS object
                this.actualInstance = SubscriptionImage.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionImage
            errorMessages.push("Failed to construct SubscriptionImage: " + err)
        }

        try {
            if (typeof instance === "SubscriptionIntroductoryOffer") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionIntroductoryOffer.validateJSON(instance); // throw an exception if no match
                // create SubscriptionIntroductoryOffer from JS object
                this.actualInstance = SubscriptionIntroductoryOffer.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionIntroductoryOffer
            errorMessages.push("Failed to construct SubscriptionIntroductoryOffer: " + err)
        }

        try {
            if (typeof instance === "SubscriptionLocalization") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionLocalization.validateJSON(instance); // throw an exception if no match
                // create SubscriptionLocalization from JS object
                this.actualInstance = SubscriptionLocalization.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionLocalization
            errorMessages.push("Failed to construct SubscriptionLocalization: " + err)
        }

        try {
            if (typeof instance === "SubscriptionOfferCode") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionOfferCode.validateJSON(instance); // throw an exception if no match
                // create SubscriptionOfferCode from JS object
                this.actualInstance = SubscriptionOfferCode.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionOfferCode
            errorMessages.push("Failed to construct SubscriptionOfferCode: " + err)
        }

        try {
            if (typeof instance === "SubscriptionPrice") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionPrice.validateJSON(instance); // throw an exception if no match
                // create SubscriptionPrice from JS object
                this.actualInstance = SubscriptionPrice.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionPrice
            errorMessages.push("Failed to construct SubscriptionPrice: " + err)
        }

        try {
            if (typeof instance === "SubscriptionPromotionalOffer") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SubscriptionPromotionalOffer.validateJSON(instance); // throw an exception if no match
                // create SubscriptionPromotionalOffer from JS object
                this.actualInstance = SubscriptionPromotionalOffer.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SubscriptionPromotionalOffer
            errorMessages.push("Failed to construct SubscriptionPromotionalOffer: " + err)
        }

        try {
            if (typeof instance === "WinBackOffer") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                WinBackOffer.validateJSON(instance); // throw an exception if no match
                // create WinBackOffer from JS object
                this.actualInstance = WinBackOffer.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into WinBackOffer
            errorMessages.push("Failed to construct WinBackOffer: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `SubscriptionsResponseIncludedInner` with oneOf schemas PromotedPurchase, SubscriptionAppStoreReviewScreenshot, SubscriptionAvailability, SubscriptionGroup, SubscriptionImage, SubscriptionIntroductoryOffer, SubscriptionLocalization, SubscriptionOfferCode, SubscriptionPrice, SubscriptionPromotionalOffer, WinBackOffer. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `SubscriptionsResponseIncludedInner` with oneOf schemas PromotedPurchase, SubscriptionAppStoreReviewScreenshot, SubscriptionAvailability, SubscriptionGroup, SubscriptionImage, SubscriptionIntroductoryOffer, SubscriptionLocalization, SubscriptionOfferCode, SubscriptionPrice, SubscriptionPromotionalOffer, WinBackOffer. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>SubscriptionsResponseIncludedInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionsResponseIncludedInner} obj Optional instance to populate.
     * @return {module:model/SubscriptionsResponseIncludedInner} The populated <code>SubscriptionsResponseIncludedInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new SubscriptionsResponseIncludedInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>PromotedPurchase</code>, <code>SubscriptionAppStoreReviewScreenshot</code>, <code>SubscriptionAvailability</code>, <code>SubscriptionGroup</code>, <code>SubscriptionImage</code>, <code>SubscriptionIntroductoryOffer</code>, <code>SubscriptionLocalization</code>, <code>SubscriptionOfferCode</code>, <code>SubscriptionPrice</code>, <code>SubscriptionPromotionalOffer</code>, <code>WinBackOffer</code>.
     * @return {(module:model/PromotedPurchase|module:model/SubscriptionAppStoreReviewScreenshot|module:model/SubscriptionAvailability|module:model/SubscriptionGroup|module:model/SubscriptionImage|module:model/SubscriptionIntroductoryOffer|module:model/SubscriptionLocalization|module:model/SubscriptionOfferCode|module:model/SubscriptionPrice|module:model/SubscriptionPromotionalOffer|module:model/WinBackOffer)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>PromotedPurchase</code>, <code>SubscriptionAppStoreReviewScreenshot</code>, <code>SubscriptionAvailability</code>, <code>SubscriptionGroup</code>, <code>SubscriptionImage</code>, <code>SubscriptionIntroductoryOffer</code>, <code>SubscriptionLocalization</code>, <code>SubscriptionOfferCode</code>, <code>SubscriptionPrice</code>, <code>SubscriptionPromotionalOffer</code>, <code>WinBackOffer</code>.
     * @param {(module:model/PromotedPurchase|module:model/SubscriptionAppStoreReviewScreenshot|module:model/SubscriptionAvailability|module:model/SubscriptionGroup|module:model/SubscriptionImage|module:model/SubscriptionIntroductoryOffer|module:model/SubscriptionLocalization|module:model/SubscriptionOfferCode|module:model/SubscriptionPrice|module:model/SubscriptionPromotionalOffer|module:model/WinBackOffer)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = SubscriptionsResponseIncludedInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of SubscriptionsResponseIncludedInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/SubscriptionsResponseIncludedInner} An instance of SubscriptionsResponseIncludedInner.
     */
    static fromJSON = function(json_string){
        return SubscriptionsResponseIncludedInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/SubscriptionsResponseIncludedInner.TypeEnum} type
 */
SubscriptionsResponseIncludedInner.prototype['type'] = undefined;

/**
 * @member {String} id
 */
SubscriptionsResponseIncludedInner.prototype['id'] = undefined;

/**
 * @member {module:model/WinBackOfferAttributes} attributes
 */
SubscriptionsResponseIncludedInner.prototype['attributes'] = undefined;

/**
 * @member {module:model/WinBackOfferRelationships} relationships
 */
SubscriptionsResponseIncludedInner.prototype['relationships'] = undefined;

/**
 * @member {module:model/ResourceLinks} links
 */
SubscriptionsResponseIncludedInner.prototype['links'] = undefined;


SubscriptionsResponseIncludedInner.OneOf = ["PromotedPurchase", "SubscriptionAppStoreReviewScreenshot", "SubscriptionAvailability", "SubscriptionGroup", "SubscriptionImage", "SubscriptionIntroductoryOffer", "SubscriptionLocalization", "SubscriptionOfferCode", "SubscriptionPrice", "SubscriptionPromotionalOffer", "WinBackOffer"];

export default SubscriptionsResponseIncludedInner;

