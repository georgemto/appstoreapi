/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionCreateRequestDataAttributes model module.
 * @module model/SubscriptionCreateRequestDataAttributes
 * @version 4.1
 */
class SubscriptionCreateRequestDataAttributes {
    /**
     * Constructs a new <code>SubscriptionCreateRequestDataAttributes</code>.
     * @alias module:model/SubscriptionCreateRequestDataAttributes
     * @param name {String} 
     * @param productId {String} 
     */
    constructor(name, productId) { 
        
        SubscriptionCreateRequestDataAttributes.initialize(this, name, productId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, productId) { 
        obj['name'] = name;
        obj['productId'] = productId;
    }

    /**
     * Constructs a <code>SubscriptionCreateRequestDataAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionCreateRequestDataAttributes} obj Optional instance to populate.
     * @return {module:model/SubscriptionCreateRequestDataAttributes} The populated <code>SubscriptionCreateRequestDataAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionCreateRequestDataAttributes();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('familySharable')) {
                obj['familySharable'] = ApiClient.convertToType(data['familySharable'], 'Boolean');
            }
            if (data.hasOwnProperty('subscriptionPeriod')) {
                obj['subscriptionPeriod'] = ApiClient.convertToType(data['subscriptionPeriod'], 'String');
            }
            if (data.hasOwnProperty('reviewNote')) {
                obj['reviewNote'] = ApiClient.convertToType(data['reviewNote'], 'String');
            }
            if (data.hasOwnProperty('groupLevel')) {
                obj['groupLevel'] = ApiClient.convertToType(data['groupLevel'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionCreateRequestDataAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionCreateRequestDataAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionCreateRequestDataAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['subscriptionPeriod'] && !(typeof data['subscriptionPeriod'] === 'string' || data['subscriptionPeriod'] instanceof String)) {
            throw new Error("Expected the field `subscriptionPeriod` to be a primitive type in the JSON string but got " + data['subscriptionPeriod']);
        }
        // ensure the json data is a string
        if (data['reviewNote'] && !(typeof data['reviewNote'] === 'string' || data['reviewNote'] instanceof String)) {
            throw new Error("Expected the field `reviewNote` to be a primitive type in the JSON string but got " + data['reviewNote']);
        }

        return true;
    }


}

SubscriptionCreateRequestDataAttributes.RequiredProperties = ["name", "productId"];

/**
 * @member {String} name
 */
SubscriptionCreateRequestDataAttributes.prototype['name'] = undefined;

/**
 * @member {String} productId
 */
SubscriptionCreateRequestDataAttributes.prototype['productId'] = undefined;

/**
 * @member {Boolean} familySharable
 */
SubscriptionCreateRequestDataAttributes.prototype['familySharable'] = undefined;

/**
 * @member {module:model/SubscriptionCreateRequestDataAttributes.SubscriptionPeriodEnum} subscriptionPeriod
 */
SubscriptionCreateRequestDataAttributes.prototype['subscriptionPeriod'] = undefined;

/**
 * @member {String} reviewNote
 */
SubscriptionCreateRequestDataAttributes.prototype['reviewNote'] = undefined;

/**
 * @member {Number} groupLevel
 */
SubscriptionCreateRequestDataAttributes.prototype['groupLevel'] = undefined;





/**
 * Allowed values for the <code>subscriptionPeriod</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionCreateRequestDataAttributes['SubscriptionPeriodEnum'] = {

    /**
     * value: "ONE_WEEK"
     * @const
     */
    "ONE_WEEK": "ONE_WEEK",

    /**
     * value: "ONE_MONTH"
     * @const
     */
    "ONE_MONTH": "ONE_MONTH",

    /**
     * value: "TWO_MONTHS"
     * @const
     */
    "TWO_MONTHS": "TWO_MONTHS",

    /**
     * value: "THREE_MONTHS"
     * @const
     */
    "THREE_MONTHS": "THREE_MONTHS",

    /**
     * value: "SIX_MONTHS"
     * @const
     */
    "SIX_MONTHS": "SIX_MONTHS",

    /**
     * value: "ONE_YEAR"
     * @const
     */
    "ONE_YEAR": "ONE_YEAR"
};



export default SubscriptionCreateRequestDataAttributes;

