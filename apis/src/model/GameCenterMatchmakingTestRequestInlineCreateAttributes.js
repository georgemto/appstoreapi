/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import Platform from './Platform';

/**
 * The GameCenterMatchmakingTestRequestInlineCreateAttributes model module.
 * @module model/GameCenterMatchmakingTestRequestInlineCreateAttributes
 * @version 4.1
 */
class GameCenterMatchmakingTestRequestInlineCreateAttributes {
    /**
     * Constructs a new <code>GameCenterMatchmakingTestRequestInlineCreateAttributes</code>.
     * @alias module:model/GameCenterMatchmakingTestRequestInlineCreateAttributes
     * @param requestName {String} 
     * @param secondsInQueue {Number} 
     * @param bundleId {String} 
     * @param platform {module:model/Platform} 
     * @param appVersion {String} 
     */
    constructor(requestName, secondsInQueue, bundleId, platform, appVersion) { 
        
        GameCenterMatchmakingTestRequestInlineCreateAttributes.initialize(this, requestName, secondsInQueue, bundleId, platform, appVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestName, secondsInQueue, bundleId, platform, appVersion) { 
        obj['requestName'] = requestName;
        obj['secondsInQueue'] = secondsInQueue;
        obj['bundleId'] = bundleId;
        obj['platform'] = platform;
        obj['appVersion'] = appVersion;
    }

    /**
     * Constructs a <code>GameCenterMatchmakingTestRequestInlineCreateAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameCenterMatchmakingTestRequestInlineCreateAttributes} obj Optional instance to populate.
     * @return {module:model/GameCenterMatchmakingTestRequestInlineCreateAttributes} The populated <code>GameCenterMatchmakingTestRequestInlineCreateAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameCenterMatchmakingTestRequestInlineCreateAttributes();

            if (data.hasOwnProperty('requestName')) {
                obj['requestName'] = ApiClient.convertToType(data['requestName'], 'String');
            }
            if (data.hasOwnProperty('secondsInQueue')) {
                obj['secondsInQueue'] = ApiClient.convertToType(data['secondsInQueue'], 'Number');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = Location.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('minPlayers')) {
                obj['minPlayers'] = ApiClient.convertToType(data['minPlayers'], 'Number');
            }
            if (data.hasOwnProperty('maxPlayers')) {
                obj['maxPlayers'] = ApiClient.convertToType(data['maxPlayers'], 'Number');
            }
            if (data.hasOwnProperty('playerCount')) {
                obj['playerCount'] = ApiClient.convertToType(data['playerCount'], 'Number');
            }
            if (data.hasOwnProperty('bundleId')) {
                obj['bundleId'] = ApiClient.convertToType(data['bundleId'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = Platform.constructFromObject(data['platform']);
            }
            if (data.hasOwnProperty('appVersion')) {
                obj['appVersion'] = ApiClient.convertToType(data['appVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GameCenterMatchmakingTestRequestInlineCreateAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GameCenterMatchmakingTestRequestInlineCreateAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GameCenterMatchmakingTestRequestInlineCreateAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['requestName'] && !(typeof data['requestName'] === 'string' || data['requestName'] instanceof String)) {
            throw new Error("Expected the field `requestName` to be a primitive type in the JSON string but got " + data['requestName']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          Location.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['bundleId'] && !(typeof data['bundleId'] === 'string' || data['bundleId'] instanceof String)) {
            throw new Error("Expected the field `bundleId` to be a primitive type in the JSON string but got " + data['bundleId']);
        }
        // ensure the json data is a string
        if (data['appVersion'] && !(typeof data['appVersion'] === 'string' || data['appVersion'] instanceof String)) {
            throw new Error("Expected the field `appVersion` to be a primitive type in the JSON string but got " + data['appVersion']);
        }

        return true;
    }


}

GameCenterMatchmakingTestRequestInlineCreateAttributes.RequiredProperties = ["requestName", "secondsInQueue", "bundleId", "platform", "appVersion"];

/**
 * @member {String} requestName
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['requestName'] = undefined;

/**
 * @member {Number} secondsInQueue
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['secondsInQueue'] = undefined;

/**
 * @member {module:model/GameCenterMatchmakingTestRequestInlineCreateAttributes.LocaleEnum} locale
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['locale'] = undefined;

/**
 * @member {module:model/Location} location
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['location'] = undefined;

/**
 * @member {Number} minPlayers
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['minPlayers'] = undefined;

/**
 * @member {Number} maxPlayers
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['maxPlayers'] = undefined;

/**
 * @member {Number} playerCount
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['playerCount'] = undefined;

/**
 * @member {String} bundleId
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['bundleId'] = undefined;

/**
 * @member {module:model/Platform} platform
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['platform'] = undefined;

/**
 * @member {String} appVersion
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes.prototype['appVersion'] = undefined;





/**
 * Allowed values for the <code>locale</code> property.
 * @enum {String}
 * @readonly
 */
GameCenterMatchmakingTestRequestInlineCreateAttributes['LocaleEnum'] = {

    /**
     * value: "AR-SA"
     * @const
     */
    "AR-SA": "AR-SA",

    /**
     * value: "CA-ES"
     * @const
     */
    "CA-ES": "CA-ES",

    /**
     * value: "CS-CZ"
     * @const
     */
    "CS-CZ": "CS-CZ",

    /**
     * value: "DA-DK"
     * @const
     */
    "DA-DK": "DA-DK",

    /**
     * value: "DE-DE"
     * @const
     */
    "DE-DE": "DE-DE",

    /**
     * value: "EL-GR"
     * @const
     */
    "EL-GR": "EL-GR",

    /**
     * value: "EN-AU"
     * @const
     */
    "EN-AU": "EN-AU",

    /**
     * value: "EN-GB"
     * @const
     */
    "EN-GB": "EN-GB",

    /**
     * value: "EN-US"
     * @const
     */
    "EN-US": "EN-US",

    /**
     * value: "EN-KY"
     * @const
     */
    "EN-KY": "EN-KY",

    /**
     * value: "ES-ES"
     * @const
     */
    "ES-ES": "ES-ES",

    /**
     * value: "ES-MX"
     * @const
     */
    "ES-MX": "ES-MX",

    /**
     * value: "FI-FI"
     * @const
     */
    "FI-FI": "FI-FI",

    /**
     * value: "FR-CA"
     * @const
     */
    "FR-CA": "FR-CA",

    /**
     * value: "FR-FR"
     * @const
     */
    "FR-FR": "FR-FR",

    /**
     * value: "HI-IN"
     * @const
     */
    "HI-IN": "HI-IN",

    /**
     * value: "HR-HR"
     * @const
     */
    "HR-HR": "HR-HR",

    /**
     * value: "HU-HU"
     * @const
     */
    "HU-HU": "HU-HU",

    /**
     * value: "ID-ID"
     * @const
     */
    "ID-ID": "ID-ID",

    /**
     * value: "IT-IT"
     * @const
     */
    "IT-IT": "IT-IT",

    /**
     * value: "IW-IL"
     * @const
     */
    "IW-IL": "IW-IL",

    /**
     * value: "JA-JP"
     * @const
     */
    "JA-JP": "JA-JP",

    /**
     * value: "KO-KR"
     * @const
     */
    "KO-KR": "KO-KR",

    /**
     * value: "MS-MY"
     * @const
     */
    "MS-MY": "MS-MY",

    /**
     * value: "NL-NL"
     * @const
     */
    "NL-NL": "NL-NL",

    /**
     * value: "NO-NO"
     * @const
     */
    "NO-NO": "NO-NO",

    /**
     * value: "PL-PL"
     * @const
     */
    "PL-PL": "PL-PL",

    /**
     * value: "PT-BR"
     * @const
     */
    "PT-BR": "PT-BR",

    /**
     * value: "PT-PT"
     * @const
     */
    "PT-PT": "PT-PT",

    /**
     * value: "RO-RO"
     * @const
     */
    "RO-RO": "RO-RO",

    /**
     * value: "RU-RU"
     * @const
     */
    "RU-RU": "RU-RU",

    /**
     * value: "SK-SK"
     * @const
     */
    "SK-SK": "SK-SK",

    /**
     * value: "SV-SE"
     * @const
     */
    "SV-SE": "SV-SE",

    /**
     * value: "TH-TH"
     * @const
     */
    "TH-TH": "TH-TH",

    /**
     * value: "TR-TR"
     * @const
     */
    "TR-TR": "TR-TR",

    /**
     * value: "UK-UA"
     * @const
     */
    "UK-UA": "UK-UA",

    /**
     * value: "ZH-CN"
     * @const
     */
    "ZH-CN": "ZH-CN",

    /**
     * value: "ZH-TW"
     * @const
     */
    "ZH-TW": "ZH-TW",

    /**
     * value: "ZH-HK"
     * @const
     */
    "ZH-HK": "ZH-HK"
};



export default GameCenterMatchmakingTestRequestInlineCreateAttributes;

