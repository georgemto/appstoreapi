/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppStoreVersionExperimentAttributes model module.
 * @module model/AppStoreVersionExperimentAttributes
 * @version 4.1
 */
class AppStoreVersionExperimentAttributes {
    /**
     * Constructs a new <code>AppStoreVersionExperimentAttributes</code>.
     * @alias module:model/AppStoreVersionExperimentAttributes
     */
    constructor() { 
        
        AppStoreVersionExperimentAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppStoreVersionExperimentAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppStoreVersionExperimentAttributes} obj Optional instance to populate.
     * @return {module:model/AppStoreVersionExperimentAttributes} The populated <code>AppStoreVersionExperimentAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppStoreVersionExperimentAttributes();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('trafficProportion')) {
                obj['trafficProportion'] = ApiClient.convertToType(data['trafficProportion'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('reviewRequired')) {
                obj['reviewRequired'] = ApiClient.convertToType(data['reviewRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppStoreVersionExperimentAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppStoreVersionExperimentAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
AppStoreVersionExperimentAttributes.prototype['name'] = undefined;

/**
 * @member {Number} trafficProportion
 */
AppStoreVersionExperimentAttributes.prototype['trafficProportion'] = undefined;

/**
 * @member {module:model/AppStoreVersionExperimentAttributes.StateEnum} state
 */
AppStoreVersionExperimentAttributes.prototype['state'] = undefined;

/**
 * @member {Boolean} reviewRequired
 */
AppStoreVersionExperimentAttributes.prototype['reviewRequired'] = undefined;

/**
 * @member {Date} startDate
 */
AppStoreVersionExperimentAttributes.prototype['startDate'] = undefined;

/**
 * @member {Date} endDate
 */
AppStoreVersionExperimentAttributes.prototype['endDate'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AppStoreVersionExperimentAttributes['StateEnum'] = {

    /**
     * value: "PREPARE_FOR_SUBMISSION"
     * @const
     */
    "PREPARE_FOR_SUBMISSION": "PREPARE_FOR_SUBMISSION",

    /**
     * value: "READY_FOR_REVIEW"
     * @const
     */
    "READY_FOR_REVIEW": "READY_FOR_REVIEW",

    /**
     * value: "WAITING_FOR_REVIEW"
     * @const
     */
    "WAITING_FOR_REVIEW": "WAITING_FOR_REVIEW",

    /**
     * value: "IN_REVIEW"
     * @const
     */
    "IN_REVIEW": "IN_REVIEW",

    /**
     * value: "ACCEPTED"
     * @const
     */
    "ACCEPTED": "ACCEPTED",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "REJECTED"
     * @const
     */
    "REJECTED": "REJECTED",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",

    /**
     * value: "STOPPED"
     * @const
     */
    "STOPPED": "STOPPED"
};



export default AppStoreVersionExperimentAttributes;

