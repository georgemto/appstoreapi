/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildBundleType from './BuildBundleType';

/**
 * The BuildBundleAttributes model module.
 * @module model/BuildBundleAttributes
 * @version 4.1
 */
class BuildBundleAttributes {
    /**
     * Constructs a new <code>BuildBundleAttributes</code>.
     * @alias module:model/BuildBundleAttributes
     */
    constructor() { 
        
        BuildBundleAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildBundleAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildBundleAttributes} obj Optional instance to populate.
     * @return {module:model/BuildBundleAttributes} The populated <code>BuildBundleAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildBundleAttributes();

            if (data.hasOwnProperty('bundleId')) {
                obj['bundleId'] = ApiClient.convertToType(data['bundleId'], 'String');
            }
            if (data.hasOwnProperty('bundleType')) {
                obj['bundleType'] = BuildBundleType.constructFromObject(data['bundleType']);
            }
            if (data.hasOwnProperty('sdkBuild')) {
                obj['sdkBuild'] = ApiClient.convertToType(data['sdkBuild'], 'String');
            }
            if (data.hasOwnProperty('platformBuild')) {
                obj['platformBuild'] = ApiClient.convertToType(data['platformBuild'], 'String');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('hasSirikit')) {
                obj['hasSirikit'] = ApiClient.convertToType(data['hasSirikit'], 'Boolean');
            }
            if (data.hasOwnProperty('hasOnDemandResources')) {
                obj['hasOnDemandResources'] = ApiClient.convertToType(data['hasOnDemandResources'], 'Boolean');
            }
            if (data.hasOwnProperty('hasPrerenderedIcon')) {
                obj['hasPrerenderedIcon'] = ApiClient.convertToType(data['hasPrerenderedIcon'], 'Boolean');
            }
            if (data.hasOwnProperty('usesLocationServices')) {
                obj['usesLocationServices'] = ApiClient.convertToType(data['usesLocationServices'], 'Boolean');
            }
            if (data.hasOwnProperty('isIosBuildMacAppStoreCompatible')) {
                obj['isIosBuildMacAppStoreCompatible'] = ApiClient.convertToType(data['isIosBuildMacAppStoreCompatible'], 'Boolean');
            }
            if (data.hasOwnProperty('includesSymbols')) {
                obj['includesSymbols'] = ApiClient.convertToType(data['includesSymbols'], 'Boolean');
            }
            if (data.hasOwnProperty('dSYMUrl')) {
                obj['dSYMUrl'] = ApiClient.convertToType(data['dSYMUrl'], 'String');
            }
            if (data.hasOwnProperty('supportedArchitectures')) {
                obj['supportedArchitectures'] = ApiClient.convertToType(data['supportedArchitectures'], ['String']);
            }
            if (data.hasOwnProperty('requiredCapabilities')) {
                obj['requiredCapabilities'] = ApiClient.convertToType(data['requiredCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('deviceProtocols')) {
                obj['deviceProtocols'] = ApiClient.convertToType(data['deviceProtocols'], ['String']);
            }
            if (data.hasOwnProperty('locales')) {
                obj['locales'] = ApiClient.convertToType(data['locales'], ['String']);
            }
            if (data.hasOwnProperty('entitlements')) {
                obj['entitlements'] = ApiClient.convertToType(data['entitlements'], {'String': {'String': 'String'}});
            }
            if (data.hasOwnProperty('baDownloadAllowance')) {
                obj['baDownloadAllowance'] = ApiClient.convertToType(data['baDownloadAllowance'], 'Number');
            }
            if (data.hasOwnProperty('baMaxInstallSize')) {
                obj['baMaxInstallSize'] = ApiClient.convertToType(data['baMaxInstallSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildBundleAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildBundleAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bundleId'] && !(typeof data['bundleId'] === 'string' || data['bundleId'] instanceof String)) {
            throw new Error("Expected the field `bundleId` to be a primitive type in the JSON string but got " + data['bundleId']);
        }
        // ensure the json data is a string
        if (data['sdkBuild'] && !(typeof data['sdkBuild'] === 'string' || data['sdkBuild'] instanceof String)) {
            throw new Error("Expected the field `sdkBuild` to be a primitive type in the JSON string but got " + data['sdkBuild']);
        }
        // ensure the json data is a string
        if (data['platformBuild'] && !(typeof data['platformBuild'] === 'string' || data['platformBuild'] instanceof String)) {
            throw new Error("Expected the field `platformBuild` to be a primitive type in the JSON string but got " + data['platformBuild']);
        }
        // ensure the json data is a string
        if (data['fileName'] && !(typeof data['fileName'] === 'string' || data['fileName'] instanceof String)) {
            throw new Error("Expected the field `fileName` to be a primitive type in the JSON string but got " + data['fileName']);
        }
        // ensure the json data is a string
        if (data['dSYMUrl'] && !(typeof data['dSYMUrl'] === 'string' || data['dSYMUrl'] instanceof String)) {
            throw new Error("Expected the field `dSYMUrl` to be a primitive type in the JSON string but got " + data['dSYMUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedArchitectures'])) {
            throw new Error("Expected the field `supportedArchitectures` to be an array in the JSON data but got " + data['supportedArchitectures']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['requiredCapabilities'])) {
            throw new Error("Expected the field `requiredCapabilities` to be an array in the JSON data but got " + data['requiredCapabilities']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['deviceProtocols'])) {
            throw new Error("Expected the field `deviceProtocols` to be an array in the JSON data but got " + data['deviceProtocols']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locales'])) {
            throw new Error("Expected the field `locales` to be an array in the JSON data but got " + data['locales']);
        }

        return true;
    }


}



/**
 * @member {String} bundleId
 */
BuildBundleAttributes.prototype['bundleId'] = undefined;

/**
 * @member {module:model/BuildBundleType} bundleType
 */
BuildBundleAttributes.prototype['bundleType'] = undefined;

/**
 * @member {String} sdkBuild
 */
BuildBundleAttributes.prototype['sdkBuild'] = undefined;

/**
 * @member {String} platformBuild
 */
BuildBundleAttributes.prototype['platformBuild'] = undefined;

/**
 * @member {String} fileName
 */
BuildBundleAttributes.prototype['fileName'] = undefined;

/**
 * @member {Boolean} hasSirikit
 */
BuildBundleAttributes.prototype['hasSirikit'] = undefined;

/**
 * @member {Boolean} hasOnDemandResources
 */
BuildBundleAttributes.prototype['hasOnDemandResources'] = undefined;

/**
 * @member {Boolean} hasPrerenderedIcon
 */
BuildBundleAttributes.prototype['hasPrerenderedIcon'] = undefined;

/**
 * @member {Boolean} usesLocationServices
 */
BuildBundleAttributes.prototype['usesLocationServices'] = undefined;

/**
 * @member {Boolean} isIosBuildMacAppStoreCompatible
 */
BuildBundleAttributes.prototype['isIosBuildMacAppStoreCompatible'] = undefined;

/**
 * @member {Boolean} includesSymbols
 */
BuildBundleAttributes.prototype['includesSymbols'] = undefined;

/**
 * @member {String} dSYMUrl
 */
BuildBundleAttributes.prototype['dSYMUrl'] = undefined;

/**
 * @member {Array.<String>} supportedArchitectures
 */
BuildBundleAttributes.prototype['supportedArchitectures'] = undefined;

/**
 * @member {Array.<String>} requiredCapabilities
 */
BuildBundleAttributes.prototype['requiredCapabilities'] = undefined;

/**
 * @member {Array.<String>} deviceProtocols
 */
BuildBundleAttributes.prototype['deviceProtocols'] = undefined;

/**
 * @member {Array.<String>} locales
 */
BuildBundleAttributes.prototype['locales'] = undefined;

/**
 * @member {Object.<String, Object.<String, String>>} entitlements
 */
BuildBundleAttributes.prototype['entitlements'] = undefined;

/**
 * @member {Number} baDownloadAllowance
 */
BuildBundleAttributes.prototype['baDownloadAllowance'] = undefined;

/**
 * @member {Number} baMaxInstallSize
 */
BuildBundleAttributes.prototype['baMaxInstallSize'] = undefined;






export default BuildBundleAttributes;

