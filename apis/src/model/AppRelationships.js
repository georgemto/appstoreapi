/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsReportInstanceRelationshipsSegments from './AnalyticsReportInstanceRelationshipsSegments';
import AppRelationshipsAppClips from './AppRelationshipsAppClips';
import AppRelationshipsAppCustomProductPages from './AppRelationshipsAppCustomProductPages';
import AppRelationshipsAppEncryptionDeclarations from './AppRelationshipsAppEncryptionDeclarations';
import AppRelationshipsAppEvents from './AppRelationshipsAppEvents';
import AppRelationshipsAppInfos from './AppRelationshipsAppInfos';
import AppRelationshipsAppStoreVersions from './AppRelationshipsAppStoreVersions';
import AppRelationshipsBetaAppLocalizations from './AppRelationshipsBetaAppLocalizations';
import AppRelationshipsBetaAppReviewDetail from './AppRelationshipsBetaAppReviewDetail';
import AppRelationshipsBetaGroups from './AppRelationshipsBetaGroups';
import AppRelationshipsBetaLicenseAgreement from './AppRelationshipsBetaLicenseAgreement';
import AppRelationshipsBuilds from './AppRelationshipsBuilds';
import AppRelationshipsCiProduct from './AppRelationshipsCiProduct';
import AppRelationshipsEndUserLicenseAgreement from './AppRelationshipsEndUserLicenseAgreement';
import AppRelationshipsGameCenterDetail from './AppRelationshipsGameCenterDetail';
import AppRelationshipsGameCenterEnabledVersions from './AppRelationshipsGameCenterEnabledVersions';
import AppRelationshipsInAppPurchases from './AppRelationshipsInAppPurchases';
import AppRelationshipsInAppPurchasesV2 from './AppRelationshipsInAppPurchasesV2';
import AppRelationshipsPreReleaseVersions from './AppRelationshipsPreReleaseVersions';
import AppRelationshipsPromotedPurchases from './AppRelationshipsPromotedPurchases';
import AppRelationshipsReviewSubmissions from './AppRelationshipsReviewSubmissions';
import AppRelationshipsSubscriptionGracePeriod from './AppRelationshipsSubscriptionGracePeriod';
import AppRelationshipsSubscriptionGroups from './AppRelationshipsSubscriptionGroups';
import AppStoreVersionRelationshipsAppStoreVersionExperiments from './AppStoreVersionRelationshipsAppStoreVersionExperiments';

/**
 * The AppRelationships model module.
 * @module model/AppRelationships
 * @version 4.1
 */
class AppRelationships {
    /**
     * Constructs a new <code>AppRelationships</code>.
     * @alias module:model/AppRelationships
     */
    constructor() { 
        
        AppRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppRelationships} obj Optional instance to populate.
     * @return {module:model/AppRelationships} The populated <code>AppRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppRelationships();

            if (data.hasOwnProperty('accessibilityDeclarations')) {
                obj['accessibilityDeclarations'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['accessibilityDeclarations']);
            }
            if (data.hasOwnProperty('appEncryptionDeclarations')) {
                obj['appEncryptionDeclarations'] = AppRelationshipsAppEncryptionDeclarations.constructFromObject(data['appEncryptionDeclarations']);
            }
            if (data.hasOwnProperty('ciProduct')) {
                obj['ciProduct'] = AppRelationshipsCiProduct.constructFromObject(data['ciProduct']);
            }
            if (data.hasOwnProperty('betaTesters')) {
                obj['betaTesters'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['betaTesters']);
            }
            if (data.hasOwnProperty('betaGroups')) {
                obj['betaGroups'] = AppRelationshipsBetaGroups.constructFromObject(data['betaGroups']);
            }
            if (data.hasOwnProperty('appStoreVersions')) {
                obj['appStoreVersions'] = AppRelationshipsAppStoreVersions.constructFromObject(data['appStoreVersions']);
            }
            if (data.hasOwnProperty('appTags')) {
                obj['appTags'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['appTags']);
            }
            if (data.hasOwnProperty('preReleaseVersions')) {
                obj['preReleaseVersions'] = AppRelationshipsPreReleaseVersions.constructFromObject(data['preReleaseVersions']);
            }
            if (data.hasOwnProperty('betaAppLocalizations')) {
                obj['betaAppLocalizations'] = AppRelationshipsBetaAppLocalizations.constructFromObject(data['betaAppLocalizations']);
            }
            if (data.hasOwnProperty('builds')) {
                obj['builds'] = AppRelationshipsBuilds.constructFromObject(data['builds']);
            }
            if (data.hasOwnProperty('betaLicenseAgreement')) {
                obj['betaLicenseAgreement'] = AppRelationshipsBetaLicenseAgreement.constructFromObject(data['betaLicenseAgreement']);
            }
            if (data.hasOwnProperty('betaAppReviewDetail')) {
                obj['betaAppReviewDetail'] = AppRelationshipsBetaAppReviewDetail.constructFromObject(data['betaAppReviewDetail']);
            }
            if (data.hasOwnProperty('appInfos')) {
                obj['appInfos'] = AppRelationshipsAppInfos.constructFromObject(data['appInfos']);
            }
            if (data.hasOwnProperty('appClips')) {
                obj['appClips'] = AppRelationshipsAppClips.constructFromObject(data['appClips']);
            }
            if (data.hasOwnProperty('appPricePoints')) {
                obj['appPricePoints'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['appPricePoints']);
            }
            if (data.hasOwnProperty('endUserLicenseAgreement')) {
                obj['endUserLicenseAgreement'] = AppRelationshipsEndUserLicenseAgreement.constructFromObject(data['endUserLicenseAgreement']);
            }
            if (data.hasOwnProperty('appPriceSchedule')) {
                obj['appPriceSchedule'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['appPriceSchedule']);
            }
            if (data.hasOwnProperty('appAvailabilityV2')) {
                obj['appAvailabilityV2'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['appAvailabilityV2']);
            }
            if (data.hasOwnProperty('inAppPurchases')) {
                obj['inAppPurchases'] = AppRelationshipsInAppPurchases.constructFromObject(data['inAppPurchases']);
            }
            if (data.hasOwnProperty('subscriptionGroups')) {
                obj['subscriptionGroups'] = AppRelationshipsSubscriptionGroups.constructFromObject(data['subscriptionGroups']);
            }
            if (data.hasOwnProperty('gameCenterEnabledVersions')) {
                obj['gameCenterEnabledVersions'] = AppRelationshipsGameCenterEnabledVersions.constructFromObject(data['gameCenterEnabledVersions']);
            }
            if (data.hasOwnProperty('perfPowerMetrics')) {
                obj['perfPowerMetrics'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['perfPowerMetrics']);
            }
            if (data.hasOwnProperty('appCustomProductPages')) {
                obj['appCustomProductPages'] = AppRelationshipsAppCustomProductPages.constructFromObject(data['appCustomProductPages']);
            }
            if (data.hasOwnProperty('inAppPurchasesV2')) {
                obj['inAppPurchasesV2'] = AppRelationshipsInAppPurchasesV2.constructFromObject(data['inAppPurchasesV2']);
            }
            if (data.hasOwnProperty('promotedPurchases')) {
                obj['promotedPurchases'] = AppRelationshipsPromotedPurchases.constructFromObject(data['promotedPurchases']);
            }
            if (data.hasOwnProperty('appEvents')) {
                obj['appEvents'] = AppRelationshipsAppEvents.constructFromObject(data['appEvents']);
            }
            if (data.hasOwnProperty('reviewSubmissions')) {
                obj['reviewSubmissions'] = AppRelationshipsReviewSubmissions.constructFromObject(data['reviewSubmissions']);
            }
            if (data.hasOwnProperty('subscriptionGracePeriod')) {
                obj['subscriptionGracePeriod'] = AppRelationshipsSubscriptionGracePeriod.constructFromObject(data['subscriptionGracePeriod']);
            }
            if (data.hasOwnProperty('customerReviews')) {
                obj['customerReviews'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['customerReviews']);
            }
            if (data.hasOwnProperty('customerReviewSummarizations')) {
                obj['customerReviewSummarizations'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['customerReviewSummarizations']);
            }
            if (data.hasOwnProperty('gameCenterDetail')) {
                obj['gameCenterDetail'] = AppRelationshipsGameCenterDetail.constructFromObject(data['gameCenterDetail']);
            }
            if (data.hasOwnProperty('appStoreVersionExperimentsV2')) {
                obj['appStoreVersionExperimentsV2'] = AppStoreVersionRelationshipsAppStoreVersionExperiments.constructFromObject(data['appStoreVersionExperimentsV2']);
            }
            if (data.hasOwnProperty('alternativeDistributionKey')) {
                obj['alternativeDistributionKey'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['alternativeDistributionKey']);
            }
            if (data.hasOwnProperty('analyticsReportRequests')) {
                obj['analyticsReportRequests'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['analyticsReportRequests']);
            }
            if (data.hasOwnProperty('marketplaceSearchDetail')) {
                obj['marketplaceSearchDetail'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['marketplaceSearchDetail']);
            }
            if (data.hasOwnProperty('buildUploads')) {
                obj['buildUploads'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['buildUploads']);
            }
            if (data.hasOwnProperty('backgroundAssets')) {
                obj['backgroundAssets'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['backgroundAssets']);
            }
            if (data.hasOwnProperty('betaFeedbackScreenshotSubmissions')) {
                obj['betaFeedbackScreenshotSubmissions'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['betaFeedbackScreenshotSubmissions']);
            }
            if (data.hasOwnProperty('betaFeedbackCrashSubmissions')) {
                obj['betaFeedbackCrashSubmissions'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['betaFeedbackCrashSubmissions']);
            }
            if (data.hasOwnProperty('searchKeywords')) {
                obj['searchKeywords'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['searchKeywords']);
            }
            if (data.hasOwnProperty('webhooks')) {
                obj['webhooks'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['webhooks']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessibilityDeclarations`
        if (data['accessibilityDeclarations']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['accessibilityDeclarations']);
        }
        // validate the optional field `appEncryptionDeclarations`
        if (data['appEncryptionDeclarations']) { // data not null
          AppRelationshipsAppEncryptionDeclarations.validateJSON(data['appEncryptionDeclarations']);
        }
        // validate the optional field `ciProduct`
        if (data['ciProduct']) { // data not null
          AppRelationshipsCiProduct.validateJSON(data['ciProduct']);
        }
        // validate the optional field `betaTesters`
        if (data['betaTesters']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['betaTesters']);
        }
        // validate the optional field `betaGroups`
        if (data['betaGroups']) { // data not null
          AppRelationshipsBetaGroups.validateJSON(data['betaGroups']);
        }
        // validate the optional field `appStoreVersions`
        if (data['appStoreVersions']) { // data not null
          AppRelationshipsAppStoreVersions.validateJSON(data['appStoreVersions']);
        }
        // validate the optional field `appTags`
        if (data['appTags']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['appTags']);
        }
        // validate the optional field `preReleaseVersions`
        if (data['preReleaseVersions']) { // data not null
          AppRelationshipsPreReleaseVersions.validateJSON(data['preReleaseVersions']);
        }
        // validate the optional field `betaAppLocalizations`
        if (data['betaAppLocalizations']) { // data not null
          AppRelationshipsBetaAppLocalizations.validateJSON(data['betaAppLocalizations']);
        }
        // validate the optional field `builds`
        if (data['builds']) { // data not null
          AppRelationshipsBuilds.validateJSON(data['builds']);
        }
        // validate the optional field `betaLicenseAgreement`
        if (data['betaLicenseAgreement']) { // data not null
          AppRelationshipsBetaLicenseAgreement.validateJSON(data['betaLicenseAgreement']);
        }
        // validate the optional field `betaAppReviewDetail`
        if (data['betaAppReviewDetail']) { // data not null
          AppRelationshipsBetaAppReviewDetail.validateJSON(data['betaAppReviewDetail']);
        }
        // validate the optional field `appInfos`
        if (data['appInfos']) { // data not null
          AppRelationshipsAppInfos.validateJSON(data['appInfos']);
        }
        // validate the optional field `appClips`
        if (data['appClips']) { // data not null
          AppRelationshipsAppClips.validateJSON(data['appClips']);
        }
        // validate the optional field `appPricePoints`
        if (data['appPricePoints']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['appPricePoints']);
        }
        // validate the optional field `endUserLicenseAgreement`
        if (data['endUserLicenseAgreement']) { // data not null
          AppRelationshipsEndUserLicenseAgreement.validateJSON(data['endUserLicenseAgreement']);
        }
        // validate the optional field `appPriceSchedule`
        if (data['appPriceSchedule']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['appPriceSchedule']);
        }
        // validate the optional field `appAvailabilityV2`
        if (data['appAvailabilityV2']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['appAvailabilityV2']);
        }
        // validate the optional field `inAppPurchases`
        if (data['inAppPurchases']) { // data not null
          AppRelationshipsInAppPurchases.validateJSON(data['inAppPurchases']);
        }
        // validate the optional field `subscriptionGroups`
        if (data['subscriptionGroups']) { // data not null
          AppRelationshipsSubscriptionGroups.validateJSON(data['subscriptionGroups']);
        }
        // validate the optional field `gameCenterEnabledVersions`
        if (data['gameCenterEnabledVersions']) { // data not null
          AppRelationshipsGameCenterEnabledVersions.validateJSON(data['gameCenterEnabledVersions']);
        }
        // validate the optional field `perfPowerMetrics`
        if (data['perfPowerMetrics']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['perfPowerMetrics']);
        }
        // validate the optional field `appCustomProductPages`
        if (data['appCustomProductPages']) { // data not null
          AppRelationshipsAppCustomProductPages.validateJSON(data['appCustomProductPages']);
        }
        // validate the optional field `inAppPurchasesV2`
        if (data['inAppPurchasesV2']) { // data not null
          AppRelationshipsInAppPurchasesV2.validateJSON(data['inAppPurchasesV2']);
        }
        // validate the optional field `promotedPurchases`
        if (data['promotedPurchases']) { // data not null
          AppRelationshipsPromotedPurchases.validateJSON(data['promotedPurchases']);
        }
        // validate the optional field `appEvents`
        if (data['appEvents']) { // data not null
          AppRelationshipsAppEvents.validateJSON(data['appEvents']);
        }
        // validate the optional field `reviewSubmissions`
        if (data['reviewSubmissions']) { // data not null
          AppRelationshipsReviewSubmissions.validateJSON(data['reviewSubmissions']);
        }
        // validate the optional field `subscriptionGracePeriod`
        if (data['subscriptionGracePeriod']) { // data not null
          AppRelationshipsSubscriptionGracePeriod.validateJSON(data['subscriptionGracePeriod']);
        }
        // validate the optional field `customerReviews`
        if (data['customerReviews']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['customerReviews']);
        }
        // validate the optional field `customerReviewSummarizations`
        if (data['customerReviewSummarizations']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['customerReviewSummarizations']);
        }
        // validate the optional field `gameCenterDetail`
        if (data['gameCenterDetail']) { // data not null
          AppRelationshipsGameCenterDetail.validateJSON(data['gameCenterDetail']);
        }
        // validate the optional field `appStoreVersionExperimentsV2`
        if (data['appStoreVersionExperimentsV2']) { // data not null
          AppStoreVersionRelationshipsAppStoreVersionExperiments.validateJSON(data['appStoreVersionExperimentsV2']);
        }
        // validate the optional field `alternativeDistributionKey`
        if (data['alternativeDistributionKey']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['alternativeDistributionKey']);
        }
        // validate the optional field `analyticsReportRequests`
        if (data['analyticsReportRequests']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['analyticsReportRequests']);
        }
        // validate the optional field `marketplaceSearchDetail`
        if (data['marketplaceSearchDetail']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['marketplaceSearchDetail']);
        }
        // validate the optional field `buildUploads`
        if (data['buildUploads']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['buildUploads']);
        }
        // validate the optional field `backgroundAssets`
        if (data['backgroundAssets']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['backgroundAssets']);
        }
        // validate the optional field `betaFeedbackScreenshotSubmissions`
        if (data['betaFeedbackScreenshotSubmissions']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['betaFeedbackScreenshotSubmissions']);
        }
        // validate the optional field `betaFeedbackCrashSubmissions`
        if (data['betaFeedbackCrashSubmissions']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['betaFeedbackCrashSubmissions']);
        }
        // validate the optional field `searchKeywords`
        if (data['searchKeywords']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['searchKeywords']);
        }
        // validate the optional field `webhooks`
        if (data['webhooks']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['webhooks']);
        }

        return true;
    }


}



/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} accessibilityDeclarations
 */
AppRelationships.prototype['accessibilityDeclarations'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppEncryptionDeclarations} appEncryptionDeclarations
 */
AppRelationships.prototype['appEncryptionDeclarations'] = undefined;

/**
 * @member {module:model/AppRelationshipsCiProduct} ciProduct
 */
AppRelationships.prototype['ciProduct'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} betaTesters
 */
AppRelationships.prototype['betaTesters'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaGroups} betaGroups
 */
AppRelationships.prototype['betaGroups'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppStoreVersions} appStoreVersions
 */
AppRelationships.prototype['appStoreVersions'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} appTags
 */
AppRelationships.prototype['appTags'] = undefined;

/**
 * @member {module:model/AppRelationshipsPreReleaseVersions} preReleaseVersions
 */
AppRelationships.prototype['preReleaseVersions'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaAppLocalizations} betaAppLocalizations
 */
AppRelationships.prototype['betaAppLocalizations'] = undefined;

/**
 * @member {module:model/AppRelationshipsBuilds} builds
 */
AppRelationships.prototype['builds'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaLicenseAgreement} betaLicenseAgreement
 */
AppRelationships.prototype['betaLicenseAgreement'] = undefined;

/**
 * @member {module:model/AppRelationshipsBetaAppReviewDetail} betaAppReviewDetail
 */
AppRelationships.prototype['betaAppReviewDetail'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppInfos} appInfos
 */
AppRelationships.prototype['appInfos'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppClips} appClips
 */
AppRelationships.prototype['appClips'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} appPricePoints
 */
AppRelationships.prototype['appPricePoints'] = undefined;

/**
 * @member {module:model/AppRelationshipsEndUserLicenseAgreement} endUserLicenseAgreement
 */
AppRelationships.prototype['endUserLicenseAgreement'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} appPriceSchedule
 */
AppRelationships.prototype['appPriceSchedule'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} appAvailabilityV2
 */
AppRelationships.prototype['appAvailabilityV2'] = undefined;

/**
 * @member {module:model/AppRelationshipsInAppPurchases} inAppPurchases
 */
AppRelationships.prototype['inAppPurchases'] = undefined;

/**
 * @member {module:model/AppRelationshipsSubscriptionGroups} subscriptionGroups
 */
AppRelationships.prototype['subscriptionGroups'] = undefined;

/**
 * @member {module:model/AppRelationshipsGameCenterEnabledVersions} gameCenterEnabledVersions
 */
AppRelationships.prototype['gameCenterEnabledVersions'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} perfPowerMetrics
 */
AppRelationships.prototype['perfPowerMetrics'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppCustomProductPages} appCustomProductPages
 */
AppRelationships.prototype['appCustomProductPages'] = undefined;

/**
 * @member {module:model/AppRelationshipsInAppPurchasesV2} inAppPurchasesV2
 */
AppRelationships.prototype['inAppPurchasesV2'] = undefined;

/**
 * @member {module:model/AppRelationshipsPromotedPurchases} promotedPurchases
 */
AppRelationships.prototype['promotedPurchases'] = undefined;

/**
 * @member {module:model/AppRelationshipsAppEvents} appEvents
 */
AppRelationships.prototype['appEvents'] = undefined;

/**
 * @member {module:model/AppRelationshipsReviewSubmissions} reviewSubmissions
 */
AppRelationships.prototype['reviewSubmissions'] = undefined;

/**
 * @member {module:model/AppRelationshipsSubscriptionGracePeriod} subscriptionGracePeriod
 */
AppRelationships.prototype['subscriptionGracePeriod'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} customerReviews
 */
AppRelationships.prototype['customerReviews'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} customerReviewSummarizations
 */
AppRelationships.prototype['customerReviewSummarizations'] = undefined;

/**
 * @member {module:model/AppRelationshipsGameCenterDetail} gameCenterDetail
 */
AppRelationships.prototype['gameCenterDetail'] = undefined;

/**
 * @member {module:model/AppStoreVersionRelationshipsAppStoreVersionExperiments} appStoreVersionExperimentsV2
 */
AppRelationships.prototype['appStoreVersionExperimentsV2'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} alternativeDistributionKey
 */
AppRelationships.prototype['alternativeDistributionKey'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} analyticsReportRequests
 */
AppRelationships.prototype['analyticsReportRequests'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} marketplaceSearchDetail
 */
AppRelationships.prototype['marketplaceSearchDetail'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} buildUploads
 */
AppRelationships.prototype['buildUploads'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} backgroundAssets
 */
AppRelationships.prototype['backgroundAssets'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} betaFeedbackScreenshotSubmissions
 */
AppRelationships.prototype['betaFeedbackScreenshotSubmissions'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} betaFeedbackCrashSubmissions
 */
AppRelationships.prototype['betaFeedbackCrashSubmissions'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} searchKeywords
 */
AppRelationships.prototype['searchKeywords'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} webhooks
 */
AppRelationships.prototype['webhooks'] = undefined;






export default AppRelationships;

