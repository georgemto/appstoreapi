/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GameCenterActivityRelationshipsAchievements from './GameCenterActivityRelationshipsAchievements';
import GameCenterActivityRelationshipsLeaderboards from './GameCenterActivityRelationshipsLeaderboards';
import GameCenterDetailRelationshipsGameCenterActivities from './GameCenterDetailRelationshipsGameCenterActivities';
import GameCenterDetailRelationshipsGameCenterChallenges from './GameCenterDetailRelationshipsGameCenterChallenges';
import GameCenterDetailRelationshipsGameCenterLeaderboardSets from './GameCenterDetailRelationshipsGameCenterLeaderboardSets';
import GameCenterGroupRelationshipsGameCenterDetails from './GameCenterGroupRelationshipsGameCenterDetails';

/**
 * The GameCenterGroupRelationships model module.
 * @module model/GameCenterGroupRelationships
 * @version 4.1
 */
class GameCenterGroupRelationships {
    /**
     * Constructs a new <code>GameCenterGroupRelationships</code>.
     * @alias module:model/GameCenterGroupRelationships
     */
    constructor() { 
        
        GameCenterGroupRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GameCenterGroupRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameCenterGroupRelationships} obj Optional instance to populate.
     * @return {module:model/GameCenterGroupRelationships} The populated <code>GameCenterGroupRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameCenterGroupRelationships();

            if (data.hasOwnProperty('gameCenterDetails')) {
                obj['gameCenterDetails'] = GameCenterGroupRelationshipsGameCenterDetails.constructFromObject(data['gameCenterDetails']);
            }
            if (data.hasOwnProperty('gameCenterLeaderboards')) {
                obj['gameCenterLeaderboards'] = GameCenterActivityRelationshipsLeaderboards.constructFromObject(data['gameCenterLeaderboards']);
            }
            if (data.hasOwnProperty('gameCenterLeaderboardSets')) {
                obj['gameCenterLeaderboardSets'] = GameCenterDetailRelationshipsGameCenterLeaderboardSets.constructFromObject(data['gameCenterLeaderboardSets']);
            }
            if (data.hasOwnProperty('gameCenterAchievements')) {
                obj['gameCenterAchievements'] = GameCenterActivityRelationshipsAchievements.constructFromObject(data['gameCenterAchievements']);
            }
            if (data.hasOwnProperty('gameCenterActivities')) {
                obj['gameCenterActivities'] = GameCenterDetailRelationshipsGameCenterActivities.constructFromObject(data['gameCenterActivities']);
            }
            if (data.hasOwnProperty('gameCenterChallenges')) {
                obj['gameCenterChallenges'] = GameCenterDetailRelationshipsGameCenterChallenges.constructFromObject(data['gameCenterChallenges']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GameCenterGroupRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GameCenterGroupRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gameCenterDetails`
        if (data['gameCenterDetails']) { // data not null
          GameCenterGroupRelationshipsGameCenterDetails.validateJSON(data['gameCenterDetails']);
        }
        // validate the optional field `gameCenterLeaderboards`
        if (data['gameCenterLeaderboards']) { // data not null
          GameCenterActivityRelationshipsLeaderboards.validateJSON(data['gameCenterLeaderboards']);
        }
        // validate the optional field `gameCenterLeaderboardSets`
        if (data['gameCenterLeaderboardSets']) { // data not null
          GameCenterDetailRelationshipsGameCenterLeaderboardSets.validateJSON(data['gameCenterLeaderboardSets']);
        }
        // validate the optional field `gameCenterAchievements`
        if (data['gameCenterAchievements']) { // data not null
          GameCenterActivityRelationshipsAchievements.validateJSON(data['gameCenterAchievements']);
        }
        // validate the optional field `gameCenterActivities`
        if (data['gameCenterActivities']) { // data not null
          GameCenterDetailRelationshipsGameCenterActivities.validateJSON(data['gameCenterActivities']);
        }
        // validate the optional field `gameCenterChallenges`
        if (data['gameCenterChallenges']) { // data not null
          GameCenterDetailRelationshipsGameCenterChallenges.validateJSON(data['gameCenterChallenges']);
        }

        return true;
    }


}



/**
 * @member {module:model/GameCenterGroupRelationshipsGameCenterDetails} gameCenterDetails
 */
GameCenterGroupRelationships.prototype['gameCenterDetails'] = undefined;

/**
 * @member {module:model/GameCenterActivityRelationshipsLeaderboards} gameCenterLeaderboards
 */
GameCenterGroupRelationships.prototype['gameCenterLeaderboards'] = undefined;

/**
 * @member {module:model/GameCenterDetailRelationshipsGameCenterLeaderboardSets} gameCenterLeaderboardSets
 */
GameCenterGroupRelationships.prototype['gameCenterLeaderboardSets'] = undefined;

/**
 * @member {module:model/GameCenterActivityRelationshipsAchievements} gameCenterAchievements
 */
GameCenterGroupRelationships.prototype['gameCenterAchievements'] = undefined;

/**
 * @member {module:model/GameCenterDetailRelationshipsGameCenterActivities} gameCenterActivities
 */
GameCenterGroupRelationships.prototype['gameCenterActivities'] = undefined;

/**
 * @member {module:model/GameCenterDetailRelationshipsGameCenterChallenges} gameCenterChallenges
 */
GameCenterGroupRelationships.prototype['gameCenterChallenges'] = undefined;






export default GameCenterGroupRelationships;

