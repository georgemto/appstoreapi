/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScmProviderType model module.
 * @module model/ScmProviderType
 * @version 4.1
 */
class ScmProviderType {
    /**
     * Constructs a new <code>ScmProviderType</code>.
     * @alias module:model/ScmProviderType
     */
    constructor() { 
        
        ScmProviderType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScmProviderType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScmProviderType} obj Optional instance to populate.
     * @return {module:model/ScmProviderType} The populated <code>ScmProviderType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScmProviderType();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('isOnPremise')) {
                obj['isOnPremise'] = ApiClient.convertToType(data['isOnPremise'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScmProviderType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScmProviderType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }

        return true;
    }


}



/**
 * @member {module:model/ScmProviderType.KindEnum} kind
 */
ScmProviderType.prototype['kind'] = undefined;

/**
 * @member {String} displayName
 */
ScmProviderType.prototype['displayName'] = undefined;

/**
 * @member {Boolean} isOnPremise
 */
ScmProviderType.prototype['isOnPremise'] = undefined;





/**
 * Allowed values for the <code>kind</code> property.
 * @enum {String}
 * @readonly
 */
ScmProviderType['KindEnum'] = {

    /**
     * value: "BITBUCKET_CLOUD"
     * @const
     */
    "BITBUCKET_CLOUD": "BITBUCKET_CLOUD",

    /**
     * value: "BITBUCKET_SERVER"
     * @const
     */
    "BITBUCKET_SERVER": "BITBUCKET_SERVER",

    /**
     * value: "GITHUB_CLOUD"
     * @const
     */
    "GITHUB_CLOUD": "GITHUB_CLOUD",

    /**
     * value: "GITHUB_ENTERPRISE"
     * @const
     */
    "GITHUB_ENTERPRISE": "GITHUB_ENTERPRISE",

    /**
     * value: "GITLAB_CLOUD"
     * @const
     */
    "GITLAB_CLOUD": "GITLAB_CLOUD",

    /**
     * value: "GITLAB_SELF_MANAGED"
     * @const
     */
    "GITLAB_SELF_MANAGED": "GITLAB_SELF_MANAGED"
};



export default ScmProviderType;

