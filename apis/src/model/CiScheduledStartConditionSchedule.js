/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CiScheduledStartConditionSchedule model module.
 * @module model/CiScheduledStartConditionSchedule
 * @version 4.1
 */
class CiScheduledStartConditionSchedule {
    /**
     * Constructs a new <code>CiScheduledStartConditionSchedule</code>.
     * @alias module:model/CiScheduledStartConditionSchedule
     */
    constructor() { 
        
        CiScheduledStartConditionSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiScheduledStartConditionSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiScheduledStartConditionSchedule} obj Optional instance to populate.
     * @return {module:model/CiScheduledStartConditionSchedule} The populated <code>CiScheduledStartConditionSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiScheduledStartConditionSchedule();

            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = ApiClient.convertToType(data['frequency'], 'String');
            }
            if (data.hasOwnProperty('days')) {
                obj['days'] = ApiClient.convertToType(data['days'], ['String']);
            }
            if (data.hasOwnProperty('hour')) {
                obj['hour'] = ApiClient.convertToType(data['hour'], 'Number');
            }
            if (data.hasOwnProperty('minute')) {
                obj['minute'] = ApiClient.convertToType(data['minute'], 'Number');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiScheduledStartConditionSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiScheduledStartConditionSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['frequency'] && !(typeof data['frequency'] === 'string' || data['frequency'] instanceof String)) {
            throw new Error("Expected the field `frequency` to be a primitive type in the JSON string but got " + data['frequency']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['days'])) {
            throw new Error("Expected the field `days` to be an array in the JSON data but got " + data['days']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }

        return true;
    }


}



/**
 * @member {module:model/CiScheduledStartConditionSchedule.FrequencyEnum} frequency
 */
CiScheduledStartConditionSchedule.prototype['frequency'] = undefined;

/**
 * @member {Array.<module:model/CiScheduledStartConditionSchedule.DaysEnum>} days
 */
CiScheduledStartConditionSchedule.prototype['days'] = undefined;

/**
 * @member {Number} hour
 */
CiScheduledStartConditionSchedule.prototype['hour'] = undefined;

/**
 * @member {Number} minute
 */
CiScheduledStartConditionSchedule.prototype['minute'] = undefined;

/**
 * @member {String} timezone
 */
CiScheduledStartConditionSchedule.prototype['timezone'] = undefined;





/**
 * Allowed values for the <code>frequency</code> property.
 * @enum {String}
 * @readonly
 */
CiScheduledStartConditionSchedule['FrequencyEnum'] = {

    /**
     * value: "WEEKLY"
     * @const
     */
    "WEEKLY": "WEEKLY",

    /**
     * value: "DAILY"
     * @const
     */
    "DAILY": "DAILY",

    /**
     * value: "HOURLY"
     * @const
     */
    "HOURLY": "HOURLY"
};


/**
 * Allowed values for the <code>days</code> property.
 * @enum {String}
 * @readonly
 */
CiScheduledStartConditionSchedule['DaysEnum'] = {

    /**
     * value: "SUNDAY"
     * @const
     */
    "SUNDAY": "SUNDAY",

    /**
     * value: "MONDAY"
     * @const
     */
    "MONDAY": "MONDAY",

    /**
     * value: "TUESDAY"
     * @const
     */
    "TUESDAY": "TUESDAY",

    /**
     * value: "WEDNESDAY"
     * @const
     */
    "WEDNESDAY": "WEDNESDAY",

    /**
     * value: "THURSDAY"
     * @const
     */
    "THURSDAY": "THURSDAY",

    /**
     * value: "FRIDAY"
     * @const
     */
    "FRIDAY": "FRIDAY",

    /**
     * value: "SATURDAY"
     * @const
     */
    "SATURDAY": "SATURDAY"
};



export default CiScheduledStartConditionSchedule;

