/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppMediaStateError from './AppMediaStateError';

/**
 * The AppMediaPreviewFrameImageState model module.
 * @module model/AppMediaPreviewFrameImageState
 * @version 4.1
 */
class AppMediaPreviewFrameImageState {
    /**
     * Constructs a new <code>AppMediaPreviewFrameImageState</code>.
     * @alias module:model/AppMediaPreviewFrameImageState
     */
    constructor() { 
        
        AppMediaPreviewFrameImageState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppMediaPreviewFrameImageState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppMediaPreviewFrameImageState} obj Optional instance to populate.
     * @return {module:model/AppMediaPreviewFrameImageState} The populated <code>AppMediaPreviewFrameImageState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppMediaPreviewFrameImageState();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [AppMediaStateError]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [AppMediaStateError]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppMediaPreviewFrameImageState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppMediaPreviewFrameImageState</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                AppMediaStateError.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                AppMediaStateError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AppMediaStateError>} errors
 */
AppMediaPreviewFrameImageState.prototype['errors'] = undefined;

/**
 * @member {Array.<module:model/AppMediaStateError>} warnings
 */
AppMediaPreviewFrameImageState.prototype['warnings'] = undefined;

/**
 * @member {module:model/AppMediaPreviewFrameImageState.StateEnum} state
 */
AppMediaPreviewFrameImageState.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AppMediaPreviewFrameImageState['StateEnum'] = {

    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",

    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default AppMediaPreviewFrameImageState;

