/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricCategory from './MetricCategory';
import MetricsInsightPopulationsInner from './MetricsInsightPopulationsInner';

/**
 * The MetricsInsight model module.
 * @module model/MetricsInsight
 * @version 4.1
 */
class MetricsInsight {
    /**
     * Constructs a new <code>MetricsInsight</code>.
     * @alias module:model/MetricsInsight
     */
    constructor() { 
        
        MetricsInsight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricsInsight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricsInsight} obj Optional instance to populate.
     * @return {module:model/MetricsInsight} The populated <code>MetricsInsight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricsInsight();

            if (data.hasOwnProperty('metricCategory')) {
                obj['metricCategory'] = MetricCategory.constructFromObject(data['metricCategory']);
            }
            if (data.hasOwnProperty('latestVersion')) {
                obj['latestVersion'] = ApiClient.convertToType(data['latestVersion'], 'String');
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('summaryString')) {
                obj['summaryString'] = ApiClient.convertToType(data['summaryString'], 'String');
            }
            if (data.hasOwnProperty('referenceVersions')) {
                obj['referenceVersions'] = ApiClient.convertToType(data['referenceVersions'], 'String');
            }
            if (data.hasOwnProperty('maxLatestVersionValue')) {
                obj['maxLatestVersionValue'] = ApiClient.convertToType(data['maxLatestVersionValue'], 'Number');
            }
            if (data.hasOwnProperty('subSystemLabel')) {
                obj['subSystemLabel'] = ApiClient.convertToType(data['subSystemLabel'], 'String');
            }
            if (data.hasOwnProperty('highImpact')) {
                obj['highImpact'] = ApiClient.convertToType(data['highImpact'], 'Boolean');
            }
            if (data.hasOwnProperty('populations')) {
                obj['populations'] = ApiClient.convertToType(data['populations'], [MetricsInsightPopulationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricsInsight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricsInsight</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['latestVersion'] && !(typeof data['latestVersion'] === 'string' || data['latestVersion'] instanceof String)) {
            throw new Error("Expected the field `latestVersion` to be a primitive type in the JSON string but got " + data['latestVersion']);
        }
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // ensure the json data is a string
        if (data['summaryString'] && !(typeof data['summaryString'] === 'string' || data['summaryString'] instanceof String)) {
            throw new Error("Expected the field `summaryString` to be a primitive type in the JSON string but got " + data['summaryString']);
        }
        // ensure the json data is a string
        if (data['referenceVersions'] && !(typeof data['referenceVersions'] === 'string' || data['referenceVersions'] instanceof String)) {
            throw new Error("Expected the field `referenceVersions` to be a primitive type in the JSON string but got " + data['referenceVersions']);
        }
        // ensure the json data is a string
        if (data['subSystemLabel'] && !(typeof data['subSystemLabel'] === 'string' || data['subSystemLabel'] instanceof String)) {
            throw new Error("Expected the field `subSystemLabel` to be a primitive type in the JSON string but got " + data['subSystemLabel']);
        }
        if (data['populations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['populations'])) {
                throw new Error("Expected the field `populations` to be an array in the JSON data but got " + data['populations']);
            }
            // validate the optional field `populations` (array)
            for (const item of data['populations']) {
                MetricsInsightPopulationsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/MetricCategory} metricCategory
 */
MetricsInsight.prototype['metricCategory'] = undefined;

/**
 * @member {String} latestVersion
 */
MetricsInsight.prototype['latestVersion'] = undefined;

/**
 * @member {String} metric
 */
MetricsInsight.prototype['metric'] = undefined;

/**
 * @member {String} summaryString
 */
MetricsInsight.prototype['summaryString'] = undefined;

/**
 * @member {String} referenceVersions
 */
MetricsInsight.prototype['referenceVersions'] = undefined;

/**
 * @member {Number} maxLatestVersionValue
 */
MetricsInsight.prototype['maxLatestVersionValue'] = undefined;

/**
 * @member {String} subSystemLabel
 */
MetricsInsight.prototype['subSystemLabel'] = undefined;

/**
 * @member {Boolean} highImpact
 */
MetricsInsight.prototype['highImpact'] = undefined;

/**
 * @member {Array.<module:model/MetricsInsightPopulationsInner>} populations
 */
MetricsInsight.prototype['populations'] = undefined;






export default MetricsInsight;

