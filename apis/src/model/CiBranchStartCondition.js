/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CiBranchPatterns from './CiBranchPatterns';
import CiFilesAndFoldersRule from './CiFilesAndFoldersRule';

/**
 * The CiBranchStartCondition model module.
 * @module model/CiBranchStartCondition
 * @version 4.1
 */
class CiBranchStartCondition {
    /**
     * Constructs a new <code>CiBranchStartCondition</code>.
     * @alias module:model/CiBranchStartCondition
     */
    constructor() { 
        
        CiBranchStartCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiBranchStartCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiBranchStartCondition} obj Optional instance to populate.
     * @return {module:model/CiBranchStartCondition} The populated <code>CiBranchStartCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiBranchStartCondition();

            if (data.hasOwnProperty('source')) {
                obj['source'] = CiBranchPatterns.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('filesAndFoldersRule')) {
                obj['filesAndFoldersRule'] = CiFilesAndFoldersRule.constructFromObject(data['filesAndFoldersRule']);
            }
            if (data.hasOwnProperty('autoCancel')) {
                obj['autoCancel'] = ApiClient.convertToType(data['autoCancel'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiBranchStartCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiBranchStartCondition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `source`
        if (data['source']) { // data not null
          CiBranchPatterns.validateJSON(data['source']);
        }
        // validate the optional field `filesAndFoldersRule`
        if (data['filesAndFoldersRule']) { // data not null
          CiFilesAndFoldersRule.validateJSON(data['filesAndFoldersRule']);
        }

        return true;
    }


}



/**
 * @member {module:model/CiBranchPatterns} source
 */
CiBranchStartCondition.prototype['source'] = undefined;

/**
 * @member {module:model/CiFilesAndFoldersRule} filesAndFoldersRule
 */
CiBranchStartCondition.prototype['filesAndFoldersRule'] = undefined;

/**
 * @member {Boolean} autoCancel
 */
CiBranchStartCondition.prototype['autoCancel'] = undefined;






export default CiBranchStartCondition;

