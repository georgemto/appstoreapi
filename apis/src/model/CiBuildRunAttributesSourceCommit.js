/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CiGitUser from './CiGitUser';

/**
 * The CiBuildRunAttributesSourceCommit model module.
 * @module model/CiBuildRunAttributesSourceCommit
 * @version 4.1
 */
class CiBuildRunAttributesSourceCommit {
    /**
     * Constructs a new <code>CiBuildRunAttributesSourceCommit</code>.
     * @alias module:model/CiBuildRunAttributesSourceCommit
     */
    constructor() { 
        
        CiBuildRunAttributesSourceCommit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CiBuildRunAttributesSourceCommit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CiBuildRunAttributesSourceCommit} obj Optional instance to populate.
     * @return {module:model/CiBuildRunAttributesSourceCommit} The populated <code>CiBuildRunAttributesSourceCommit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CiBuildRunAttributesSourceCommit();

            if (data.hasOwnProperty('commitSha')) {
                obj['commitSha'] = ApiClient.convertToType(data['commitSha'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = CiGitUser.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('committer')) {
                obj['committer'] = CiGitUser.constructFromObject(data['committer']);
            }
            if (data.hasOwnProperty('webUrl')) {
                obj['webUrl'] = ApiClient.convertToType(data['webUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CiBuildRunAttributesSourceCommit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CiBuildRunAttributesSourceCommit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commitSha'] && !(typeof data['commitSha'] === 'string' || data['commitSha'] instanceof String)) {
            throw new Error("Expected the field `commitSha` to be a primitive type in the JSON string but got " + data['commitSha']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `author`
        if (data['author']) { // data not null
          CiGitUser.validateJSON(data['author']);
        }
        // validate the optional field `committer`
        if (data['committer']) { // data not null
          CiGitUser.validateJSON(data['committer']);
        }
        // ensure the json data is a string
        if (data['webUrl'] && !(typeof data['webUrl'] === 'string' || data['webUrl'] instanceof String)) {
            throw new Error("Expected the field `webUrl` to be a primitive type in the JSON string but got " + data['webUrl']);
        }

        return true;
    }


}



/**
 * @member {String} commitSha
 */
CiBuildRunAttributesSourceCommit.prototype['commitSha'] = undefined;

/**
 * @member {String} message
 */
CiBuildRunAttributesSourceCommit.prototype['message'] = undefined;

/**
 * @member {module:model/CiGitUser} author
 */
CiBuildRunAttributesSourceCommit.prototype['author'] = undefined;

/**
 * @member {module:model/CiGitUser} committer
 */
CiBuildRunAttributesSourceCommit.prototype['committer'] = undefined;

/**
 * @member {String} webUrl
 */
CiBuildRunAttributesSourceCommit.prototype['webUrl'] = undefined;






export default CiBuildRunAttributesSourceCommit;

