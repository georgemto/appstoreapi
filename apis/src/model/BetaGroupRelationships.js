/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsReportInstanceRelationshipsSegments from './AnalyticsReportInstanceRelationshipsSegments';
import AppRelationshipsBuilds from './AppRelationshipsBuilds';
import BetaAppLocalizationRelationshipsApp from './BetaAppLocalizationRelationshipsApp';
import BetaGroupRelationshipsBetaRecruitmentCriteria from './BetaGroupRelationshipsBetaRecruitmentCriteria';
import BetaGroupRelationshipsBetaTesters from './BetaGroupRelationshipsBetaTesters';

/**
 * The BetaGroupRelationships model module.
 * @module model/BetaGroupRelationships
 * @version 4.1
 */
class BetaGroupRelationships {
    /**
     * Constructs a new <code>BetaGroupRelationships</code>.
     * @alias module:model/BetaGroupRelationships
     */
    constructor() { 
        
        BetaGroupRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BetaGroupRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BetaGroupRelationships} obj Optional instance to populate.
     * @return {module:model/BetaGroupRelationships} The populated <code>BetaGroupRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BetaGroupRelationships();

            if (data.hasOwnProperty('app')) {
                obj['app'] = BetaAppLocalizationRelationshipsApp.constructFromObject(data['app']);
            }
            if (data.hasOwnProperty('builds')) {
                obj['builds'] = AppRelationshipsBuilds.constructFromObject(data['builds']);
            }
            if (data.hasOwnProperty('betaTesters')) {
                obj['betaTesters'] = BetaGroupRelationshipsBetaTesters.constructFromObject(data['betaTesters']);
            }
            if (data.hasOwnProperty('betaRecruitmentCriteria')) {
                obj['betaRecruitmentCriteria'] = BetaGroupRelationshipsBetaRecruitmentCriteria.constructFromObject(data['betaRecruitmentCriteria']);
            }
            if (data.hasOwnProperty('betaRecruitmentCriterionCompatibleBuildCheck')) {
                obj['betaRecruitmentCriterionCompatibleBuildCheck'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['betaRecruitmentCriterionCompatibleBuildCheck']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BetaGroupRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BetaGroupRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `app`
        if (data['app']) { // data not null
          BetaAppLocalizationRelationshipsApp.validateJSON(data['app']);
        }
        // validate the optional field `builds`
        if (data['builds']) { // data not null
          AppRelationshipsBuilds.validateJSON(data['builds']);
        }
        // validate the optional field `betaTesters`
        if (data['betaTesters']) { // data not null
          BetaGroupRelationshipsBetaTesters.validateJSON(data['betaTesters']);
        }
        // validate the optional field `betaRecruitmentCriteria`
        if (data['betaRecruitmentCriteria']) { // data not null
          BetaGroupRelationshipsBetaRecruitmentCriteria.validateJSON(data['betaRecruitmentCriteria']);
        }
        // validate the optional field `betaRecruitmentCriterionCompatibleBuildCheck`
        if (data['betaRecruitmentCriterionCompatibleBuildCheck']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['betaRecruitmentCriterionCompatibleBuildCheck']);
        }

        return true;
    }


}



/**
 * @member {module:model/BetaAppLocalizationRelationshipsApp} app
 */
BetaGroupRelationships.prototype['app'] = undefined;

/**
 * @member {module:model/AppRelationshipsBuilds} builds
 */
BetaGroupRelationships.prototype['builds'] = undefined;

/**
 * @member {module:model/BetaGroupRelationshipsBetaTesters} betaTesters
 */
BetaGroupRelationships.prototype['betaTesters'] = undefined;

/**
 * @member {module:model/BetaGroupRelationshipsBetaRecruitmentCriteria} betaRecruitmentCriteria
 */
BetaGroupRelationships.prototype['betaRecruitmentCriteria'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} betaRecruitmentCriterionCompatibleBuildCheck
 */
BetaGroupRelationships.prototype['betaRecruitmentCriterionCompatibleBuildCheck'] = undefined;






export default BetaGroupRelationships;

