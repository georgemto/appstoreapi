/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GameCenterMatchmakingQueue from './GameCenterMatchmakingQueue';
import GameCenterMatchmakingQueueRelationships from './GameCenterMatchmakingQueueRelationships';
import GameCenterMatchmakingRule from './GameCenterMatchmakingRule';
import GameCenterMatchmakingTeam from './GameCenterMatchmakingTeam';
import GameCenterMatchmakingTeamAttributes from './GameCenterMatchmakingTeamAttributes';
import ResourceLinks from './ResourceLinks';

/**
 * The GameCenterMatchmakingRuleSetsResponseIncludedInner model module.
 * @module model/GameCenterMatchmakingRuleSetsResponseIncludedInner
 * @version 4.1
 */
class GameCenterMatchmakingRuleSetsResponseIncludedInner {
    /**
     * Constructs a new <code>GameCenterMatchmakingRuleSetsResponseIncludedInner</code>.
     * @alias module:model/GameCenterMatchmakingRuleSetsResponseIncludedInner
     * @param {(module:model/GameCenterMatchmakingQueue|module:model/GameCenterMatchmakingRule|module:model/GameCenterMatchmakingTeam)} instance The actual instance to initialize GameCenterMatchmakingRuleSetsResponseIncludedInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "GameCenterMatchmakingQueue") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GameCenterMatchmakingQueue.validateJSON(instance); // throw an exception if no match
                // create GameCenterMatchmakingQueue from JS object
                this.actualInstance = GameCenterMatchmakingQueue.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GameCenterMatchmakingQueue
            errorMessages.push("Failed to construct GameCenterMatchmakingQueue: " + err)
        }

        try {
            if (typeof instance === "GameCenterMatchmakingRule") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GameCenterMatchmakingRule.validateJSON(instance); // throw an exception if no match
                // create GameCenterMatchmakingRule from JS object
                this.actualInstance = GameCenterMatchmakingRule.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GameCenterMatchmakingRule
            errorMessages.push("Failed to construct GameCenterMatchmakingRule: " + err)
        }

        try {
            if (typeof instance === "GameCenterMatchmakingTeam") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GameCenterMatchmakingTeam.validateJSON(instance); // throw an exception if no match
                // create GameCenterMatchmakingTeam from JS object
                this.actualInstance = GameCenterMatchmakingTeam.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GameCenterMatchmakingTeam
            errorMessages.push("Failed to construct GameCenterMatchmakingTeam: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GameCenterMatchmakingRuleSetsResponseIncludedInner` with oneOf schemas GameCenterMatchmakingQueue, GameCenterMatchmakingRule, GameCenterMatchmakingTeam. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GameCenterMatchmakingRuleSetsResponseIncludedInner` with oneOf schemas GameCenterMatchmakingQueue, GameCenterMatchmakingRule, GameCenterMatchmakingTeam. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GameCenterMatchmakingRuleSetsResponseIncludedInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameCenterMatchmakingRuleSetsResponseIncludedInner} obj Optional instance to populate.
     * @return {module:model/GameCenterMatchmakingRuleSetsResponseIncludedInner} The populated <code>GameCenterMatchmakingRuleSetsResponseIncludedInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GameCenterMatchmakingRuleSetsResponseIncludedInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>GameCenterMatchmakingQueue</code>, <code>GameCenterMatchmakingRule</code>, <code>GameCenterMatchmakingTeam</code>.
     * @return {(module:model/GameCenterMatchmakingQueue|module:model/GameCenterMatchmakingRule|module:model/GameCenterMatchmakingTeam)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GameCenterMatchmakingQueue</code>, <code>GameCenterMatchmakingRule</code>, <code>GameCenterMatchmakingTeam</code>.
     * @param {(module:model/GameCenterMatchmakingQueue|module:model/GameCenterMatchmakingRule|module:model/GameCenterMatchmakingTeam)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GameCenterMatchmakingRuleSetsResponseIncludedInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GameCenterMatchmakingRuleSetsResponseIncludedInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GameCenterMatchmakingRuleSetsResponseIncludedInner} An instance of GameCenterMatchmakingRuleSetsResponseIncludedInner.
     */
    static fromJSON = function(json_string){
        return GameCenterMatchmakingRuleSetsResponseIncludedInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/GameCenterMatchmakingRuleSetsResponseIncludedInner.TypeEnum} type
 */
GameCenterMatchmakingRuleSetsResponseIncludedInner.prototype['type'] = undefined;

/**
 * @member {String} id
 */
GameCenterMatchmakingRuleSetsResponseIncludedInner.prototype['id'] = undefined;

/**
 * @member {module:model/GameCenterMatchmakingTeamAttributes} attributes
 */
GameCenterMatchmakingRuleSetsResponseIncludedInner.prototype['attributes'] = undefined;

/**
 * @member {module:model/GameCenterMatchmakingQueueRelationships} relationships
 */
GameCenterMatchmakingRuleSetsResponseIncludedInner.prototype['relationships'] = undefined;

/**
 * @member {module:model/ResourceLinks} links
 */
GameCenterMatchmakingRuleSetsResponseIncludedInner.prototype['links'] = undefined;


GameCenterMatchmakingRuleSetsResponseIncludedInner.OneOf = ["GameCenterMatchmakingQueue", "GameCenterMatchmakingRule", "GameCenterMatchmakingTeam"];

export default GameCenterMatchmakingRuleSetsResponseIncludedInner;

