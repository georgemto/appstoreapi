/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsReportInstanceRelationshipsSegments from './AnalyticsReportInstanceRelationshipsSegments';
import AppStoreVersionCreateRequestDataRelationshipsBuild from './AppStoreVersionCreateRequestDataRelationshipsBuild';
import BuildUploadRelationshipsAssetFile from './BuildUploadRelationshipsAssetFile';

/**
 * The BuildUploadRelationships model module.
 * @module model/BuildUploadRelationships
 * @version 4.1
 */
class BuildUploadRelationships {
    /**
     * Constructs a new <code>BuildUploadRelationships</code>.
     * @alias module:model/BuildUploadRelationships
     */
    constructor() { 
        
        BuildUploadRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildUploadRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildUploadRelationships} obj Optional instance to populate.
     * @return {module:model/BuildUploadRelationships} The populated <code>BuildUploadRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildUploadRelationships();

            if (data.hasOwnProperty('build')) {
                obj['build'] = AppStoreVersionCreateRequestDataRelationshipsBuild.constructFromObject(data['build']);
            }
            if (data.hasOwnProperty('assetFile')) {
                obj['assetFile'] = BuildUploadRelationshipsAssetFile.constructFromObject(data['assetFile']);
            }
            if (data.hasOwnProperty('assetDescriptionFile')) {
                obj['assetDescriptionFile'] = BuildUploadRelationshipsAssetFile.constructFromObject(data['assetDescriptionFile']);
            }
            if (data.hasOwnProperty('assetSpiFile')) {
                obj['assetSpiFile'] = BuildUploadRelationshipsAssetFile.constructFromObject(data['assetSpiFile']);
            }
            if (data.hasOwnProperty('buildUploadFiles')) {
                obj['buildUploadFiles'] = AnalyticsReportInstanceRelationshipsSegments.constructFromObject(data['buildUploadFiles']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildUploadRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildUploadRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `build`
        if (data['build']) { // data not null
          AppStoreVersionCreateRequestDataRelationshipsBuild.validateJSON(data['build']);
        }
        // validate the optional field `assetFile`
        if (data['assetFile']) { // data not null
          BuildUploadRelationshipsAssetFile.validateJSON(data['assetFile']);
        }
        // validate the optional field `assetDescriptionFile`
        if (data['assetDescriptionFile']) { // data not null
          BuildUploadRelationshipsAssetFile.validateJSON(data['assetDescriptionFile']);
        }
        // validate the optional field `assetSpiFile`
        if (data['assetSpiFile']) { // data not null
          BuildUploadRelationshipsAssetFile.validateJSON(data['assetSpiFile']);
        }
        // validate the optional field `buildUploadFiles`
        if (data['buildUploadFiles']) { // data not null
          AnalyticsReportInstanceRelationshipsSegments.validateJSON(data['buildUploadFiles']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppStoreVersionCreateRequestDataRelationshipsBuild} build
 */
BuildUploadRelationships.prototype['build'] = undefined;

/**
 * @member {module:model/BuildUploadRelationshipsAssetFile} assetFile
 */
BuildUploadRelationships.prototype['assetFile'] = undefined;

/**
 * @member {module:model/BuildUploadRelationshipsAssetFile} assetDescriptionFile
 */
BuildUploadRelationships.prototype['assetDescriptionFile'] = undefined;

/**
 * @member {module:model/BuildUploadRelationshipsAssetFile} assetSpiFile
 */
BuildUploadRelationships.prototype['assetSpiFile'] = undefined;

/**
 * @member {module:model/AnalyticsReportInstanceRelationshipsSegments} buildUploadFiles
 */
BuildUploadRelationships.prototype['buildUploadFiles'] = undefined;






export default BuildUploadRelationships;

