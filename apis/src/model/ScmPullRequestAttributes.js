/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScmPullRequestAttributes model module.
 * @module model/ScmPullRequestAttributes
 * @version 4.1
 */
class ScmPullRequestAttributes {
    /**
     * Constructs a new <code>ScmPullRequestAttributes</code>.
     * @alias module:model/ScmPullRequestAttributes
     */
    constructor() { 
        
        ScmPullRequestAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScmPullRequestAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScmPullRequestAttributes} obj Optional instance to populate.
     * @return {module:model/ScmPullRequestAttributes} The populated <code>ScmPullRequestAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScmPullRequestAttributes();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('webUrl')) {
                obj['webUrl'] = ApiClient.convertToType(data['webUrl'], 'String');
            }
            if (data.hasOwnProperty('sourceRepositoryOwner')) {
                obj['sourceRepositoryOwner'] = ApiClient.convertToType(data['sourceRepositoryOwner'], 'String');
            }
            if (data.hasOwnProperty('sourceRepositoryName')) {
                obj['sourceRepositoryName'] = ApiClient.convertToType(data['sourceRepositoryName'], 'String');
            }
            if (data.hasOwnProperty('sourceBranchName')) {
                obj['sourceBranchName'] = ApiClient.convertToType(data['sourceBranchName'], 'String');
            }
            if (data.hasOwnProperty('destinationRepositoryOwner')) {
                obj['destinationRepositoryOwner'] = ApiClient.convertToType(data['destinationRepositoryOwner'], 'String');
            }
            if (data.hasOwnProperty('destinationRepositoryName')) {
                obj['destinationRepositoryName'] = ApiClient.convertToType(data['destinationRepositoryName'], 'String');
            }
            if (data.hasOwnProperty('destinationBranchName')) {
                obj['destinationBranchName'] = ApiClient.convertToType(data['destinationBranchName'], 'String');
            }
            if (data.hasOwnProperty('isClosed')) {
                obj['isClosed'] = ApiClient.convertToType(data['isClosed'], 'Boolean');
            }
            if (data.hasOwnProperty('isCrossRepository')) {
                obj['isCrossRepository'] = ApiClient.convertToType(data['isCrossRepository'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScmPullRequestAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScmPullRequestAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['webUrl'] && !(typeof data['webUrl'] === 'string' || data['webUrl'] instanceof String)) {
            throw new Error("Expected the field `webUrl` to be a primitive type in the JSON string but got " + data['webUrl']);
        }
        // ensure the json data is a string
        if (data['sourceRepositoryOwner'] && !(typeof data['sourceRepositoryOwner'] === 'string' || data['sourceRepositoryOwner'] instanceof String)) {
            throw new Error("Expected the field `sourceRepositoryOwner` to be a primitive type in the JSON string but got " + data['sourceRepositoryOwner']);
        }
        // ensure the json data is a string
        if (data['sourceRepositoryName'] && !(typeof data['sourceRepositoryName'] === 'string' || data['sourceRepositoryName'] instanceof String)) {
            throw new Error("Expected the field `sourceRepositoryName` to be a primitive type in the JSON string but got " + data['sourceRepositoryName']);
        }
        // ensure the json data is a string
        if (data['sourceBranchName'] && !(typeof data['sourceBranchName'] === 'string' || data['sourceBranchName'] instanceof String)) {
            throw new Error("Expected the field `sourceBranchName` to be a primitive type in the JSON string but got " + data['sourceBranchName']);
        }
        // ensure the json data is a string
        if (data['destinationRepositoryOwner'] && !(typeof data['destinationRepositoryOwner'] === 'string' || data['destinationRepositoryOwner'] instanceof String)) {
            throw new Error("Expected the field `destinationRepositoryOwner` to be a primitive type in the JSON string but got " + data['destinationRepositoryOwner']);
        }
        // ensure the json data is a string
        if (data['destinationRepositoryName'] && !(typeof data['destinationRepositoryName'] === 'string' || data['destinationRepositoryName'] instanceof String)) {
            throw new Error("Expected the field `destinationRepositoryName` to be a primitive type in the JSON string but got " + data['destinationRepositoryName']);
        }
        // ensure the json data is a string
        if (data['destinationBranchName'] && !(typeof data['destinationBranchName'] === 'string' || data['destinationBranchName'] instanceof String)) {
            throw new Error("Expected the field `destinationBranchName` to be a primitive type in the JSON string but got " + data['destinationBranchName']);
        }

        return true;
    }


}



/**
 * @member {String} title
 */
ScmPullRequestAttributes.prototype['title'] = undefined;

/**
 * @member {Number} number
 */
ScmPullRequestAttributes.prototype['number'] = undefined;

/**
 * @member {String} webUrl
 */
ScmPullRequestAttributes.prototype['webUrl'] = undefined;

/**
 * @member {String} sourceRepositoryOwner
 */
ScmPullRequestAttributes.prototype['sourceRepositoryOwner'] = undefined;

/**
 * @member {String} sourceRepositoryName
 */
ScmPullRequestAttributes.prototype['sourceRepositoryName'] = undefined;

/**
 * @member {String} sourceBranchName
 */
ScmPullRequestAttributes.prototype['sourceBranchName'] = undefined;

/**
 * @member {String} destinationRepositoryOwner
 */
ScmPullRequestAttributes.prototype['destinationRepositoryOwner'] = undefined;

/**
 * @member {String} destinationRepositoryName
 */
ScmPullRequestAttributes.prototype['destinationRepositoryName'] = undefined;

/**
 * @member {String} destinationBranchName
 */
ScmPullRequestAttributes.prototype['destinationBranchName'] = undefined;

/**
 * @member {Boolean} isClosed
 */
ScmPullRequestAttributes.prototype['isClosed'] = undefined;

/**
 * @member {Boolean} isCrossRepository
 */
ScmPullRequestAttributes.prototype['isCrossRepository'] = undefined;






export default ScmPullRequestAttributes;

