/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.AppStoreVersionExperimentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppStoreVersionExperimentsApi', function() {
    describe('appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated', function() {
      it('should call appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated
        //instance.appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelationship', function() {
      it('should call appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelationship
        //instance.appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsCreateInstance', function() {
      it('should call appStoreVersionExperimentsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsCreateInstance
        //instance.appStoreVersionExperimentsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsDeleteInstance', function() {
      it('should call appStoreVersionExperimentsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsDeleteInstance
        //instance.appStoreVersionExperimentsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsGetInstance', function() {
      it('should call appStoreVersionExperimentsGetInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsGetInstance
        //instance.appStoreVersionExperimentsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsUpdateInstance', function() {
      it('should call appStoreVersionExperimentsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsUpdateInstance
        //instance.appStoreVersionExperimentsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated', function() {
      it('should call appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated
        //instance.appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelationship', function() {
      it('should call appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelationship
        //instance.appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2CreateInstance', function() {
      it('should call appStoreVersionExperimentsV2CreateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2CreateInstance
        //instance.appStoreVersionExperimentsV2CreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2DeleteInstance', function() {
      it('should call appStoreVersionExperimentsV2DeleteInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2DeleteInstance
        //instance.appStoreVersionExperimentsV2DeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2GetInstance', function() {
      it('should call appStoreVersionExperimentsV2GetInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2GetInstance
        //instance.appStoreVersionExperimentsV2GetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('appStoreVersionExperimentsV2UpdateInstance', function() {
      it('should call appStoreVersionExperimentsV2UpdateInstance successfully', function(done) {
        //uncomment below and update the code to test appStoreVersionExperimentsV2UpdateInstance
        //instance.appStoreVersionExperimentsV2UpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
