/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.GameCenterActivitiesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GameCenterActivitiesApi', function() {
    describe('gameCenterActivitiesAchievementsCreateToManyRelationship', function() {
      it('should call gameCenterActivitiesAchievementsCreateToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesAchievementsCreateToManyRelationship
        //instance.gameCenterActivitiesAchievementsCreateToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesAchievementsDeleteToManyRelationship', function() {
      it('should call gameCenterActivitiesAchievementsDeleteToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesAchievementsDeleteToManyRelationship
        //instance.gameCenterActivitiesAchievementsDeleteToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesCreateInstance', function() {
      it('should call gameCenterActivitiesCreateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesCreateInstance
        //instance.gameCenterActivitiesCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesDeleteInstance', function() {
      it('should call gameCenterActivitiesDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesDeleteInstance
        //instance.gameCenterActivitiesDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesGetInstance', function() {
      it('should call gameCenterActivitiesGetInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesGetInstance
        //instance.gameCenterActivitiesGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesLeaderboardsCreateToManyRelationship', function() {
      it('should call gameCenterActivitiesLeaderboardsCreateToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesLeaderboardsCreateToManyRelationship
        //instance.gameCenterActivitiesLeaderboardsCreateToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesLeaderboardsDeleteToManyRelationship', function() {
      it('should call gameCenterActivitiesLeaderboardsDeleteToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesLeaderboardsDeleteToManyRelationship
        //instance.gameCenterActivitiesLeaderboardsDeleteToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesUpdateInstance', function() {
      it('should call gameCenterActivitiesUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesUpdateInstance
        //instance.gameCenterActivitiesUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesVersionsGetToManyRelated', function() {
      it('should call gameCenterActivitiesVersionsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesVersionsGetToManyRelated
        //instance.gameCenterActivitiesVersionsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterActivitiesVersionsGetToManyRelationship', function() {
      it('should call gameCenterActivitiesVersionsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterActivitiesVersionsGetToManyRelationship
        //instance.gameCenterActivitiesVersionsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
