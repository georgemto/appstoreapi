/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.GameCenterLeaderboardsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GameCenterLeaderboardsApi', function() {
    describe('gameCenterLeaderboardsActivityUpdateToOneRelationship', function() {
      it('should call gameCenterLeaderboardsActivityUpdateToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsActivityUpdateToOneRelationship
        //instance.gameCenterLeaderboardsActivityUpdateToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsChallengeUpdateToOneRelationship', function() {
      it('should call gameCenterLeaderboardsChallengeUpdateToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsChallengeUpdateToOneRelationship
        //instance.gameCenterLeaderboardsChallengeUpdateToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsCreateInstance', function() {
      it('should call gameCenterLeaderboardsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsCreateInstance
        //instance.gameCenterLeaderboardsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsDeleteInstance', function() {
      it('should call gameCenterLeaderboardsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsDeleteInstance
        //instance.gameCenterLeaderboardsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsGetInstance', function() {
      it('should call gameCenterLeaderboardsGetInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsGetInstance
        //instance.gameCenterLeaderboardsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsGroupLeaderboardGetToOneRelated', function() {
      it('should call gameCenterLeaderboardsGroupLeaderboardGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsGroupLeaderboardGetToOneRelated
        //instance.gameCenterLeaderboardsGroupLeaderboardGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship', function() {
      it('should call gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship
        //instance.gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship', function() {
      it('should call gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship
        //instance.gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsLocalizationsGetToManyRelated', function() {
      it('should call gameCenterLeaderboardsLocalizationsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsLocalizationsGetToManyRelated
        //instance.gameCenterLeaderboardsLocalizationsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsLocalizationsGetToManyRelationship', function() {
      it('should call gameCenterLeaderboardsLocalizationsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsLocalizationsGetToManyRelationship
        //instance.gameCenterLeaderboardsLocalizationsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsReleasesGetToManyRelated', function() {
      it('should call gameCenterLeaderboardsReleasesGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsReleasesGetToManyRelated
        //instance.gameCenterLeaderboardsReleasesGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsReleasesGetToManyRelationship', function() {
      it('should call gameCenterLeaderboardsReleasesGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsReleasesGetToManyRelationship
        //instance.gameCenterLeaderboardsReleasesGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterLeaderboardsUpdateInstance', function() {
      it('should call gameCenterLeaderboardsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterLeaderboardsUpdateInstance
        //instance.gameCenterLeaderboardsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
