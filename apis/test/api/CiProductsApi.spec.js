/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.CiProductsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CiProductsApi', function() {
    describe('ciProductsAdditionalRepositoriesGetToManyRelated', function() {
      it('should call ciProductsAdditionalRepositoriesGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test ciProductsAdditionalRepositoriesGetToManyRelated
        //instance.ciProductsAdditionalRepositoriesGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsAdditionalRepositoriesGetToManyRelationship', function() {
      it('should call ciProductsAdditionalRepositoriesGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test ciProductsAdditionalRepositoriesGetToManyRelationship
        //instance.ciProductsAdditionalRepositoriesGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsAppGetToOneRelated', function() {
      it('should call ciProductsAppGetToOneRelated successfully', function(done) {
        //uncomment below and update the code to test ciProductsAppGetToOneRelated
        //instance.ciProductsAppGetToOneRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsAppGetToOneRelationship', function() {
      it('should call ciProductsAppGetToOneRelationship successfully', function(done) {
        //uncomment below and update the code to test ciProductsAppGetToOneRelationship
        //instance.ciProductsAppGetToOneRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsBuildRunsGetToManyRelated', function() {
      it('should call ciProductsBuildRunsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test ciProductsBuildRunsGetToManyRelated
        //instance.ciProductsBuildRunsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsBuildRunsGetToManyRelationship', function() {
      it('should call ciProductsBuildRunsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test ciProductsBuildRunsGetToManyRelationship
        //instance.ciProductsBuildRunsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsDeleteInstance', function() {
      it('should call ciProductsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test ciProductsDeleteInstance
        //instance.ciProductsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsGetCollection', function() {
      it('should call ciProductsGetCollection successfully', function(done) {
        //uncomment below and update the code to test ciProductsGetCollection
        //instance.ciProductsGetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsGetInstance', function() {
      it('should call ciProductsGetInstance successfully', function(done) {
        //uncomment below and update the code to test ciProductsGetInstance
        //instance.ciProductsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsPrimaryRepositoriesGetToManyRelated', function() {
      it('should call ciProductsPrimaryRepositoriesGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test ciProductsPrimaryRepositoriesGetToManyRelated
        //instance.ciProductsPrimaryRepositoriesGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsPrimaryRepositoriesGetToManyRelationship', function() {
      it('should call ciProductsPrimaryRepositoriesGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test ciProductsPrimaryRepositoriesGetToManyRelationship
        //instance.ciProductsPrimaryRepositoriesGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsWorkflowsGetToManyRelated', function() {
      it('should call ciProductsWorkflowsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test ciProductsWorkflowsGetToManyRelated
        //instance.ciProductsWorkflowsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ciProductsWorkflowsGetToManyRelationship', function() {
      it('should call ciProductsWorkflowsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test ciProductsWorkflowsGetToManyRelationship
        //instance.ciProductsWorkflowsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
