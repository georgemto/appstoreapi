/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.GameCenterGroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GameCenterGroupsApi', function() {
    describe('gameCenterGroupsCreateInstance', function() {
      it('should call gameCenterGroupsCreateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsCreateInstance
        //instance.gameCenterGroupsCreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsDeleteInstance', function() {
      it('should call gameCenterGroupsDeleteInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsDeleteInstance
        //instance.gameCenterGroupsDeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterAchievementsGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterAchievementsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterAchievementsGetToManyRelated
        //instance.gameCenterGroupsGameCenterAchievementsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterAchievementsGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterAchievementsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterAchievementsGetToManyRelationship
        //instance.gameCenterGroupsGameCenterAchievementsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship
        //instance.gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterActivitiesGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterActivitiesGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterActivitiesGetToManyRelated
        //instance.gameCenterGroupsGameCenterActivitiesGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterActivitiesGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterActivitiesGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterActivitiesGetToManyRelationship
        //instance.gameCenterGroupsGameCenterActivitiesGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterChallengesGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterChallengesGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterChallengesGetToManyRelated
        //instance.gameCenterGroupsGameCenterChallengesGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterChallengesGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterChallengesGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterChallengesGetToManyRelationship
        //instance.gameCenterGroupsGameCenterChallengesGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterDetailsGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterDetailsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterDetailsGetToManyRelated
        //instance.gameCenterGroupsGameCenterDetailsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterDetailsGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterDetailsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterDetailsGetToManyRelationship
        //instance.gameCenterGroupsGameCenterDetailsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated
        //instance.gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship
        //instance.gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship
        //instance.gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardsGetToManyRelated', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardsGetToManyRelated successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardsGetToManyRelated
        //instance.gameCenterGroupsGameCenterLeaderboardsGetToManyRelated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship
        //instance.gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship', function() {
      it('should call gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship
        //instance.gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGetCollection', function() {
      it('should call gameCenterGroupsGetCollection successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGetCollection
        //instance.gameCenterGroupsGetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsGetInstance', function() {
      it('should call gameCenterGroupsGetInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsGetInstance
        //instance.gameCenterGroupsGetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gameCenterGroupsUpdateInstance', function() {
      it('should call gameCenterGroupsUpdateInstance successfully', function(done) {
        //uncomment below and update the code to test gameCenterGroupsUpdateInstance
        //instance.gameCenterGroupsUpdateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
