/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccessibilityDeclarationAttributes', function() {
    it('should create an instance of AccessibilityDeclarationAttributes', function() {
      // uncomment below and update the code to test AccessibilityDeclarationAttributes
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be.a(AppStoreConnectApi.AccessibilityDeclarationAttributes);
    });

    it('should have the property deviceFamily (base name: "deviceFamily")', function() {
      // uncomment below and update the code to test the property deviceFamily
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsAudioDescriptions (base name: "supportsAudioDescriptions")', function() {
      // uncomment below and update the code to test the property supportsAudioDescriptions
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsCaptions (base name: "supportsCaptions")', function() {
      // uncomment below and update the code to test the property supportsCaptions
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsDarkInterface (base name: "supportsDarkInterface")', function() {
      // uncomment below and update the code to test the property supportsDarkInterface
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsDifferentiateWithoutColorAlone (base name: "supportsDifferentiateWithoutColorAlone")', function() {
      // uncomment below and update the code to test the property supportsDifferentiateWithoutColorAlone
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsLargerText (base name: "supportsLargerText")', function() {
      // uncomment below and update the code to test the property supportsLargerText
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsReducedMotion (base name: "supportsReducedMotion")', function() {
      // uncomment below and update the code to test the property supportsReducedMotion
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsSufficientContrast (base name: "supportsSufficientContrast")', function() {
      // uncomment below and update the code to test the property supportsSufficientContrast
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsVoiceControl (base name: "supportsVoiceControl")', function() {
      // uncomment below and update the code to test the property supportsVoiceControl
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportsVoiceover (base name: "supportsVoiceover")', function() {
      // uncomment below and update the code to test the property supportsVoiceover
      //var instance = new AppStoreConnectApi.AccessibilityDeclarationAttributes();
      //expect(instance).to.be();
    });

  });

}));
