/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GameCenterLeaderboardRelationships', function() {
    it('should create an instance of GameCenterLeaderboardRelationships', function() {
      // uncomment below and update the code to test GameCenterLeaderboardRelationships
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be.a(AppStoreConnectApi.GameCenterLeaderboardRelationships);
    });

    it('should have the property gameCenterDetail (base name: "gameCenterDetail")', function() {
      // uncomment below and update the code to test the property gameCenterDetail
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property gameCenterGroup (base name: "gameCenterGroup")', function() {
      // uncomment below and update the code to test the property gameCenterGroup
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property groupLeaderboard (base name: "groupLeaderboard")', function() {
      // uncomment below and update the code to test the property groupLeaderboard
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property gameCenterLeaderboardSets (base name: "gameCenterLeaderboardSets")', function() {
      // uncomment below and update the code to test the property gameCenterLeaderboardSets
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property localizations (base name: "localizations")', function() {
      // uncomment below and update the code to test the property localizations
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property releases (base name: "releases")', function() {
      // uncomment below and update the code to test the property releases
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property activity (base name: "activity")', function() {
      // uncomment below and update the code to test the property activity
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

    it('should have the property challenge (base name: "challenge")', function() {
      // uncomment below and update the code to test the property challenge
      //var instance = new AppStoreConnectApi.GameCenterLeaderboardRelationships();
      //expect(instance).to.be();
    });

  });

}));
