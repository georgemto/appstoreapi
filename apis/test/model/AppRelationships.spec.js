/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.AppRelationships();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppRelationships', function() {
    it('should create an instance of AppRelationships', function() {
      // uncomment below and update the code to test AppRelationships
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be.a(AppStoreConnectApi.AppRelationships);
    });

    it('should have the property accessibilityDeclarations (base name: "accessibilityDeclarations")', function() {
      // uncomment below and update the code to test the property accessibilityDeclarations
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appEncryptionDeclarations (base name: "appEncryptionDeclarations")', function() {
      // uncomment below and update the code to test the property appEncryptionDeclarations
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property ciProduct (base name: "ciProduct")', function() {
      // uncomment below and update the code to test the property ciProduct
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaTesters (base name: "betaTesters")', function() {
      // uncomment below and update the code to test the property betaTesters
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaGroups (base name: "betaGroups")', function() {
      // uncomment below and update the code to test the property betaGroups
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appStoreVersions (base name: "appStoreVersions")', function() {
      // uncomment below and update the code to test the property appStoreVersions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appTags (base name: "appTags")', function() {
      // uncomment below and update the code to test the property appTags
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property preReleaseVersions (base name: "preReleaseVersions")', function() {
      // uncomment below and update the code to test the property preReleaseVersions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaAppLocalizations (base name: "betaAppLocalizations")', function() {
      // uncomment below and update the code to test the property betaAppLocalizations
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property builds (base name: "builds")', function() {
      // uncomment below and update the code to test the property builds
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaLicenseAgreement (base name: "betaLicenseAgreement")', function() {
      // uncomment below and update the code to test the property betaLicenseAgreement
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaAppReviewDetail (base name: "betaAppReviewDetail")', function() {
      // uncomment below and update the code to test the property betaAppReviewDetail
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appInfos (base name: "appInfos")', function() {
      // uncomment below and update the code to test the property appInfos
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appClips (base name: "appClips")', function() {
      // uncomment below and update the code to test the property appClips
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appPricePoints (base name: "appPricePoints")', function() {
      // uncomment below and update the code to test the property appPricePoints
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property endUserLicenseAgreement (base name: "endUserLicenseAgreement")', function() {
      // uncomment below and update the code to test the property endUserLicenseAgreement
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appPriceSchedule (base name: "appPriceSchedule")', function() {
      // uncomment below and update the code to test the property appPriceSchedule
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appAvailabilityV2 (base name: "appAvailabilityV2")', function() {
      // uncomment below and update the code to test the property appAvailabilityV2
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property inAppPurchases (base name: "inAppPurchases")', function() {
      // uncomment below and update the code to test the property inAppPurchases
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionGroups (base name: "subscriptionGroups")', function() {
      // uncomment below and update the code to test the property subscriptionGroups
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property gameCenterEnabledVersions (base name: "gameCenterEnabledVersions")', function() {
      // uncomment below and update the code to test the property gameCenterEnabledVersions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property perfPowerMetrics (base name: "perfPowerMetrics")', function() {
      // uncomment below and update the code to test the property perfPowerMetrics
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appCustomProductPages (base name: "appCustomProductPages")', function() {
      // uncomment below and update the code to test the property appCustomProductPages
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property inAppPurchasesV2 (base name: "inAppPurchasesV2")', function() {
      // uncomment below and update the code to test the property inAppPurchasesV2
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property promotedPurchases (base name: "promotedPurchases")', function() {
      // uncomment below and update the code to test the property promotedPurchases
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appEvents (base name: "appEvents")', function() {
      // uncomment below and update the code to test the property appEvents
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property reviewSubmissions (base name: "reviewSubmissions")', function() {
      // uncomment below and update the code to test the property reviewSubmissions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionGracePeriod (base name: "subscriptionGracePeriod")', function() {
      // uncomment below and update the code to test the property subscriptionGracePeriod
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property customerReviews (base name: "customerReviews")', function() {
      // uncomment below and update the code to test the property customerReviews
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property customerReviewSummarizations (base name: "customerReviewSummarizations")', function() {
      // uncomment below and update the code to test the property customerReviewSummarizations
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property gameCenterDetail (base name: "gameCenterDetail")', function() {
      // uncomment below and update the code to test the property gameCenterDetail
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property appStoreVersionExperimentsV2 (base name: "appStoreVersionExperimentsV2")', function() {
      // uncomment below and update the code to test the property appStoreVersionExperimentsV2
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property alternativeDistributionKey (base name: "alternativeDistributionKey")', function() {
      // uncomment below and update the code to test the property alternativeDistributionKey
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property analyticsReportRequests (base name: "analyticsReportRequests")', function() {
      // uncomment below and update the code to test the property analyticsReportRequests
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceSearchDetail (base name: "marketplaceSearchDetail")', function() {
      // uncomment below and update the code to test the property marketplaceSearchDetail
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property buildUploads (base name: "buildUploads")', function() {
      // uncomment below and update the code to test the property buildUploads
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property backgroundAssets (base name: "backgroundAssets")', function() {
      // uncomment below and update the code to test the property backgroundAssets
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaFeedbackScreenshotSubmissions (base name: "betaFeedbackScreenshotSubmissions")', function() {
      // uncomment below and update the code to test the property betaFeedbackScreenshotSubmissions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property betaFeedbackCrashSubmissions (base name: "betaFeedbackCrashSubmissions")', function() {
      // uncomment below and update the code to test the property betaFeedbackCrashSubmissions
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property searchKeywords (base name: "searchKeywords")', function() {
      // uncomment below and update the code to test the property searchKeywords
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

    it('should have the property webhooks (base name: "webhooks")', function() {
      // uncomment below and update the code to test the property webhooks
      //var instance = new AppStoreConnectApi.AppRelationships();
      //expect(instance).to.be();
    });

  });

}));
