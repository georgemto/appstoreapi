/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.BuildBundleAttributes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BuildBundleAttributes', function() {
    it('should create an instance of BuildBundleAttributes', function() {
      // uncomment below and update the code to test BuildBundleAttributes
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be.a(AppStoreConnectApi.BuildBundleAttributes);
    });

    it('should have the property bundleId (base name: "bundleId")', function() {
      // uncomment below and update the code to test the property bundleId
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property bundleType (base name: "bundleType")', function() {
      // uncomment below and update the code to test the property bundleType
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property sdkBuild (base name: "sdkBuild")', function() {
      // uncomment below and update the code to test the property sdkBuild
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property platformBuild (base name: "platformBuild")', function() {
      // uncomment below and update the code to test the property platformBuild
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property fileName (base name: "fileName")', function() {
      // uncomment below and update the code to test the property fileName
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property hasSirikit (base name: "hasSirikit")', function() {
      // uncomment below and update the code to test the property hasSirikit
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property hasOnDemandResources (base name: "hasOnDemandResources")', function() {
      // uncomment below and update the code to test the property hasOnDemandResources
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property hasPrerenderedIcon (base name: "hasPrerenderedIcon")', function() {
      // uncomment below and update the code to test the property hasPrerenderedIcon
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property usesLocationServices (base name: "usesLocationServices")', function() {
      // uncomment below and update the code to test the property usesLocationServices
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property isIosBuildMacAppStoreCompatible (base name: "isIosBuildMacAppStoreCompatible")', function() {
      // uncomment below and update the code to test the property isIosBuildMacAppStoreCompatible
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property includesSymbols (base name: "includesSymbols")', function() {
      // uncomment below and update the code to test the property includesSymbols
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property dSYMUrl (base name: "dSYMUrl")', function() {
      // uncomment below and update the code to test the property dSYMUrl
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property supportedArchitectures (base name: "supportedArchitectures")', function() {
      // uncomment below and update the code to test the property supportedArchitectures
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property requiredCapabilities (base name: "requiredCapabilities")', function() {
      // uncomment below and update the code to test the property requiredCapabilities
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property deviceProtocols (base name: "deviceProtocols")', function() {
      // uncomment below and update the code to test the property deviceProtocols
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property locales (base name: "locales")', function() {
      // uncomment below and update the code to test the property locales
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property entitlements (base name: "entitlements")', function() {
      // uncomment below and update the code to test the property entitlements
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property baDownloadAllowance (base name: "baDownloadAllowance")', function() {
      // uncomment below and update the code to test the property baDownloadAllowance
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

    it('should have the property baMaxInstallSize (base name: "baMaxInstallSize")', function() {
      // uncomment below and update the code to test the property baMaxInstallSize
      //var instance = new AppStoreConnectApi.BuildBundleAttributes();
      //expect(instance).to.be();
    });

  });

}));
