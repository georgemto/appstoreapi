/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppStoreConnectApi);
  }
}(this, function(expect, AppStoreConnectApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BetaFeedbackCrashSubmissionAttributes', function() {
    it('should create an instance of BetaFeedbackCrashSubmissionAttributes', function() {
      // uncomment below and update the code to test BetaFeedbackCrashSubmissionAttributes
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be.a(AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes);
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property deviceModel (base name: "deviceModel")', function() {
      // uncomment below and update the code to test the property deviceModel
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property osVersion (base name: "osVersion")', function() {
      // uncomment below and update the code to test the property osVersion
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property architecture (base name: "architecture")', function() {
      // uncomment below and update the code to test the property architecture
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property connectionType (base name: "connectionType")', function() {
      // uncomment below and update the code to test the property connectionType
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property pairedAppleWatch (base name: "pairedAppleWatch")', function() {
      // uncomment below and update the code to test the property pairedAppleWatch
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property appUptimeInMilliseconds (base name: "appUptimeInMilliseconds")', function() {
      // uncomment below and update the code to test the property appUptimeInMilliseconds
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property diskBytesAvailable (base name: "diskBytesAvailable")', function() {
      // uncomment below and update the code to test the property diskBytesAvailable
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property diskBytesTotal (base name: "diskBytesTotal")', function() {
      // uncomment below and update the code to test the property diskBytesTotal
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property batteryPercentage (base name: "batteryPercentage")', function() {
      // uncomment below and update the code to test the property batteryPercentage
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property screenWidthInPoints (base name: "screenWidthInPoints")', function() {
      // uncomment below and update the code to test the property screenWidthInPoints
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property screenHeightInPoints (base name: "screenHeightInPoints")', function() {
      // uncomment below and update the code to test the property screenHeightInPoints
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property appPlatform (base name: "appPlatform")', function() {
      // uncomment below and update the code to test the property appPlatform
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property devicePlatform (base name: "devicePlatform")', function() {
      // uncomment below and update the code to test the property devicePlatform
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property deviceFamily (base name: "deviceFamily")', function() {
      // uncomment below and update the code to test the property deviceFamily
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

    it('should have the property buildBundleId (base name: "buildBundleId")', function() {
      // uncomment below and update the code to test the property buildBundleId
      //var instance = new AppStoreConnectApi.BetaFeedbackCrashSubmissionAttributes();
      //expect(instance).to.be();
    });

  });

}));
